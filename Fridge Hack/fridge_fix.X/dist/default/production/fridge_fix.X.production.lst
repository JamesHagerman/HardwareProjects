

Microchip Technology PIC LITE Macro Assembler V1.10 build 47796 
                                                                                               Mon Nov  5 16:39:36 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	12F683
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    43  0000                     INDF equ 00h ;# 
    44                           # 52 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    45  0001                     TMR0 equ 01h ;# 
    46                           # 58 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    47  0002                     PCL equ 02h ;# 
    48                           # 64 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    49  0003                     STATUS equ 03h ;# 
    50                           # 151 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    51  0004                     FSR equ 04h ;# 
    52                           # 157 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    53  0005                     GPIO equ 05h ;# 
    54                           # 206 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    55  000A                     PCLATH equ 0Ah ;# 
    56                           # 225 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    57  000B                     INTCON equ 0Bh ;# 
    58                           # 302 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    59  000C                     PIR1 equ 0Ch ;# 
    60                           # 372 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    61  000E                     TMR1 equ 0Eh ;# 
    62                           # 378 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    63  000E                     TMR1L equ 0Eh ;# 
    64                           # 384 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    65  000F                     TMR1H equ 0Fh ;# 
    66                           # 390 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    67  0010                     T1CON equ 010h ;# 
    68                           # 466 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    69  0011                     TMR2 equ 011h ;# 
    70                           # 472 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    71  0012                     T2CON equ 012h ;# 
    72                           # 542 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    73  0013                     CCPR1 equ 013h ;# 
    74                           # 548 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    75  0013                     CCPR1L equ 013h ;# 
    76                           # 554 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    77  0014                     CCPR1H equ 014h ;# 
    78                           # 560 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    79  0015                     CCP1CON equ 015h ;# 
    80                           # 623 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    81  0018                     WDTCON equ 018h ;# 
    82                           # 675 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    83  0019                     CMCON0 equ 019h ;# 
    84                           # 733 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    85  001A                     CMCON1 equ 01Ah ;# 
    86                           # 758 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    87  001E                     ADRESH equ 01Eh ;# 
    88                           # 764 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    89  001F                     ADCON0 equ 01Fh ;# 
    90                           # 853 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    91  0081                     OPTION_REG equ 081h ;# 
    92                           # 922 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    93  0085                     TRISIO equ 085h ;# 
    94                           # 971 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    95  008C                     PIE1 equ 08Ch ;# 
    96                           # 1041 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    97  008E                     PCON equ 08Eh ;# 
    98                           # 1079 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
    99  008F                     OSCCON equ 08Fh ;# 
   100                           # 1143 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   101  0090                     OSCTUNE equ 090h ;# 
   102                           # 1194 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   103  0092                     PR2 equ 092h ;# 
   104                           # 1200 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   105  0095                     WPU equ 095h ;# 
   106                           # 1205 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   107  0095                     WPUA equ 095h ;# 
   108                           # 1353 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   109  0096                     IOC equ 096h ;# 
   110                           # 1358 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   111  0096                     IOCA equ 096h ;# 
   112                           # 1526 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   113  0099                     VRCON equ 099h ;# 
   114                           # 1585 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   115  009A                     EEDAT equ 09Ah ;# 
   116                           # 1590 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   117  009A                     EEDATA equ 09Ah ;# 
   118                           # 1622 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   119  009B                     EEADR equ 09Bh ;# 
   120                           # 1628 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   121  009C                     EECON1 equ 09Ch ;# 
   122                           # 1665 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   123  009D                     EECON2 equ 09Dh ;# 
   124                           # 1671 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   125  009E                     ADRESL equ 09Eh ;# 
   126                           # 1677 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   127  009F                     ANSEL equ 09Fh ;# 
   128                           # 46 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   129  0000                     INDF equ 00h ;# 
   130                           # 52 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   131  0001                     TMR0 equ 01h ;# 
   132                           # 58 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   133  0002                     PCL equ 02h ;# 
   134                           # 64 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   135  0003                     STATUS equ 03h ;# 
   136                           # 151 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   137  0004                     FSR equ 04h ;# 
   138                           # 157 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   139  0005                     GPIO equ 05h ;# 
   140                           # 206 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   141  000A                     PCLATH equ 0Ah ;# 
   142                           # 225 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   143  000B                     INTCON equ 0Bh ;# 
   144                           # 302 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   145  000C                     PIR1 equ 0Ch ;# 
   146                           # 372 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   147  000E                     TMR1 equ 0Eh ;# 
   148                           # 378 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   149  000E                     TMR1L equ 0Eh ;# 
   150                           # 384 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   151  000F                     TMR1H equ 0Fh ;# 
   152                           # 390 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   153  0010                     T1CON equ 010h ;# 
   154                           # 466 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   155  0011                     TMR2 equ 011h ;# 
   156                           # 472 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   157  0012                     T2CON equ 012h ;# 
   158                           # 542 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   159  0013                     CCPR1 equ 013h ;# 
   160                           # 548 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   161  0013                     CCPR1L equ 013h ;# 
   162                           # 554 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   163  0014                     CCPR1H equ 014h ;# 
   164                           # 560 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   165  0015                     CCP1CON equ 015h ;# 
   166                           # 623 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   167  0018                     WDTCON equ 018h ;# 
   168                           # 675 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   169  0019                     CMCON0 equ 019h ;# 
   170                           # 733 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   171  001A                     CMCON1 equ 01Ah ;# 
   172                           # 758 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   173  001E                     ADRESH equ 01Eh ;# 
   174                           # 764 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   175  001F                     ADCON0 equ 01Fh ;# 
   176                           # 853 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   177  0081                     OPTION_REG equ 081h ;# 
   178                           # 922 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   179  0085                     TRISIO equ 085h ;# 
   180                           # 971 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   181  008C                     PIE1 equ 08Ch ;# 
   182                           # 1041 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   183  008E                     PCON equ 08Eh ;# 
   184                           # 1079 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   185  008F                     OSCCON equ 08Fh ;# 
   186                           # 1143 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   187  0090                     OSCTUNE equ 090h ;# 
   188                           # 1194 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   189  0092                     PR2 equ 092h ;# 
   190                           # 1200 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   191  0095                     WPU equ 095h ;# 
   192                           # 1205 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   193  0095                     WPUA equ 095h ;# 
   194                           # 1353 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   195  0096                     IOC equ 096h ;# 
   196                           # 1358 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   197  0096                     IOCA equ 096h ;# 
   198                           # 1526 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   199  0099                     VRCON equ 099h ;# 
   200                           # 1585 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   201  009A                     EEDAT equ 09Ah ;# 
   202                           # 1590 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   203  009A                     EEDATA equ 09Ah ;# 
   204                           # 1622 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   205  009B                     EEADR equ 09Bh ;# 
   206                           # 1628 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   207  009C                     EECON1 equ 09Ch ;# 
   208                           # 1665 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   209  009D                     EECON2 equ 09Dh ;# 
   210                           # 1671 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   211  009E                     ADRESL equ 09Eh ;# 
   212                           # 1677 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   213  009F                     ANSEL equ 09Fh ;# 
   214                           # 46 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   215  0000                     INDF equ 00h ;# 
   216                           # 52 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   217  0001                     TMR0 equ 01h ;# 
   218                           # 58 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   219  0002                     PCL equ 02h ;# 
   220                           # 64 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   221  0003                     STATUS equ 03h ;# 
   222                           # 151 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   223  0004                     FSR equ 04h ;# 
   224                           # 157 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   225  0005                     GPIO equ 05h ;# 
   226                           # 206 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   227  000A                     PCLATH equ 0Ah ;# 
   228                           # 225 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   229  000B                     INTCON equ 0Bh ;# 
   230                           # 302 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   231  000C                     PIR1 equ 0Ch ;# 
   232                           # 372 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   233  000E                     TMR1 equ 0Eh ;# 
   234                           # 378 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   235  000E                     TMR1L equ 0Eh ;# 
   236                           # 384 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   237  000F                     TMR1H equ 0Fh ;# 
   238                           # 390 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   239  0010                     T1CON equ 010h ;# 
   240                           # 466 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   241  0011                     TMR2 equ 011h ;# 
   242                           # 472 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   243  0012                     T2CON equ 012h ;# 
   244                           # 542 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   245  0013                     CCPR1 equ 013h ;# 
   246                           # 548 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   247  0013                     CCPR1L equ 013h ;# 
   248                           # 554 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   249  0014                     CCPR1H equ 014h ;# 
   250                           # 560 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   251  0015                     CCP1CON equ 015h ;# 
   252                           # 623 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   253  0018                     WDTCON equ 018h ;# 
   254                           # 675 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   255  0019                     CMCON0 equ 019h ;# 
   256                           # 733 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   257  001A                     CMCON1 equ 01Ah ;# 
   258                           # 758 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   259  001E                     ADRESH equ 01Eh ;# 
   260                           # 764 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   261  001F                     ADCON0 equ 01Fh ;# 
   262                           # 853 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   263  0081                     OPTION_REG equ 081h ;# 
   264                           # 922 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   265  0085                     TRISIO equ 085h ;# 
   266                           # 971 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   267  008C                     PIE1 equ 08Ch ;# 
   268                           # 1041 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   269  008E                     PCON equ 08Eh ;# 
   270                           # 1079 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   271  008F                     OSCCON equ 08Fh ;# 
   272                           # 1143 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   273  0090                     OSCTUNE equ 090h ;# 
   274                           # 1194 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   275  0092                     PR2 equ 092h ;# 
   276                           # 1200 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   277  0095                     WPU equ 095h ;# 
   278                           # 1205 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   279  0095                     WPUA equ 095h ;# 
   280                           # 1353 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   281  0096                     IOC equ 096h ;# 
   282                           # 1358 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   283  0096                     IOCA equ 096h ;# 
   284                           # 1526 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   285  0099                     VRCON equ 099h ;# 
   286                           # 1585 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   287  009A                     EEDAT equ 09Ah ;# 
   288                           # 1590 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   289  009A                     EEDATA equ 09Ah ;# 
   290                           # 1622 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   291  009B                     EEADR equ 09Bh ;# 
   292                           # 1628 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   293  009C                     EECON1 equ 09Ch ;# 
   294                           # 1665 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   295  009D                     EECON2 equ 09Dh ;# 
   296                           # 1671 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   297  009E                     ADRESL equ 09Eh ;# 
   298                           # 1677 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   299  009F                     ANSEL equ 09Fh ;# 
   300                           # 46 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   301  0000                     INDF equ 00h ;# 
   302                           # 52 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   303  0001                     TMR0 equ 01h ;# 
   304                           # 58 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   305  0002                     PCL equ 02h ;# 
   306                           # 64 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   307  0003                     STATUS equ 03h ;# 
   308                           # 151 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   309  0004                     FSR equ 04h ;# 
   310                           # 157 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   311  0005                     GPIO equ 05h ;# 
   312                           # 206 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   313  000A                     PCLATH equ 0Ah ;# 
   314                           # 225 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   315  000B                     INTCON equ 0Bh ;# 
   316                           # 302 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   317  000C                     PIR1 equ 0Ch ;# 
   318                           # 372 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   319  000E                     TMR1 equ 0Eh ;# 
   320                           # 378 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   321  000E                     TMR1L equ 0Eh ;# 
   322                           # 384 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   323  000F                     TMR1H equ 0Fh ;# 
   324                           # 390 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   325  0010                     T1CON equ 010h ;# 
   326                           # 466 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   327  0011                     TMR2 equ 011h ;# 
   328                           # 472 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   329  0012                     T2CON equ 012h ;# 
   330                           # 542 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   331  0013                     CCPR1 equ 013h ;# 
   332                           # 548 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   333  0013                     CCPR1L equ 013h ;# 
   334                           # 554 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   335  0014                     CCPR1H equ 014h ;# 
   336                           # 560 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   337  0015                     CCP1CON equ 015h ;# 
   338                           # 623 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   339  0018                     WDTCON equ 018h ;# 
   340                           # 675 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   341  0019                     CMCON0 equ 019h ;# 
   342                           # 733 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   343  001A                     CMCON1 equ 01Ah ;# 
   344                           # 758 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   345  001E                     ADRESH equ 01Eh ;# 
   346                           # 764 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   347  001F                     ADCON0 equ 01Fh ;# 
   348                           # 853 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   349  0081                     OPTION_REG equ 081h ;# 
   350                           # 922 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   351  0085                     TRISIO equ 085h ;# 
   352                           # 971 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   353  008C                     PIE1 equ 08Ch ;# 
   354                           # 1041 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   355  008E                     PCON equ 08Eh ;# 
   356                           # 1079 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   357  008F                     OSCCON equ 08Fh ;# 
   358                           # 1143 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   359  0090                     OSCTUNE equ 090h ;# 
   360                           # 1194 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   361  0092                     PR2 equ 092h ;# 
   362                           # 1200 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   363  0095                     WPU equ 095h ;# 
   364                           # 1205 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   365  0095                     WPUA equ 095h ;# 
   366                           # 1353 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   367  0096                     IOC equ 096h ;# 
   368                           # 1358 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   369  0096                     IOCA equ 096h ;# 
   370                           # 1526 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   371  0099                     VRCON equ 099h ;# 
   372                           # 1585 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   373  009A                     EEDAT equ 09Ah ;# 
   374                           # 1590 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   375  009A                     EEDATA equ 09Ah ;# 
   376                           # 1622 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   377  009B                     EEADR equ 09Bh ;# 
   378                           # 1628 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   379  009C                     EECON1 equ 09Ch ;# 
   380                           # 1665 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   381  009D                     EECON2 equ 09Dh ;# 
   382                           # 1671 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   383  009E                     ADRESL equ 09Eh ;# 
   384                           # 1677 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   385  009F                     ANSEL equ 09Fh ;# 
   386                           # 46 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   387  0000                     INDF equ 00h ;# 
   388                           # 52 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   389  0001                     TMR0 equ 01h ;# 
   390                           # 58 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   391  0002                     PCL equ 02h ;# 
   392                           # 64 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   393  0003                     STATUS equ 03h ;# 
   394                           # 151 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   395  0004                     FSR equ 04h ;# 
   396                           # 157 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   397  0005                     GPIO equ 05h ;# 
   398                           # 206 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   399  000A                     PCLATH equ 0Ah ;# 
   400                           # 225 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   401  000B                     INTCON equ 0Bh ;# 
   402                           # 302 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   403  000C                     PIR1 equ 0Ch ;# 
   404                           # 372 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   405  000E                     TMR1 equ 0Eh ;# 
   406                           # 378 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   407  000E                     TMR1L equ 0Eh ;# 
   408                           # 384 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   409  000F                     TMR1H equ 0Fh ;# 
   410                           # 390 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   411  0010                     T1CON equ 010h ;# 
   412                           # 466 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   413  0011                     TMR2 equ 011h ;# 
   414                           # 472 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   415  0012                     T2CON equ 012h ;# 
   416                           # 542 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   417  0013                     CCPR1 equ 013h ;# 
   418                           # 548 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   419  0013                     CCPR1L equ 013h ;# 
   420                           # 554 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   421  0014                     CCPR1H equ 014h ;# 
   422                           # 560 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   423  0015                     CCP1CON equ 015h ;# 
   424                           # 623 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   425  0018                     WDTCON equ 018h ;# 
   426                           # 675 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   427  0019                     CMCON0 equ 019h ;# 
   428                           # 733 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   429  001A                     CMCON1 equ 01Ah ;# 
   430                           # 758 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   431  001E                     ADRESH equ 01Eh ;# 
   432                           # 764 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   433  001F                     ADCON0 equ 01Fh ;# 
   434                           # 853 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   435  0081                     OPTION_REG equ 081h ;# 
   436                           # 922 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   437  0085                     TRISIO equ 085h ;# 
   438                           # 971 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   439  008C                     PIE1 equ 08Ch ;# 
   440                           # 1041 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   441  008E                     PCON equ 08Eh ;# 
   442                           # 1079 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   443  008F                     OSCCON equ 08Fh ;# 
   444                           # 1143 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   445  0090                     OSCTUNE equ 090h ;# 
   446                           # 1194 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   447  0092                     PR2 equ 092h ;# 
   448                           # 1200 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   449  0095                     WPU equ 095h ;# 
   450                           # 1205 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   451  0095                     WPUA equ 095h ;# 
   452                           # 1353 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   453  0096                     IOC equ 096h ;# 
   454                           # 1358 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   455  0096                     IOCA equ 096h ;# 
   456                           # 1526 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   457  0099                     VRCON equ 099h ;# 
   458                           # 1585 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   459  009A                     EEDAT equ 09Ah ;# 
   460                           # 1590 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   461  009A                     EEDATA equ 09Ah ;# 
   462                           # 1622 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   463  009B                     EEADR equ 09Bh ;# 
   464                           # 1628 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   465  009C                     EECON1 equ 09Ch ;# 
   466                           # 1665 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   467  009D                     EECON2 equ 09Dh ;# 
   468                           # 1671 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   469  009E                     ADRESL equ 09Eh ;# 
   470                           # 1677 "/Applications/microchip/xc8/v1.10/include/pic12f683.h"
   471  009F                     ANSEL equ 09Fh ;# 
   472                           	FNCALL	_main,_ConfigureOscillator
   473                           	FNCALL	_main,_InitApp
   474                           	FNCALL	_main,_printf
   475                           	FNCALL	_main,_reset_ow
   476                           	FNCALL	_main,_read_temperature_ow_18B20
   477                           	FNCALL	_read_temperature_ow_18B20,_reset_ow
   478                           	FNCALL	_read_temperature_ow_18B20,_write_byte_ow
   479                           	FNCALL	_read_temperature_ow_18B20,_read_bit_ow
   480                           	FNCALL	_read_temperature_ow_18B20,_read_byte_ow
   481                           	FNCALL	_read_byte_ow,_read_bit_ow
   482                           	FNCALL	_write_byte_ow,_write_bit_ow
   483                           	FNCALL	_printf,_putch
   484                           	FNCALL	_printf,___lwdiv
   485                           	FNCALL	_printf,___lwmod
   486                           	FNCALL	_putch,_DelayTXBitUART
   487                           	FNROOT	_main
   488                           	FNCALL	intlevel1,_isr
   489                           	global	intlevel1
   490                           	FNROOT	intlevel1
   491                           	global	_DS18B20_A
   492                           psect	idataBANK0,class=CODE,space=0,delta=2
   493                           global __pidataBANK0
   494  045E                     __pidataBANK0:
   495                           	file	"main.c"
   496                           	line	117
   497                           
   498                           ;initializer for _DS18B20_A
   499  045E  3428               	retlw	028h
   500  045F  34A5               	retlw	0A5h
   501  0460  34A1               	retlw	0A1h
   502  0461  3446               	retlw	046h
   503  0462  3401               	retlw	01h
   504  0463  3400               	retlw	0
   505  0464  3400               	retlw	0
   506  0465  3415               	retlw	015h
   507  0466  3400               	retlw	0
   508                           	global	_dpowers
   509                           psect	strings,class=STRING,delta=2
   510                           global __pstrings
   511  0010                     __pstrings:
   512                           ;	global	stringdir,stringtab,__stringbase
   513  0010                     stringtab:
   514                           	global    __stringtab
   515  0010                     __stringtab:
   516                           ;	String table - string pointers are 1 byte each
   517  0010                     stringcode:stringdir:
      + 0010                     stringdir:	
   518  0010  3000               movlw high(stringdir)
   519  0011  008A               movwf pclath
   520  0012  0804               movf fsr,w
   521  0013  0A84               incf fsr
   522  0014  0782               	addwf pc
   523  0015                     __stringbase:
   524  0015  3400               	retlw	0
   525                           psect	strings
   526                           	global    __end_of__stringtab
   527  0016                     __end_of__stringtab:
   528                           	file	"/Applications/microchip/xc8/v1.10/sources/doprnt.c"
   529                           	line	354
   530  0016                     _dpowers:
   531  0016  3401               	retlw	01h
   532  0017  3400               	retlw	0
   533                           
   534  0018  340A               	retlw	0Ah
   535  0019  3400               	retlw	0
   536                           
   537  001A  3464               	retlw	064h
   538  001B  3400               	retlw	0
   539                           
   540  001C  34E8               	retlw	0E8h
   541  001D  3403               	retlw	03h
   542                           
   543  001E  3410               	retlw	010h
   544  001F  3427               	retlw	027h
   545                           
   546                           	global __end_of_dpowers
   547  0020                     __end_of_dpowers:
   548                           	global	_dpowers
   549                           	global	_sGPIO
   550                           	global	_current_temp
   551                           	global	_tmp
   552                           	global	_GPIO
   553  0005                     _GPIO	set	0x5
   554                           	global	_GPIObits
   555  0005                     _GPIObits	set	0x5
   556                           	global	_ANSEL
   557  009F                     _ANSEL	set	0x9F
   558                           	global	_OPTION_REGbits
   559  0081                     _OPTION_REGbits	set	0x81
   560                           	global	_TRISIO
   561  0085                     _TRISIO	set	0x85
   562                           	global	_TRISIO4
   563  042C                     _TRISIO4	set	0x42C
   564                           	global __stringdata
   565  0020                     __stringdata:
   566                           	
   567  0020                     STR_1:	
   568  0020  340A               	retlw	10
   569  0021  340A               	retlw	10
   570  0022  340A               	retlw	10
   571  0023  340A               	retlw	10
   572  0024  3420               	retlw	32	;' '
   573  0025  3420               	retlw	32	;' '
   574  0026  3420               	retlw	32	;' '
   575  0027  3420               	retlw	32	;' '
   576  0028  3420               	retlw	32	;' '
   577  0029  3420               	retlw	32	;' '
   578  002A  3420               	retlw	32	;' '
   579  002B  3420               	retlw	32	;' '
   580  002C  3420               	retlw	32	;' '
   581  002D  3420               	retlw	32	;' '
   582  002E  3420               	retlw	32	;' '
   583  002F  3420               	retlw	32	;' '
   584  0030  3420               	retlw	32	;' '
   585  0031  3420               	retlw	32	;' '
   586  0032  3420               	retlw	32	;' '
   587  0033  3420               	retlw	32	;' '
   588  0034  3420               	retlw	32	;' '
   589  0035  3420               	retlw	32	;' '
   590  0036  3420               	retlw	32	;' '
   591  0037  3420               	retlw	32	;' '
   592  0038  3420               	retlw	32	;' '
   593  0039  3420               	retlw	32	;' '
   594  003A  3420               	retlw	32	;' '
   595  003B  3420               	retlw	32	;' '
   596  003C  3420               	retlw	32	;' '
   597  003D  3420               	retlw	32	;' '
   598  003E  3420               	retlw	32	;' '
   599  003F  340A               	retlw	10
   600  0040  3400               	retlw	0
   601                           psect	strings
   602                           	
   603  0041                     STR_2:	
   604  0041  3446               	retlw	70	;'F'
   605  0042  3472               	retlw	114	;'r'
   606  0043  3469               	retlw	105	;'i'
   607  0044  3464               	retlw	100	;'d'
   608  0045  3467               	retlw	103	;'g'
   609  0046  3465               	retlw	101	;'e'
   610  0047  3420               	retlw	32	;' '
   611  0048  3466               	retlw	102	;'f'
   612  0049  3469               	retlw	105	;'i'
   613  004A  3478               	retlw	120	;'x'
   614  004B  3420               	retlw	32	;' '
   615  004C  3462               	retlw	98	;'b'
   616  004D  3479               	retlw	121	;'y'
   617  004E  3420               	retlw	32	;' '
   618  004F  344A               	retlw	74	;'J'
   619  0050  3461               	retlw	97	;'a'
   620  0051  346D               	retlw	109	;'m'
   621  0052  3465               	retlw	101	;'e'
   622  0053  3473               	retlw	115	;'s'
   623  0054  3420               	retlw	32	;' '
   624  0055  3448               	retlw	72	;'H'
   625  0056  3461               	retlw	97	;'a'
   626  0057  3467               	retlw	103	;'g'
   627  0058  3465               	retlw	101	;'e'
   628  0059  3472               	retlw	114	;'r'
   629  005A  346D               	retlw	109	;'m'
   630  005B  3461               	retlw	97	;'a'
   631  005C  346E               	retlw	110	;'n'
   632  005D  340A               	retlw	10
   633  005E  3400               	retlw	0
   634                           psect	strings
   635                           	
   636  005F                     STR_6:	
   637  005F  3420               	retlw	32	;' '
   638  0060  3454               	retlw	84	;'T'
   639  0061  346F               	retlw	111	;'o'
   640  0062  346F               	retlw	111	;'o'
   641  0063  3420               	retlw	32	;' '
   642  0064  3463               	retlw	99	;'c'
   643  0065  346F               	retlw	111	;'o'
   644  0066  346C               	retlw	108	;'l'
   645  0067  3464               	retlw	100	;'d'
   646  0068  3421               	retlw	33	;'!'
   647  0069  3420               	retlw	32	;' '
   648  006A  3454               	retlw	84	;'T'
   649  006B  3475               	retlw	117	;'u'
   650  006C  3472               	retlw	114	;'r'
   651  006D  346E               	retlw	110	;'n'
   652  006E  3469               	retlw	105	;'i'
   653  006F  346E               	retlw	110	;'n'
   654  0070  3467               	retlw	103	;'g'
   655  0071  3420               	retlw	32	;' '
   656  0072  346F               	retlw	111	;'o'
   657  0073  3466               	retlw	102	;'f'
   658  0074  3466               	retlw	102	;'f'
   659  0075  3421               	retlw	33	;'!'
   660  0076  340A               	retlw	10
   661  0077  3400               	retlw	0
   662                           psect	strings
   663                           	
   664  0078                     STR_8:	
   665  0078  3420               	retlw	32	;' '
   666  0079  3457               	retlw	87	;'W'
   667  007A  3441               	retlw	65	;'A'
   668  007B  3459               	retlw	89	;'Y'
   669  007C  3420               	retlw	32	;' '
   670  007D  3474               	retlw	116	;'t'
   671  007E  346F               	retlw	111	;'o'
   672  007F  346F               	retlw	111	;'o'
   673  0080  3420               	retlw	32	;' '
   674  0081  3477               	retlw	119	;'w'
   675  0082  3461               	retlw	97	;'a'
   676  0083  3472               	retlw	114	;'r'
   677  0084  346D               	retlw	109	;'m'
   678  0085  3421               	retlw	33	;'!'
   679  0086  3420               	retlw	32	;' '
   680  0087  3441               	retlw	65	;'A'
   681  0088  344C               	retlw	76	;'L'
   682  0089  3441               	retlw	65	;'A'
   683  008A  3452               	retlw	82	;'R'
   684  008B  344D               	retlw	77	;'M'
   685  008C  3421               	retlw	33	;'!'
   686  008D  3421               	retlw	33	;'!'
   687  008E  340A               	retlw	10
   688  008F  3400               	retlw	0
   689                           psect	strings
   690                           	
   691  0090                     STR_7:	
   692  0090  3420               	retlw	32	;' '
   693  0091  3454               	retlw	84	;'T'
   694  0092  346F               	retlw	111	;'o'
   695  0093  346F               	retlw	111	;'o'
   696  0094  3420               	retlw	32	;' '
   697  0095  3477               	retlw	119	;'w'
   698  0096  3461               	retlw	97	;'a'
   699  0097  3472               	retlw	114	;'r'
   700  0098  346D               	retlw	109	;'m'
   701  0099  3421               	retlw	33	;'!'
   702  009A  3420               	retlw	32	;' '
   703  009B  3454               	retlw	84	;'T'
   704  009C  3475               	retlw	117	;'u'
   705  009D  3472               	retlw	114	;'r'
   706  009E  346E               	retlw	110	;'n'
   707  009F  3469               	retlw	105	;'i'
   708  00A0  346E               	retlw	110	;'n'
   709  00A1  3467               	retlw	103	;'g'
   710  00A2  3420               	retlw	32	;' '
   711  00A3  346F               	retlw	111	;'o'
   712  00A4  346E               	retlw	110	;'n'
   713  00A5  3421               	retlw	33	;'!'
   714  00A6  340A               	retlw	10
   715  00A7  3400               	retlw	0
   716                           psect	strings
   717                           	
   718  00A8                     STR_3:	
   719  00A8  3453               	retlw	83	;'S'
   720  00A9  3465               	retlw	101	;'e'
   721  00AA  346E               	retlw	110	;'n'
   722  00AB  3473               	retlw	115	;'s'
   723  00AC  346F               	retlw	111	;'o'
   724  00AD  3472               	retlw	114	;'r'
   725  00AE  3420               	retlw	32	;' '
   726  00AF  346E               	retlw	110	;'n'
   727  00B0  346F               	retlw	111	;'o'
   728  00B1  3474               	retlw	116	;'t'
   729  00B2  3420               	retlw	32	;' '
   730  00B3  3466               	retlw	102	;'f'
   731  00B4  346F               	retlw	111	;'o'
   732  00B5  3475               	retlw	117	;'u'
   733  00B6  346E               	retlw	110	;'n'
   734  00B7  3464               	retlw	100	;'d'
   735  00B8  3421               	retlw	33	;'!'
   736  00B9  3421               	retlw	33	;'!'
   737  00BA  340A               	retlw	10
   738  00BB  3400               	retlw	0
   739                           psect	strings
   740                           	
   741  00BC                     STR_5:	
   742  00BC  3454               	retlw	84	;'T'
   743  00BD  3465               	retlw	101	;'e'
   744  00BE  346D               	retlw	109	;'m'
   745  00BF  3470               	retlw	112	;'p'
   746  00C0  3465               	retlw	101	;'e'
   747  00C1  3472               	retlw	114	;'r'
   748  00C2  3461               	retlw	97	;'a'
   749  00C3  3474               	retlw	116	;'t'
   750  00C4  3475               	retlw	117	;'u'
   751  00C5  3472               	retlw	114	;'r'
   752  00C6  3465               	retlw	101	;'e'
   753  00C7  3420               	retlw	32	;' '
   754  00C8  3469               	retlw	105	;'i'
   755  00C9  3473               	retlw	115	;'s'
   756  00CA  343A               	retlw	58	;':'
   757  00CB  3420               	retlw	32	;' '
   758  00CC  3425               	retlw	37	;'%'
   759  00CD  3469               	retlw	105	;'i'
   760  00CE  340A               	retlw	10
   761  00CF  3400               	retlw	0
   762                           psect	strings
   763                           	
   764  00D0                     STR_4:	
   765  00D0  3453               	retlw	83	;'S'
   766  00D1  3465               	retlw	101	;'e'
   767  00D2  346E               	retlw	110	;'n'
   768  00D3  3473               	retlw	115	;'s'
   769  00D4  346F               	retlw	111	;'o'
   770  00D5  3472               	retlw	114	;'r'
   771  00D6  3420               	retlw	32	;' '
   772  00D7  3466               	retlw	102	;'f'
   773  00D8  346F               	retlw	111	;'o'
   774  00D9  3475               	retlw	117	;'u'
   775  00DA  346E               	retlw	110	;'n'
   776  00DB  3464               	retlw	100	;'d'
   777  00DC  3421               	retlw	33	;'!'
   778  00DD  340A               	retlw	10
   779  00DE  3400               	retlw	0
   780                           psect	strings
   781                           	global __end_of__stringdata
   782  00DF                     __end_of__stringdata:
   783                           ; #config settings
   784                           global __CFG_BOREN$OFF
   785  0000                     __CFG_BOREN$OFF equ 0x0
   786                           global __CFG_IESO$OFF
   787  0000                     __CFG_IESO$OFF equ 0x0
   788                           global __CFG_FOSC$INTOSCIO
   789  0000                     __CFG_FOSC$INTOSCIO equ 0x0
   790                           global __CFG_MCLRE$OFF
   791  0000                     __CFG_MCLRE$OFF equ 0x0
   792                           global __CFG_WDTE$OFF
   793  0000                     __CFG_WDTE$OFF equ 0x0
   794                           	file	"/tmp/cgt3WTzgB"
   795                           	line	#
   796                           psect cinit,class=CODE,delta=2
   797                           global start_initialization
   798  040D                     start_initialization:
   799                           
   800                           global __initialization
   801  040D                     __initialization:
   802                           psect	bssCOMMON,class=COMMON,space=1
   803                           global __pbssCOMMON
   804  0077                     __pbssCOMMON:
   805  0077                     _errno:
   806  0077                            ds      2
   807                           
   808  0079                     _sGPIO:
   809  0079                            ds      1
   810                           
   811                           psect	bssBANK0,class=BANK0,space=1
   812                           global __pbssBANK0
   813  0045                     __pbssBANK0:
   814  0045                     _current_temp:
   815  0045                            ds      2
   816                           
   817  0047                     _tmp:
   818  0047                            ds      1
   819                           
   820                           psect	dataBANK0,class=BANK0,space=1
   821                           global __pdataBANK0
   822  003C                     __pdataBANK0:
   823                           	file	"main.c"
   824                           	line	117
   825  003C                     _DS18B20_A:
   826  003C                            ds      9
   827                           
   828                           ; Clear objects allocated to COMMON
   829                           psect cinit,class=CODE,delta=2,merge=1
   830  040D  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   831  040E  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   832  040F  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   833                           ; Clear objects allocated to BANK0
   834                           psect cinit,class=CODE,delta=2,merge=1
   835  0410  01C5               	clrf	((__pbssBANK0)+0)&07Fh
   836  0411  01C6               	clrf	((__pbssBANK0)+1)&07Fh
   837  0412  01C7               	clrf	((__pbssBANK0)+2)&07Fh
   838                           ; Initialize objects allocated to BANK0
   839                           	global __pidataBANK0
   840                           psect cinit,class=CODE,delta=2,merge=1
   841  0413  245E               	fcall	__pidataBANK0+0		;fetch initializer
   842  0414  00BC               	movwf	__pdataBANK0+0&07fh		
   843  0415  245F               	fcall	__pidataBANK0+1		;fetch initializer
   844  0416  00BD               	movwf	__pdataBANK0+1&07fh		
   845  0417  2460               	fcall	__pidataBANK0+2		;fetch initializer
   846  0418  00BE               	movwf	__pdataBANK0+2&07fh		
   847  0419  2461               	fcall	__pidataBANK0+3		;fetch initializer
   848  041A  00BF               	movwf	__pdataBANK0+3&07fh		
   849  041B  2462               	fcall	__pidataBANK0+4		;fetch initializer
   850  041C  00C0               	movwf	__pdataBANK0+4&07fh		
   851  041D  2463               	fcall	__pidataBANK0+5		;fetch initializer
   852  041E  00C1               	movwf	__pdataBANK0+5&07fh		
   853  041F  2464               	fcall	__pidataBANK0+6		;fetch initializer
   854  0420  00C2               	movwf	__pdataBANK0+6&07fh		
   855  0421  2465               	fcall	__pidataBANK0+7		;fetch initializer
   856  0422  00C3               	movwf	__pdataBANK0+7&07fh		
   857  0423  2466               	fcall	__pidataBANK0+8		;fetch initializer
   858  0424  00C4               	movwf	__pdataBANK0+8&07fh		
   859                           psect cinit,class=CODE,delta=2,merge=1
   860                           global end_of_initialization,__end_of__initialization
   861                           
   862                           ;End of C runtime variable initialization code
   863                           
   864  0425                     end_of_initialization:
   865  0425                     __end_of__initialization:clrf status
      + 0425  0183               	clrf	3
   866  0426  299F               ljmp _main	;jump to C main() function
   867                           psect	cstackCOMMON,class=COMMON,space=1
   868                           global __pcstackCOMMON
   869  0070                     __pcstackCOMMON:
   870  0070                     ?_ConfigureOscillator:	; 0 bytes @ 0x0
   871  0070                     ?_InitApp:	; 0 bytes @ 0x0
   872  0070                     ?_isr:	; 0 bytes @ 0x0
   873  0070                     ??_isr:	; 0 bytes @ 0x0
   874  0070                     ?_write_bit_ow:	; 0 bytes @ 0x0
   875  0070                     ?_write_byte_ow:	; 0 bytes @ 0x0
   876  0070                     ?_DelayTXBitUART:	; 0 bytes @ 0x0
   877  0070                     ?_putch:	; 0 bytes @ 0x0
   878  0070                     ?_reset_ow:	; 1 bytes @ 0x0
   879  0070                     ?_read_bit_ow:	; 1 bytes @ 0x0
   880  0070                     ?_read_byte_ow:	; 1 bytes @ 0x0
   881  0070                     ?_main:	; 1 bytes @ 0x0
   882  0070                     	ds	4
   883  0074                     ??_ConfigureOscillator:	; 0 bytes @ 0x4
   884  0074                     ??_InitApp:	; 0 bytes @ 0x4
   885  0074                     ??_reset_ow:	; 0 bytes @ 0x4
   886  0074                     ??_read_bit_ow:	; 0 bytes @ 0x4
   887  0074                     ??_write_bit_ow:	; 0 bytes @ 0x4
   888  0074                     ??_DelayTXBitUART:	; 0 bytes @ 0x4
   889  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   890  0074                     	ds	1
   891  0075                     ??_read_byte_ow:	; 0 bytes @ 0x5
   892  0075                     ??_putch:	; 0 bytes @ 0x5
   893  0075                     ??___lwmod:	; 0 bytes @ 0x5
   894                           	global	reset_ow@presence
   895  0075                     reset_ow@presence:	; 1 bytes @ 0x5
   896                           	global	write_bit_ow@bitval
   897  0075                     write_bit_ow@bitval:	; 1 bytes @ 0x5
   898  0075                     	ds	1
   899                           	global	___lwmod@counter
   900  0076                     ___lwmod@counter:	; 1 bytes @ 0x6
   901  0076                     	ds	1
   902                           psect	cstackBANK0,class=BANK0,space=1
   903                           global __pcstackBANK0
   904  0020                     __pcstackBANK0:
   905  0020                     ??_write_byte_ow:	; 0 bytes @ 0x0
   906                           	global	?___lwdiv
   907  0020                     ?___lwdiv:	; 2 bytes @ 0x0
   908                           	global	read_byte_ow@value
   909  0020                     read_byte_ow@value:	; 1 bytes @ 0x0
   910                           	global	putch@c
   911  0020                     putch@c:	; 1 bytes @ 0x0
   912                           	global	___lwdiv@divisor
   913  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   914  0020                     	ds	1
   915                           	global	read_byte_ow@i
   916  0021                     read_byte_ow@i:	; 1 bytes @ 0x1
   917                           	global	putch@bitcount
   918  0021                     putch@bitcount:	; 1 bytes @ 0x1
   919  0021                     	ds	1
   920                           	global	write_byte_ow@val
   921  0022                     write_byte_ow@val:	; 1 bytes @ 0x2
   922                           	global	___lwdiv@dividend
   923  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   924  0022                     	ds	1
   925                           	global	write_byte_ow@temp
   926  0023                     write_byte_ow@temp:	; 1 bytes @ 0x3
   927  0023                     	ds	1
   928                           	global	write_byte_ow@i
   929  0024                     write_byte_ow@i:	; 1 bytes @ 0x4
   930                           	global	___lwdiv@counter
   931  0024                     ___lwdiv@counter:	; 1 bytes @ 0x4
   932  0024                     	ds	1
   933                           	global	?_read_temperature_ow_18B20
   934  0025                     ?_read_temperature_ow_18B20:	; 2 bytes @ 0x5
   935                           	global	___lwdiv@quotient
   936  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   937  0025                     	ds	2
   938  0027                     ??_read_temperature_ow_18B20:	; 0 bytes @ 0x7
   939                           	global	?___lwmod
   940  0027                     ?___lwmod:	; 2 bytes @ 0x7
   941                           	global	___lwmod@divisor
   942  0027                     ___lwmod@divisor:	; 2 bytes @ 0x7
   943  0027                     	ds	2
   944                           	global	___lwmod@dividend
   945  0029                     ___lwmod@dividend:	; 2 bytes @ 0x9
   946                           	global	read_temperature_ow_18B20@dat
   947  0029                     read_temperature_ow_18B20@dat:	; 9 bytes @ 0x9
   948  0029                     	ds	2
   949                           	global	?_printf
   950  002B                     ?_printf:	; 2 bytes @ 0xB
   951  002B                     	ds	2
   952  002D                     ??_printf:	; 0 bytes @ 0xD
   953  002D                     	ds	3
   954                           	global	printf@ap
   955  0030                     printf@ap:	; 1 bytes @ 0x10
   956  0030                     	ds	1
   957                           	global	printf@flag
   958  0031                     printf@flag:	; 1 bytes @ 0x11
   959  0031                     	ds	1
   960                           	global	printf@f
   961  0032                     printf@f:	; 1 bytes @ 0x12
   962                           	global	read_temperature_ow_18B20@temperature
   963  0032                     read_temperature_ow_18B20@temperature:	; 2 bytes @ 0x12
   964  0032                     	ds	1
   965                           	global	printf@prec
   966  0033                     printf@prec:	; 1 bytes @ 0x13
   967  0033                     	ds	1
   968                           	global	read_temperature_ow_18B20@ID
   969  0034                     read_temperature_ow_18B20@ID:	; 1 bytes @ 0x14
   970                           	global	printf@_val
   971  0034                     printf@_val:	; 4 bytes @ 0x14
   972  0034                     	ds	1
   973                           	global	read_temperature_ow_18B20@i
   974  0035                     read_temperature_ow_18B20@i:	; 1 bytes @ 0x15
   975  0035                     	ds	3
   976                           	global	printf@c
   977  0038                     printf@c:	; 1 bytes @ 0x18
   978  0038                     	ds	1
   979  0039                     ??_main:	; 0 bytes @ 0x19
   980  0039                     	ds	3
   981                           ;!
   982                           ;!Data Sizes:
   983                           ;!    Strings     191
   984                           ;!    Constant    10
   985                           ;!    Data        9
   986                           ;!    BSS         10
   987                           ;!    Persistent  0
   988                           ;!    Stack       0
   989                           ;!
   990                           ;!Auto Spaces:
   991                           ;!    Space          Size  Autos    Used
   992                           ;!    COMMON           14      7      10
   993                           ;!    BANK0            80     28      40
   994                           ;!    BANK1            32      0       0
   995                           
   996                           ;!
   997                           ;!Pointer List with Targets:
   998                           ;!
   999                           ;!    ?___lwdiv	unsigned int  size(1) Largest target is 0
  1000                           ;!
  1001                           ;!    ?___lwmod	unsigned int  size(1) Largest target is 0
  1002                           ;!
  1003                           ;!    ?_read_temperature_ow_18B20	unsigned int  size(1) Largest target is 0
  1004                           ;!
  1005                           ;!    environ	PTR PTR unsigned char  size(2) Largest target is 0
  1006                           ;!		 -> NULL(NULL[0]), 
  1007                           ;!
  1008                           ;!    printf@f	PTR const unsigned char  size(1) Largest target is 33
  1009                           ;!		 -> STR_8(CODE[24]), STR_7(CODE[24]), STR_6(CODE[25]), STR_5(CODE[20]), 
  1010                           ;!		 -> STR_4(CODE[15]), STR_3(CODE[20]), STR_2(CODE[30]), STR_1(CODE[33]), 
  1011                           ;!
  1012                           ;!    ?_printf	int  size(1) Largest target is 0
  1013                           ;!
  1014                           ;!    printf@ap	PTR void [1] size(1) Largest target is 2
  1015                           ;!		 -> ?_printf(BANK0[2]), 
  1016                           ;!
  1017                           ;!    S3267$_cp	PTR const unsigned char  size(1) Largest target is 0
  1018                           ;!
  1019                           ;!    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1020                           ;!
  1021                           ;!    read_temperature_ow_18B20@ID	PTR unsigned char  size(1) Largest target is 9
  1022                           ;!		 -> DS18B20_A(BANK0[9]), 
  1023                           ;!
  1024                           
  1025                           
  1026                           ;!
  1027                           ;!Critical Paths under _main in COMMON
  1028                           ;!
  1029                           ;!    _read_temperature_ow_18B20->_read_byte_ow
  1030                           ;!    _read_byte_ow->_read_bit_ow
  1031                           ;!    _write_byte_ow->_write_bit_ow
  1032                           ;!    _printf->___lwmod
  1033                           ;!    _putch->_DelayTXBitUART
  1034                           ;!    ___lwmod->___lwdiv
  1035                           ;!
  1036                           ;!Critical Paths under _isr in COMMON
  1037                           ;!
  1038                           ;!    None.
  1039                           ;!
  1040                           ;!Critical Paths under _main in BANK0
  1041                           ;!
  1042                           ;!    _main->_printf
  1043                           ;!    _read_temperature_ow_18B20->_write_byte_ow
  1044                           ;!    _printf->___lwmod
  1045                           ;!    ___lwmod->___lwdiv
  1046                           ;!
  1047                           ;!Critical Paths under _isr in BANK0
  1048                           ;!
  1049                           ;!    None.
  1050                           ;!
  1051                           ;!Critical Paths under _main in BANK1
  1052                           ;!
  1053                           ;!    None.
  1054                           ;!
  1055                           ;!Critical Paths under _isr in BANK1
  1056                           ;!
  1057                           ;!    None.
  1058                           
  1059 ;;
  1060 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1061 ;;
  1062                           
  1063                           ;!
  1064                           ;!Call Graph Tables:
  1065                           ;!
  1066                           ;! ---------------------------------------------------------------------------------
  1067                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1068                           ;! ---------------------------------------------------------------------------------
  1069                           ;! (0) _main                                                 3     3      0    1973
  1070                           ;!                                             25 BANK0      3     3      0
  1071                           ;!                _ConfigureOscillator
  1072                           ;!                            _InitApp
  1073                           ;!                             _printf
  1074                           ;!                           _reset_ow
  1075                           ;!          _read_temperature_ow_18B20
  1076                           ;! ---------------------------------------------------------------------------------
  1077                           ;! (1) _read_temperature_ow_18B20                           17    15      2     846
  1078                           ;!                                              5 BANK0     17    15      2
  1079                           ;!                           _reset_ow
  1080                           ;!                      _write_byte_ow
  1081                           ;!                        _read_bit_ow
  1082                           ;!                       _read_byte_ow
  1083                           ;! ---------------------------------------------------------------------------------
  1084                           ;! (2) _reset_ow                                             2     2      0      23
  1085                           ;!                                              4 COMMON     2     2      0
  1086                           ;! ---------------------------------------------------------------------------------
  1087                           ;! (2) _read_byte_ow                                         4     4      0     136
  1088                           ;!                                              5 COMMON     2     2      0
  1089                           ;!                                              0 BANK0      2     2      0
  1090                           ;!                        _read_bit_ow
  1091                           ;! ---------------------------------------------------------------------------------
  1092                           ;! (3) _read_bit_ow                                          1     1      0       0
  1093                           ;!                                              4 COMMON     1     1      0
  1094                           ;! ---------------------------------------------------------------------------------
  1095                           ;! (2) _write_byte_ow                                        5     5      0     189
  1096                           ;!                                              0 BANK0      5     5      0
  1097                           ;!                       _write_bit_ow
  1098                           ;! ---------------------------------------------------------------------------------
  1099                           ;! (3) _write_bit_ow                                         2     2      0      22
  1100                           ;!                                              4 COMMON     2     2      0
  1101                           ;! ---------------------------------------------------------------------------------
  1102                           ;! (1) _ConfigureOscillator                                  0     0      0       0
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (1) _InitApp                                              0     0      0       0
  1105                           ;! ---------------------------------------------------------------------------------
  1106                           ;! (1) _printf                                              14    12      2    1104
  1107                           ;!                                             11 BANK0     14    12      2
  1108                           ;!                              _putch
  1109                           ;!                            ___lwdiv
  1110                           ;!                            ___lwmod
  1111                           ;! ---------------------------------------------------------------------------------
  1112                           ;! (2) _putch                                                3     3      0      68
  1113                           ;!                                              5 COMMON     1     1      0
  1114                           ;!                                              0 BANK0      2     2      0
  1115                           ;!                     _DelayTXBitUART
  1116                           ;! ---------------------------------------------------------------------------------
  1117                           ;! (3) _DelayTXBitUART                                       1     1      0       0
  1118                           ;!                                              4 COMMON     1     1      0
  1119                           ;! ---------------------------------------------------------------------------------
  1120                           ;! (2) ___lwmod                                              6     2      4     232
  1121                           ;!                                              5 COMMON     2     2      0
  1122                           ;!                                              7 BANK0      4     0      4
  1123                           ;!                            ___lwdiv (ARG)
  1124                           ;! ---------------------------------------------------------------------------------
  1125                           ;! (2) ___lwdiv                                              8     4      4     241
  1126                           ;!                                              4 COMMON     1     1      0
  1127                           ;!                                              0 BANK0      7     3      4
  1128                           ;! ---------------------------------------------------------------------------------
  1129                           ;! Estimated maximum stack depth 3
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1132                           ;! ---------------------------------------------------------------------------------
  1133                           ;! (4) _isr                                                  4     4      0       0
  1134                           ;!                                              0 COMMON     4     4      0
  1135                           ;! ---------------------------------------------------------------------------------
  1136                           ;! Estimated maximum stack depth 4
  1137                           ;! ---------------------------------------------------------------------------------
  1138                           ;!
  1139                           ;! Call Graph Graphs:
  1140                           ;!
  1141                           ;! _main (ROOT)
  1142                           ;!   _ConfigureOscillator
  1143                           ;!   _InitApp
  1144                           ;!   _printf
  1145                           ;!     _putch
  1146                           ;!       _DelayTXBitUART
  1147                           ;!     ___lwdiv
  1148                           ;!     ___lwmod
  1149                           ;!       ___lwdiv (ARG)
  1150                           ;!   _reset_ow
  1151                           ;!   _read_temperature_ow_18B20
  1152                           ;!     _reset_ow
  1153                           ;!     _write_byte_ow
  1154                           ;!       _write_bit_ow
  1155                           ;!     _read_bit_ow
  1156                           ;!     _read_byte_ow
  1157                           ;!       _read_bit_ow
  1158                           ;!
  1159                           ;! _isr (ROOT)
  1160                           ;!
  1161                           
  1162                           ;! Address spaces:
  1163                           
  1164                           ;!Name               Size   Autos  Total    Cost      Usage
  1165                           ;!BANK1               20      0       0       5        0.0%
  1166                           ;!BITBANK1            20      0       0       7        0.0%
  1167                           ;!SFR1                 0      0       0       2        0.0%
  1168                           ;!BITSFR1              0      0       0       2        0.0%
  1169                           ;!BANK0               50     1C      28       4       50.0%
  1170                           ;!BITBANK0            50      0       0       3        0.0%
  1171                           ;!SFR0                 0      0       0       1        0.0%
  1172                           ;!BITSFR0              0      0       0       1        0.0%
  1173                           ;!COMMON               E      7       A       1       71.4%
  1174                           ;!BITCOMMON            E      0       0       0        0.0%
  1175                           ;!CODE                 0      0       0       0        0.0%
  1176                           ;!DATA                 0      0      35       8        0.0%
  1177                           ;!ABS                  0      0      32       6        0.0%
  1178                           ;!NULL                 0      0       0       0        0.0%
  1179                           ;!STACK                0      0       3       2        0.0%
  1180                           ;!EEDATA             100      0       0       0        0.0%
  1181                           
  1182                           	global	_main
  1183                           
  1184 ;; *************** function _main *****************
  1185 ;; Defined at:
  1186 ;;		line 123 in file "main.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      unsigned char 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 17F/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1
  1200 ;;      Params:         0       0       0
  1201 ;;      Locals:         0       0       0
  1202 ;;      Temps:          0       3       0
  1203 ;;      Totals:         0       3       0
  1204 ;;Total ram usage:        3 bytes
  1205 ;; Hardware stack levels required when called:    4
  1206 ;; This function calls:
  1207 ;;		_ConfigureOscillator
  1208 ;;		_InitApp
  1209 ;;		_printf
  1210 ;;		_reset_ow
  1211 ;;		_read_temperature_ow_18B20
  1212 ;; This function is called by:
  1213 ;;		Startup code after reset
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           psect	maintext,global,class=CODE,delta=2,split=1
  1217                           global __pmaintext
  1218  019F                     __pmaintext:	;psect for function _main
  1219                           psect	maintext
  1220                           	file	"main.c"
  1221                           	line	123
  1222                           	global	__size_of_main
  1223  00A6                     	__size_of_main	equ	__end_of_main-_main
  1224                           	
  1225  019F                     _main:	
  1226                           	opt	stack 4
  1227                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1228                           	line	125
  1229                           	
  1230  019F                     l4067:	
  1231                           ;main.c: 125: ConfigureOscillator();
  1232  019F  2473               	fcall	_ConfigureOscillator
  1233                           	line	128
  1234                           	
  1235  01A0                     l4069:	
  1236                           ;main.c: 128: InitApp();
  1237  01A0  2467               	fcall	_InitApp
  1238                           	line	132
  1239                           ;main.c: 132: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1240                           	opt asmopt_off
  1241  01A1  3006               movlw  6
  1242  01A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1243  01A3  00BB               movwf	((??_main+0)+0+2),f
  1244  01A4  3013               movlw	19
  1245  01A5  00BA               movwf	((??_main+0)+0+1),f
  1246  01A6  30B1               	movlw	177
  1247  01A7  00B9               movwf	((??_main+0)+0),f
  1248  01A8                     u1237:
  1249  01A8  0BB9               	decfsz	((??_main+0)+0),f
  1250  01A9  29A8               	goto	u1237
  1251  01AA  0BBA               	decfsz	((??_main+0)+0+1),f
  1252  01AB  29A8               	goto	u1237
  1253  01AC  0BBB               	decfsz	((??_main+0)+0+2),f
  1254  01AD  29A8               	goto	u1237
  1255  01AE  29AF               	nop2
  1256                           opt asmopt_on
  1257                           
  1258                           	line	133
  1259                           ;main.c: 133: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1260                           	opt asmopt_off
  1261  01AF  3006               movlw  6
  1262  01B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1263  01B1  00BB               movwf	((??_main+0)+0+2),f
  1264  01B2  3013               movlw	19
  1265  01B3  00BA               movwf	((??_main+0)+0+1),f
  1266  01B4  30B1               	movlw	177
  1267  01B5  00B9               movwf	((??_main+0)+0),f
  1268  01B6                     u1247:
  1269  01B6  0BB9               	decfsz	((??_main+0)+0),f
  1270  01B7  29B6               	goto	u1247
  1271  01B8  0BBA               	decfsz	((??_main+0)+0+1),f
  1272  01B9  29B6               	goto	u1247
  1273  01BA  0BBB               	decfsz	((??_main+0)+0+2),f
  1274  01BB  29B6               	goto	u1247
  1275  01BC  29BD               	nop2
  1276                           opt asmopt_on
  1277                           
  1278                           	line	134
  1279                           ;main.c: 134: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1280                           	opt asmopt_off
  1281  01BD  3006               movlw  6
  1282  01BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1283  01BF  00BB               movwf	((??_main+0)+0+2),f
  1284  01C0  3013               movlw	19
  1285  01C1  00BA               movwf	((??_main+0)+0+1),f
  1286  01C2  30B1               	movlw	177
  1287  01C3  00B9               movwf	((??_main+0)+0),f
  1288  01C4                     u1257:
  1289  01C4  0BB9               	decfsz	((??_main+0)+0),f
  1290  01C5  29C4               	goto	u1257
  1291  01C6  0BBA               	decfsz	((??_main+0)+0+1),f
  1292  01C7  29C4               	goto	u1257
  1293  01C8  0BBB               	decfsz	((??_main+0)+0+2),f
  1294  01C9  29C4               	goto	u1257
  1295  01CA  29CB               	nop2
  1296                           opt asmopt_on
  1297                           
  1298                           	line	135
  1299                           	
  1300  01CB                     l4071:	
  1301                           ;main.c: 135: printf("\n\n\n\n                           \n");
  1302  01CB  300B               	movlw	((STR_1-__stringbase))&0ffh
  1303  01CC  20DF               	fcall	_printf
  1304                           	line	136
  1305                           	
  1306  01CD                     l4073:	
  1307                           ;main.c: 136: printf("Fridge fix by James Hagerman\n");
  1308  01CD  302C               	movlw	((STR_2-__stringbase))&0ffh
  1309  01CE  20DF               	fcall	_printf
  1310                           	line	138
  1311                           	
  1312  01CF                     l4075:	
  1313                           ;main.c: 138: tmp = reset_ow();
  1314  01CF  23EE               	fcall	_reset_ow
  1315  01D0  1283               	bcf	status, 5	;RP0=0, select bank0
  1316  01D1  00B9               	movwf	(??_main+0)+0
  1317  01D2  0839               	movf	(??_main+0)+0,w
  1318  01D3  00C7               	movwf	(_tmp)
  1319                           	line	139
  1320                           	
  1321  01D4                     l4077:	
  1322                           ;main.c: 139: if (tmp == 1) {
  1323  01D4  0847               	movf	(_tmp),w
  1324  01D5  3A01               	xorlw	01h
  1325  01D6  1D03               	skipz
  1326  01D7  29D9               	goto	u981
  1327  01D8  29DA               	goto	u980
  1328  01D9                     u981:
  1329  01D9  29DD               	goto	l4081
  1330  01DA                     u980:
  1331                           	line	140
  1332                           	
  1333  01DA                     l4079:	
  1334                           ;main.c: 140: printf("Sensor not found!!\n");
  1335  01DA  3093               	movlw	((STR_3-__stringbase))&0ffh
  1336  01DB  20DF               	fcall	_printf
  1337                           	line	141
  1338                           ;main.c: 141: } else {
  1339  01DC  29E1               	goto	l4083
  1340                           	
  1341  01DD                     l1422:	
  1342                           	line	142
  1343                           	
  1344  01DD                     l4081:	
  1345                           ;main.c: 142: printf("Sensor found!\n");
  1346  01DD  30BB               	movlw	((STR_4-__stringbase))&0ffh
  1347  01DE  20DF               	fcall	_printf
  1348  01DF  29E1               	goto	l4083
  1349                           	line	143
  1350                           	
  1351  01E0                     l1423:	
  1352  01E0  29E1               	goto	l4083
  1353                           	line	145
  1354                           ;main.c: 143: }
  1355                           ;main.c: 145: while(1)
  1356                           	
  1357  01E1                     l1424:	
  1358                           	line	147
  1359                           	
  1360  01E1                     l4083:	
  1361                           ;main.c: 146: {
  1362                           ;main.c: 147: _delay((unsigned long)((5000)*(4000000/4000.0)));
  1363                           	opt asmopt_off
  1364  01E1  301A               movlw  26
  1365  01E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1366  01E3  00BB               movwf	((??_main+0)+0+2),f
  1367  01E4  305E               movlw	94
  1368  01E5  00BA               movwf	((??_main+0)+0+1),f
  1369  01E6  3086               	movlw	134
  1370  01E7  00B9               movwf	((??_main+0)+0),f
  1371  01E8                     u1267:
  1372  01E8  0BB9               	decfsz	((??_main+0)+0),f
  1373  01E9  29E8               	goto	u1267
  1374  01EA  0BBA               	decfsz	((??_main+0)+0+1),f
  1375  01EB  29E8               	goto	u1267
  1376  01EC  0BBB               	decfsz	((??_main+0)+0+2),f
  1377  01ED  29E8               	goto	u1267
  1378  01EE  0000               	nop
  1379                           opt asmopt_on
  1380                           
  1381                           	line	149
  1382                           	
  1383  01EF                     l4085:	
  1384                           ;main.c: 149: current_temp = read_temperature_ow_18B20(DS18B20_A);
  1385  01EF  303C               	movlw	(_DS18B20_A)&0ffh
  1386  01F0  2245               	fcall	_read_temperature_ow_18B20
  1387  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1388  01F2  0826               	movf	(1+(?_read_temperature_ow_18B20)),w
  1389  01F3  01C6               	clrf	(_current_temp+1)
  1390  01F4  07C6               	addwf	(_current_temp+1)
  1391  01F5  0825               	movf	(0+(?_read_temperature_ow_18B20)),w
  1392  01F6  01C5               	clrf	(_current_temp)
  1393  01F7  07C5               	addwf	(_current_temp)
  1394                           
  1395                           	line	165
  1396                           	
  1397  01F8                     l4087:	
  1398                           ;main.c: 165: printf("Temperature is: %i\n", current_temp);
  1399  01F8  0846               	movf	(_current_temp+1),w
  1400  01F9  01AC               	clrf	(?_printf+1)
  1401  01FA  07AC               	addwf	(?_printf+1)
  1402  01FB  0845               	movf	(_current_temp),w
  1403  01FC  01AB               	clrf	(?_printf)
  1404  01FD  07AB               	addwf	(?_printf)
  1405                           
  1406  01FE  30A7               	movlw	((STR_5-__stringbase))&0ffh
  1407  01FF  20DF               	fcall	_printf
  1408                           	line	167
  1409                           	
  1410  0200                     l4089:	
  1411                           ;main.c: 167: if (current_temp < 26) {
  1412  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  1413  0201  0846               	movf	(_current_temp+1),w
  1414  0202  3A80               	xorlw	80h
  1415  0203  00FF               	movwf	btemp+1
  1416  0204  3080               	movlw	(high(01Ah))^80h
  1417  0205  027F               	subwf	btemp+1,w
  1418  0206  1D03               	skipz
  1419  0207  2A0A               	goto	u995
  1420  0208  301A               	movlw	low(01Ah)
  1421  0209  0245               	subwf	(_current_temp),w
  1422  020A                     u995:
  1423                           
  1424  020A  1803               	skipnc
  1425  020B  2A0D               	goto	u991
  1426  020C  2A0E               	goto	u990
  1427  020D                     u991:
  1428  020D  2A16               	goto	l4099
  1429  020E                     u990:
  1430                           	line	168
  1431                           	
  1432  020E                     l4091:	
  1433                           ;main.c: 168: printf(" Too cold! Turning off!\n");
  1434  020E  304A               	movlw	((STR_6-__stringbase))&0ffh
  1435  020F  20DF               	fcall	_printf
  1436                           	line	169
  1437                           	
  1438  0210                     l4093:	
  1439                           ;main.c: 169: sGPIO.GP2 = 0;
  1440  0210  1179               	bcf	(_sGPIO),2
  1441                           	line	170
  1442                           	
  1443  0211                     l4095:	
  1444                           ;main.c: 170: sGPIO.GP5 = 0;
  1445  0211  12F9               	bcf	(_sGPIO),5
  1446                           	line	171
  1447                           	
  1448  0212                     l4097:	
  1449                           ;main.c: 171: GPIO = sGPIO.port;
  1450  0212  0879               	movf	(_sGPIO),w
  1451  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  1452  0214  0085               	movwf	(5)	;volatile
  1453  0215  2A16               	goto	l4099
  1454                           	line	172
  1455                           	
  1456  0216                     l1425:	
  1457                           	line	173
  1458                           	
  1459  0216                     l4099:	
  1460                           ;main.c: 172: }
  1461                           ;main.c: 173: if (current_temp > 44) {
  1462  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  1463  0217  0846               	movf	(_current_temp+1),w
  1464  0218  3A80               	xorlw	80h
  1465  0219  00FF               	movwf	btemp+1
  1466  021A  3080               	movlw	(high(02Dh))^80h
  1467  021B  027F               	subwf	btemp+1,w
  1468  021C  1D03               	skipz
  1469  021D  2A20               	goto	u1005
  1470  021E  302D               	movlw	low(02Dh)
  1471  021F  0245               	subwf	(_current_temp),w
  1472  0220                     u1005:
  1473                           
  1474  0220  1C03               	skipc
  1475  0221  2A23               	goto	u1001
  1476  0222  2A24               	goto	u1000
  1477  0223                     u1001:
  1478  0223  2A2C               	goto	l4109
  1479  0224                     u1000:
  1480                           	line	174
  1481                           	
  1482  0224                     l4101:	
  1483                           ;main.c: 174: printf(" Too warm! Turning on!\n");
  1484  0224  307B               	movlw	((STR_7-__stringbase))&0ffh
  1485  0225  20DF               	fcall	_printf
  1486                           	line	175
  1487                           	
  1488  0226                     l4103:	
  1489                           ;main.c: 175: sGPIO.GP2 = 1;
  1490  0226  1579               	bsf	(_sGPIO),2
  1491                           	line	176
  1492                           	
  1493  0227                     l4105:	
  1494                           ;main.c: 176: sGPIO.GP5 = 0;
  1495  0227  12F9               	bcf	(_sGPIO),5
  1496                           	line	177
  1497                           	
  1498  0228                     l4107:	
  1499                           ;main.c: 177: GPIO = sGPIO.port;
  1500  0228  0879               	movf	(_sGPIO),w
  1501  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  1502  022A  0085               	movwf	(5)	;volatile
  1503  022B  2A2C               	goto	l4109
  1504                           	line	178
  1505                           	
  1506  022C                     l1426:	
  1507                           	line	179
  1508                           	
  1509  022C                     l4109:	
  1510                           ;main.c: 178: }
  1511                           ;main.c: 179: if (current_temp > 70) {
  1512  022C  1283               	bcf	status, 5	;RP0=0, select bank0
  1513  022D  0846               	movf	(_current_temp+1),w
  1514  022E  3A80               	xorlw	80h
  1515  022F  00FF               	movwf	btemp+1
  1516  0230  3080               	movlw	(high(047h))^80h
  1517  0231  027F               	subwf	btemp+1,w
  1518  0232  1D03               	skipz
  1519  0233  2A36               	goto	u1015
  1520  0234  3047               	movlw	low(047h)
  1521  0235  0245               	subwf	(_current_temp),w
  1522  0236                     u1015:
  1523                           
  1524  0236  1C03               	skipc
  1525  0237  2A39               	goto	u1011
  1526  0238  2A3A               	goto	u1010
  1527  0239                     u1011:
  1528  0239  29E1               	goto	l4083
  1529  023A                     u1010:
  1530                           	line	180
  1531                           	
  1532  023A                     l4111:	
  1533                           ;main.c: 180: printf(" WAY too warm! ALARM!!\n");
  1534  023A  3063               	movlw	((STR_8-__stringbase))&0ffh
  1535  023B  20DF               	fcall	_printf
  1536                           	line	181
  1537                           	
  1538  023C                     l4113:	
  1539                           ;main.c: 181: sGPIO.GP2 = 1;
  1540  023C  1579               	bsf	(_sGPIO),2
  1541                           	line	182
  1542                           	
  1543  023D                     l4115:	
  1544                           ;main.c: 182: sGPIO.GP5 = 1;
  1545  023D  16F9               	bsf	(_sGPIO),5
  1546                           	line	183
  1547                           	
  1548  023E                     l4117:	
  1549                           ;main.c: 183: GPIO = sGPIO.port;
  1550  023E  0879               	movf	(_sGPIO),w
  1551  023F  1283               	bcf	status, 5	;RP0=0, select bank0
  1552  0240  0085               	movwf	(5)	;volatile
  1553  0241  29E1               	goto	l4083
  1554                           	line	184
  1555                           	
  1556  0242                     l1427:	
  1557  0242  29E1               	goto	l4083
  1558                           	line	198
  1559                           	
  1560  0243                     l1428:	
  1561                           	line	145
  1562  0243  29E1               	goto	l4083
  1563                           	
  1564  0244                     l1429:	
  1565                           	line	201
  1566                           ;main.c: 184: }
  1567                           ;main.c: 198: }
  1568                           ;main.c: 199: return 0;
  1569                           ;	Return value of _main is never used
  1570                           	
  1571  0244                     l1430:	
  1572                           	global	start
  1573  0244  280F               	ljmp	start
  1574                           	opt stack 0
  1575                           GLOBAL	__end_of_main
  1576  0245                     	__end_of_main:
  1577                           	signat	_main,89
  1578                           	global	_read_temperature_ow_18B20
  1579                           
  1580 ;; *************** function _read_temperature_ow_18B20 *****************
  1581 ;; Defined at:
  1582 ;;		line 112 in file "one_wire.h"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  ID              1    wreg     PTR unsigned char 
  1585 ;;		 -> DS18B20_A(9), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  ID              1   20[BANK0 ] PTR unsigned char 
  1588 ;;		 -> DS18B20_A(9), 
  1589 ;;  dat             9    9[BANK0 ] unsigned char [9]
  1590 ;;  temperature     2   18[BANK0 ] unsigned int 
  1591 ;;  i               1   21[BANK0 ] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    5[BANK0 ] unsigned int 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1
  1601 ;;      Params:         0       2       0
  1602 ;;      Locals:         0      13       0
  1603 ;;      Temps:          0       2       0
  1604 ;;      Totals:         0      17       0
  1605 ;;Total ram usage:       17 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    3
  1608 ;; This function calls:
  1609 ;;		_reset_ow
  1610 ;;		_write_byte_ow
  1611 ;;		_read_bit_ow
  1612 ;;		_read_byte_ow
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           psect	text454,local,class=CODE,delta=2,merge=1
  1618                           global __ptext454
  1619  0245                     __ptext454:	;psect for function _read_temperature_ow_18B20
  1620                           psect	text454
  1621                           	file	"one_wire.h"
  1622                           	line	112
  1623                           	global	__size_of_read_temperature_ow_18B20
  1624  0088                     	__size_of_read_temperature_ow_18B20	equ	__end_of_read_temperature_ow_18B20-_read_temper
                                 ature_ow_18B20
  1625                           	
  1626  0245                     _read_temperature_ow_18B20:	
  1627                           	opt	stack 4
  1628                           ; Regs used in _read_temperature_ow_18B20: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
                                 cstack]
  1629                           ;read_temperature_ow_18B20@ID stored from wreg
  1630  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  1631  0246  00B4               	movwf	(read_temperature_ow_18B20@ID)
  1632                           	line	113
  1633                           	
  1634  0247                     l3991:	
  1635                           ;one_wire.h: 113: unsigned int temperature = 243;
  1636  0247  30F3               	movlw	low(0F3h)
  1637  0248  00B2               	movwf	(read_temperature_ow_18B20@temperature)
  1638  0249  3000               	movlw	high(0F3h)
  1639  024A  00B3               	movwf	((read_temperature_ow_18B20@temperature))+1
  1640                           	line	116
  1641                           	
  1642  024B                     l3993:	
  1643                           ;one_wire.h: 114: unsigned char dat[9], i;
  1644                           ;one_wire.h: 116: reset_ow();
  1645  024B  23EE               	fcall	_reset_ow
  1646                           	line	117
  1647                           	
  1648  024C                     l3995:	
  1649                           ;one_wire.h: 117: write_byte_ow(0x55);
  1650  024C  3055               	movlw	(055h)
  1651  024D  2395               	fcall	_write_byte_ow
  1652                           	line	118
  1653                           	
  1654  024E                     l3997:	
  1655                           ;one_wire.h: 118: for(i=0; i<8; i++)
  1656  024E  1283               	bcf	status, 5	;RP0=0, select bank0
  1657  024F  01B5               	clrf	(read_temperature_ow_18B20@i)
  1658  0250  3008               	movlw	(08h)
  1659  0251  0235               	subwf	(read_temperature_ow_18B20@i),w
  1660  0252  1C03               	skipc
  1661  0253  2A55               	goto	u901
  1662  0254  2A56               	goto	u900
  1663  0255                     u901:
  1664  0255  2A58               	goto	l4001
  1665  0256                     u900:
  1666  0256  2A6C               	goto	l4007
  1667                           	
  1668  0257                     l3999:	
  1669  0257  2A6C               	goto	l4007
  1670                           	line	119
  1671                           	
  1672  0258                     l1395:	
  1673                           	
  1674  0258                     l4001:	
  1675                           ;one_wire.h: 119: write_byte_ow(ID[i]);
  1676  0258  0835               	movf	(read_temperature_ow_18B20@i),w
  1677  0259  0734               	addwf	(read_temperature_ow_18B20@ID),w
  1678  025A  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0
  1679  025B  0827               	movf	0+(??_read_temperature_ow_18B20+0)+0,w
  1680  025C  0084               	movwf	fsr0
  1681  025D  1383               	bcf	status, 7	;select IRP bank0
  1682  025E  0800               	movf	indf,w
  1683  025F  2395               	fcall	_write_byte_ow
  1684                           	line	118
  1685                           	
  1686  0260                     l4003:	
  1687  0260  3001               	movlw	(01h)
  1688  0261  1283               	bcf	status, 5	;RP0=0, select bank0
  1689  0262  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0
  1690  0263  0827               	movf	(??_read_temperature_ow_18B20+0)+0,w
  1691  0264  07B5               	addwf	(read_temperature_ow_18B20@i),f
  1692                           	
  1693  0265                     l4005:	
  1694  0265  3008               	movlw	(08h)
  1695  0266  0235               	subwf	(read_temperature_ow_18B20@i),w
  1696  0267  1C03               	skipc
  1697  0268  2A6A               	goto	u911
  1698  0269  2A6B               	goto	u910
  1699  026A                     u911:
  1700  026A  2A58               	goto	l4001
  1701  026B                     u910:
  1702  026B  2A6C               	goto	l4007
  1703                           	
  1704  026C                     l1396:	
  1705                           	line	120
  1706                           	
  1707  026C                     l4007:	
  1708                           ;one_wire.h: 120: write_byte_ow(0x44);
  1709  026C  3044               	movlw	(044h)
  1710  026D  2395               	fcall	_write_byte_ow
  1711                           	line	121
  1712                           ;one_wire.h: 121: while(read_bit_ow()==0);
  1713  026E  2A70               	goto	l4009
  1714                           	
  1715  026F                     l1398:	
  1716  026F  2A70               	goto	l4009
  1717                           	
  1718  0270                     l1397:	
  1719                           	
  1720  0270                     l4009:	
  1721  0270  243F               	fcall	_read_bit_ow
  1722  0271  3A00               	xorlw	0
  1723  0272  1903               	skipnz
  1724  0273  2A75               	goto	u921
  1725  0274  2A76               	goto	u920
  1726  0275                     u921:
  1727  0275  2A70               	goto	l4009
  1728  0276                     u920:
  1729  0276  2A77               	goto	l4011
  1730                           	
  1731  0277                     l1399:	
  1732                           	line	122
  1733                           	
  1734  0277                     l4011:	
  1735                           ;one_wire.h: 122: reset_ow();
  1736  0277  23EE               	fcall	_reset_ow
  1737                           	line	123
  1738                           ;one_wire.h: 123: write_byte_ow(0x55);
  1739  0278  3055               	movlw	(055h)
  1740  0279  2395               	fcall	_write_byte_ow
  1741                           	line	124
  1742                           	
  1743  027A                     l4013:	
  1744                           ;one_wire.h: 124: for(i=0; i<8; i++)
  1745  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  1746  027B  01B5               	clrf	(read_temperature_ow_18B20@i)
  1747                           	
  1748  027C                     l4015:	
  1749  027C  3008               	movlw	(08h)
  1750  027D  0235               	subwf	(read_temperature_ow_18B20@i),w
  1751  027E  1C03               	skipc
  1752  027F  2A81               	goto	u931
  1753  0280  2A82               	goto	u930
  1754  0281                     u931:
  1755  0281  2A84               	goto	l4019
  1756  0282                     u930:
  1757  0282  2A98               	goto	l4025
  1758                           	
  1759  0283                     l4017:	
  1760  0283  2A98               	goto	l4025
  1761                           	line	125
  1762                           	
  1763  0284                     l1400:	
  1764                           	
  1765  0284                     l4019:	
  1766                           ;one_wire.h: 125: write_byte_ow(ID[i]);
  1767  0284  0835               	movf	(read_temperature_ow_18B20@i),w
  1768  0285  0734               	addwf	(read_temperature_ow_18B20@ID),w
  1769  0286  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0
  1770  0287  0827               	movf	0+(??_read_temperature_ow_18B20+0)+0,w
  1771  0288  0084               	movwf	fsr0
  1772  0289  1383               	bcf	status, 7	;select IRP bank0
  1773  028A  0800               	movf	indf,w
  1774  028B  2395               	fcall	_write_byte_ow
  1775                           	line	124
  1776                           	
  1777  028C                     l4021:	
  1778  028C  3001               	movlw	(01h)
  1779  028D  1283               	bcf	status, 5	;RP0=0, select bank0
  1780  028E  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0
  1781  028F  0827               	movf	(??_read_temperature_ow_18B20+0)+0,w
  1782  0290  07B5               	addwf	(read_temperature_ow_18B20@i),f
  1783                           	
  1784  0291                     l4023:	
  1785  0291  3008               	movlw	(08h)
  1786  0292  0235               	subwf	(read_temperature_ow_18B20@i),w
  1787  0293  1C03               	skipc
  1788  0294  2A96               	goto	u941
  1789  0295  2A97               	goto	u940
  1790  0296                     u941:
  1791  0296  2A84               	goto	l4019
  1792  0297                     u940:
  1793  0297  2A98               	goto	l4025
  1794                           	
  1795  0298                     l1401:	
  1796                           	line	126
  1797                           	
  1798  0298                     l4025:	
  1799                           ;one_wire.h: 126: write_byte_ow(0xBE);
  1800  0298  30BE               	movlw	(0BEh)
  1801  0299  2395               	fcall	_write_byte_ow
  1802                           	line	127
  1803                           	
  1804  029A                     l4027:	
  1805                           ;one_wire.h: 127: for(i=0; i<9; i++)
  1806  029A  1283               	bcf	status, 5	;RP0=0, select bank0
  1807  029B  01B5               	clrf	(read_temperature_ow_18B20@i)
  1808                           	
  1809  029C                     l4029:	
  1810  029C  3009               	movlw	(09h)
  1811  029D  0235               	subwf	(read_temperature_ow_18B20@i),w
  1812  029E  1C03               	skipc
  1813  029F  2AA1               	goto	u951
  1814  02A0  2AA2               	goto	u950
  1815  02A1                     u951:
  1816  02A1  2AA4               	goto	l4033
  1817  02A2                     u950:
  1818  02A2  2AB8               	goto	l4039
  1819                           	
  1820  02A3                     l4031:	
  1821  02A3  2AB8               	goto	l4039
  1822                           	line	128
  1823                           	
  1824  02A4                     l1402:	
  1825                           	
  1826  02A4                     l4033:	
  1827                           ;one_wire.h: 128: dat[i]=read_byte_ow();
  1828  02A4  2361               	fcall	_read_byte_ow
  1829  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  1830  02A6  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0
  1831  02A7  0835               	movf	(read_temperature_ow_18B20@i),w
  1832  02A8  3E29               	addlw	read_temperature_ow_18B20@dat&0ffh
  1833  02A9  0084               	movwf	fsr0
  1834  02AA  0827               	movf	(??_read_temperature_ow_18B20+0)+0,w
  1835  02AB  1383               	bcf	status, 7	;select IRP bank0
  1836  02AC  0080               	movwf	indf
  1837                           	line	127
  1838                           	
  1839  02AD                     l4035:	
  1840  02AD  3001               	movlw	(01h)
  1841  02AE  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0
  1842  02AF  0827               	movf	(??_read_temperature_ow_18B20+0)+0,w
  1843  02B0  07B5               	addwf	(read_temperature_ow_18B20@i),f
  1844                           	
  1845  02B1                     l4037:	
  1846  02B1  3009               	movlw	(09h)
  1847  02B2  0235               	subwf	(read_temperature_ow_18B20@i),w
  1848  02B3  1C03               	skipc
  1849  02B4  2AB6               	goto	u961
  1850  02B5  2AB7               	goto	u960
  1851  02B6                     u961:
  1852  02B6  2AA4               	goto	l4033
  1853  02B7                     u960:
  1854  02B7  2AB8               	goto	l4039
  1855                           	
  1856  02B8                     l1403:	
  1857                           	line	129
  1858                           	
  1859  02B8                     l4039:	
  1860                           ;one_wire.h: 129: temperature = dat[0] + dat[1] * 256;
  1861  02B8  082A               	movf	0+(read_temperature_ow_18B20@dat)+01h,w
  1862  02B9  00A7               	movwf	(??_read_temperature_ow_18B20+0)+0+0
  1863  02BA  01A8               	clrf	(??_read_temperature_ow_18B20+0)+0+1
  1864  02BB  0827               	movf	(??_read_temperature_ow_18B20+0)+0,w
  1865  02BC  00A8               	movwf	(??_read_temperature_ow_18B20+0)+1
  1866  02BD  01A7               	clrf	(??_read_temperature_ow_18B20+0)+0
  1867  02BE  0829               	movf	(read_temperature_ow_18B20@dat),w
  1868  02BF  0727               	addwf	0+(??_read_temperature_ow_18B20+0)+0,w
  1869  02C0  00B2               	movwf	(read_temperature_ow_18B20@temperature)
  1870  02C1  0828               	movf	1+(??_read_temperature_ow_18B20+0)+0,w
  1871  02C2  1803               	skipnc
  1872  02C3  0A28               	incf	1+(??_read_temperature_ow_18B20+0)+0,w
  1873  02C4  00B3               	movwf	((read_temperature_ow_18B20@temperature))+1
  1874                           	line	131
  1875                           	
  1876  02C5                     l4041:	
  1877                           ;one_wire.h: 131: return temperature;
  1878  02C5  0833               	movf	(read_temperature_ow_18B20@temperature+1),w
  1879  02C6  01A6               	clrf	(?_read_temperature_ow_18B20+1)
  1880  02C7  07A6               	addwf	(?_read_temperature_ow_18B20+1)
  1881  02C8  0832               	movf	(read_temperature_ow_18B20@temperature),w
  1882  02C9  01A5               	clrf	(?_read_temperature_ow_18B20)
  1883  02CA  07A5               	addwf	(?_read_temperature_ow_18B20)
  1884                           
  1885  02CB  2ACC               	goto	l1404
  1886                           	
  1887  02CC                     l4043:	
  1888                           	line	132
  1889                           	
  1890  02CC                     l1404:	
  1891  02CC  0008               	return
  1892                           	opt stack 0
  1893                           GLOBAL	__end_of_read_temperature_ow_18B20
  1894  02CD                     	__end_of_read_temperature_ow_18B20:
  1895                           	signat	_read_temperature_ow_18B20,4218
  1896                           	global	_reset_ow
  1897                           
  1898 ;; *************** function _reset_ow *****************
  1899 ;; Defined at:
  1900 ;;		line 30 in file "one_wire.h"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  presence        1    5[COMMON] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      unsigned char 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1
  1914 ;;      Params:         0       0       0
  1915 ;;      Locals:         1       0       0
  1916 ;;      Temps:          1       0       0
  1917 ;;      Totals:         2       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_read_temperature_ow_18B20
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           psect	text455,local,class=CODE,delta=2,merge=1
  1929                           global __ptext455
  1930  03EE                     __ptext455:	;psect for function _reset_ow
  1931                           psect	text455
  1932                           	file	"one_wire.h"
  1933                           	line	30
  1934                           	global	__size_of_reset_ow
  1935  001F                     	__size_of_reset_ow	equ	__end_of_reset_ow-_reset_ow
  1936                           	
  1937  03EE                     _reset_ow:	
  1938                           	opt	stack 5
  1939                           ; Regs used in _reset_ow: [wreg+status,2]
  1940                           	line	33
  1941                           	
  1942  03EE                     l3627:	
  1943                           ;one_wire.h: 31: unsigned char presence;
  1944                           ;one_wire.h: 33: TRISIO4 = 1;
  1945  03EE  1683               	bsf	status, 5	;RP0=1, select bank1
  1946  03EF  1605               	bsf	(1068/8)^080h,(1068)&7	;volatile
  1947                           	line	35
  1948                           ;one_wire.h: 35: sGPIO.GP4 = 0;
  1949  03F0  1279               	bcf	(_sGPIO),4
  1950                           	line	36
  1951                           	
  1952  03F1                     l3629:	
  1953                           ;one_wire.h: 36: GPIO = sGPIO.port;
  1954  03F1  0879               	movf	(_sGPIO),w
  1955  03F2  1283               	bcf	status, 5	;RP0=0, select bank0
  1956  03F3  0085               	movwf	(5)	;volatile
  1957                           	line	37
  1958                           	
  1959  03F4                     l3631:	
  1960                           ;one_wire.h: 37: TRISIO4 = 0;
  1961  03F4  1683               	bsf	status, 5	;RP0=1, select bank1
  1962  03F5  1205               	bcf	(1068/8)^080h,(1068)&7	;volatile
  1963                           	line	39
  1964                           ;one_wire.h: 39: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1965                           	opt asmopt_off
  1966  03F6  30A6               movlw	166
  1967  03F7  00F4               movwf	(??_reset_ow+0)+0,f
  1968  03F8                     u1277:
  1969  03F8  0BF4               decfsz	(??_reset_ow+0)+0,f
  1970  03F9  2BF8               	goto	u1277
  1971  03FA  0000               	nop
  1972                           opt asmopt_on
  1973                           
  1974                           	line	40
  1975                           	
  1976  03FB                     l3633:	
  1977                           ;one_wire.h: 40: TRISIO4 = 1;
  1978  03FB  1683               	bsf	status, 5	;RP0=1, select bank1
  1979  03FC  1605               	bsf	(1068/8)^080h,(1068)&7	;volatile
  1980                           	line	42
  1981                           ;one_wire.h: 42: _delay((unsigned long)((70)*(4000000/4000000.0)));
  1982                           	opt asmopt_off
  1983  03FD  3017               movlw	23
  1984  03FE  00F4               movwf	(??_reset_ow+0)+0,f
  1985  03FF                     u1287:
  1986  03FF  0BF4               decfsz	(??_reset_ow+0)+0,f
  1987  0400  2BFF               	goto	u1287
  1988                           opt asmopt_on
  1989                           
  1990                           	line	43
  1991                           	
  1992  0401                     l3635:	
  1993                           ;one_wire.h: 43: presence = GPIObits.GP4;
  1994  0401  3000               	movlw	0
  1995  0402  1283               	bcf	status, 5	;RP0=0, select bank0
  1996  0403  1A05               	btfsc	(5),4	;volatile
  1997  0404  3001               	movlw	1
  1998  0405  00F5               	movwf	(reset_ow@presence)
  1999                           	line	45
  2000                           	
  2001  0406                     l3637:	
  2002                           ;one_wire.h: 45: _delay((unsigned long)((430)*(4000000/4000000.0)));
  2003                           	opt asmopt_off
  2004  0406  308F               movlw	143
  2005  0407  00F4               movwf	(??_reset_ow+0)+0,f
  2006  0408                     u1297:
  2007  0408  0BF4               decfsz	(??_reset_ow+0)+0,f
  2008  0409  2C08               	goto	u1297
  2009                           opt asmopt_on
  2010                           
  2011                           	line	46
  2012                           	
  2013  040A                     l3639:	
  2014                           ;one_wire.h: 46: return presence;
  2015  040A  0875               	movf	(reset_ow@presence),w
  2016  040B  2C0C               	goto	l1374
  2017                           	
  2018  040C                     l3641:	
  2019                           	line	47
  2020                           	
  2021  040C                     l1374:	
  2022  040C  0008               	return
  2023                           	opt stack 0
  2024                           GLOBAL	__end_of_reset_ow
  2025  040D                     	__end_of_reset_ow:
  2026                           	signat	_reset_ow,89
  2027                           	global	_read_byte_ow
  2028                           
  2029 ;; *************** function _read_byte_ow *****************
  2030 ;; Defined at:
  2031 ;;		line 69 in file "one_wire.h"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  i               1    1[BANK0 ] unsigned char 
  2036 ;;  value           1    0[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      unsigned char 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1
  2046 ;;      Params:         0       0       0
  2047 ;;      Locals:         0       2       0
  2048 ;;      Temps:          2       0       0
  2049 ;;      Totals:         2       2       0
  2050 ;;Total ram usage:        4 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		_read_bit_ow
  2055 ;; This function is called by:
  2056 ;;		_read_temperature_ow_18B20
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           psect	text456,local,class=CODE,delta=2,merge=1
  2060                           global __ptext456
  2061  0361                     __ptext456:	;psect for function _read_byte_ow
  2062                           psect	text456
  2063                           	file	"one_wire.h"
  2064                           	line	69
  2065                           	global	__size_of_read_byte_ow
  2066  0034                     	__size_of_read_byte_ow	equ	__end_of_read_byte_ow-_read_byte_ow
  2067                           	
  2068  0361                     _read_byte_ow:	
  2069                           	opt	stack 4
  2070                           ; Regs used in _read_byte_ow: [wreg+status,2+status,0+pclath+cstack]
  2071                           	line	71
  2072                           	
  2073  0361                     l3957:	
  2074                           ;one_wire.h: 70: unsigned char i;
  2075                           ;one_wire.h: 71: unsigned char value = 0;
  2076  0361  1283               	bcf	status, 5	;RP0=0, select bank0
  2077  0362  01A0               	clrf	(read_byte_ow@value)
  2078                           	line	73
  2079                           ;one_wire.h: 73: for( i=0; i<8; i++) {
  2080  0363  01A1               	clrf	(read_byte_ow@i)
  2081                           	
  2082  0364                     l3959:	
  2083  0364  3008               	movlw	(08h)
  2084  0365  0221               	subwf	(read_byte_ow@i),w
  2085  0366  1C03               	skipc
  2086  0367  2B69               	goto	u831
  2087  0368  2B6A               	goto	u830
  2088  0369                     u831:
  2089  0369  2B6C               	goto	l3963
  2090  036A                     u830:
  2091  036A  2B92               	goto	l3971
  2092                           	
  2093  036B                     l3961:	
  2094  036B  2B92               	goto	l3971
  2095                           	
  2096  036C                     l1380:	
  2097                           	line	74
  2098                           	
  2099  036C                     l3963:	
  2100                           ;one_wire.h: 74: if(read_bit_ow()) value |= (0x01<<i);
  2101  036C  243F               	fcall	_read_bit_ow
  2102  036D  3A00               	xorlw	0
  2103  036E  1903               	skipnz
  2104  036F  2B71               	goto	u841
  2105  0370  2B72               	goto	u840
  2106  0371                     u841:
  2107  0371  2B81               	goto	l3967
  2108  0372                     u840:
  2109                           	
  2110  0372                     l3965:	
  2111  0372  3001               	movlw	(01h)
  2112  0373  00F5               	movwf	(??_read_byte_ow+0)+0
  2113  0374  1283               	bcf	status, 5	;RP0=0, select bank0
  2114  0375  0A21               	incf	(read_byte_ow@i),w
  2115  0376  2B79               	goto	u854
  2116  0377                     u855:
  2117  0377  1003               	clrc
  2118  0378  0DF5               	rlf	(??_read_byte_ow+0)+0,f
  2119  0379                     u854:
  2120  0379  3EFF               	addlw	-1
  2121  037A  1D03               	skipz
  2122  037B  2B77               	goto	u855
  2123  037C  0875               	movf	0+(??_read_byte_ow+0)+0,w
  2124  037D  00F6               	movwf	(??_read_byte_ow+1)+0
  2125  037E  0876               	movf	(??_read_byte_ow+1)+0,w
  2126  037F  04A0               	iorwf	(read_byte_ow@value),f
  2127  0380  2B81               	goto	l3967
  2128                           	
  2129  0381                     l1382:	
  2130                           	line	76
  2131                           	
  2132  0381                     l3967:	
  2133                           ;one_wire.h: 76: _delay((unsigned long)((120)*(4000000/4000000.0)));
  2134                           	opt asmopt_off
  2135  0381  3027               movlw	39
  2136  0382  00F5               movwf	(??_read_byte_ow+0)+0,f
  2137  0383                     u1307:
  2138  0383  0BF5               decfsz	(??_read_byte_ow+0)+0,f
  2139  0384  2B83               	goto	u1307
  2140  0385  2B86               	nop2	;nop
  2141                           opt asmopt_on
  2142                           
  2143                           	line	73
  2144                           	
  2145  0386                     l3969:	
  2146  0386  3001               	movlw	(01h)
  2147  0387  00F5               	movwf	(??_read_byte_ow+0)+0
  2148  0388  0875               	movf	(??_read_byte_ow+0)+0,w
  2149  0389  1283               	bcf	status, 5	;RP0=0, select bank0
  2150  038A  07A1               	addwf	(read_byte_ow@i),f
  2151  038B  3008               	movlw	(08h)
  2152  038C  0221               	subwf	(read_byte_ow@i),w
  2153  038D  1C03               	skipc
  2154  038E  2B90               	goto	u861
  2155  038F  2B91               	goto	u860
  2156  0390                     u861:
  2157  0390  2B6C               	goto	l3963
  2158  0391                     u860:
  2159  0391  2B92               	goto	l3971
  2160                           	
  2161  0392                     l1381:	
  2162                           	line	78
  2163                           	
  2164  0392                     l3971:	
  2165                           ;one_wire.h: 77: }
  2166                           ;one_wire.h: 78: return value;
  2167  0392  0820               	movf	(read_byte_ow@value),w
  2168  0393  2B94               	goto	l1383
  2169                           	
  2170  0394                     l3973:	
  2171                           	line	79
  2172                           	
  2173  0394                     l1383:	
  2174  0394  0008               	return
  2175                           	opt stack 0
  2176                           GLOBAL	__end_of_read_byte_ow
  2177  0395                     	__end_of_read_byte_ow:
  2178                           	signat	_read_byte_ow,89
  2179                           	global	_read_bit_ow
  2180                           
  2181 ;; *************** function _read_bit_ow *****************
  2182 ;; Defined at:
  2183 ;;		line 50 in file "one_wire.h"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      unsigned char 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1
  2197 ;;      Params:         0       0       0
  2198 ;;      Locals:         0       0       0
  2199 ;;      Temps:          1       0       0
  2200 ;;      Totals:         1       0       0
  2201 ;;Total ram usage:        1 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_read_byte_ow
  2208 ;;		_read_temperature_ow_18B20
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           psect	text457,local,class=CODE,delta=2,merge=1
  2212                           global __ptext457
  2213  043F                     __ptext457:	;psect for function _read_bit_ow
  2214                           psect	text457
  2215                           	file	"one_wire.h"
  2216                           	line	50
  2217                           	global	__size_of_read_bit_ow
  2218  0014                     	__size_of_read_bit_ow	equ	__end_of_read_bit_ow-_read_bit_ow
  2219                           	
  2220  043F                     _read_bit_ow:	
  2221                           	opt	stack 4
  2222                           ; Regs used in _read_bit_ow: [wreg+status,2+status,0]
  2223                           	line	52
  2224                           	
  2225  043F                     l3941:	
  2226                           ;one_wire.h: 52: sGPIO.GP4 = 0;
  2227  043F  1279               	bcf	(_sGPIO),4
  2228                           	line	53
  2229                           	
  2230  0440                     l3943:	
  2231                           ;one_wire.h: 53: GPIO = sGPIO.port;
  2232  0440  0879               	movf	(_sGPIO),w
  2233  0441  1283               	bcf	status, 5	;RP0=0, select bank0
  2234  0442  0085               	movwf	(5)	;volatile
  2235                           	line	54
  2236                           	
  2237  0443                     l3945:	
  2238                           ;one_wire.h: 54: TRISIO4 = 0;
  2239  0443  1683               	bsf	status, 5	;RP0=1, select bank1
  2240  0444  1205               	bcf	(1068/8)^080h,(1068)&7	;volatile
  2241                           	line	56
  2242                           	
  2243  0445                     l3947:	
  2244                           ;one_wire.h: 56: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2245                           		opt asmopt_off
  2246  0445  0000               	nop
  2247                           	opt asmopt_on
  2248                           
  2249                           	line	57
  2250                           	
  2251  0446                     l3949:	
  2252                           ;one_wire.h: 57: TRISIO4 = 1;
  2253  0446  1683               	bsf	status, 5	;RP0=1, select bank1
  2254  0447  1605               	bsf	(1068/8)^080h,(1068)&7	;volatile
  2255                           	line	59
  2256                           ;one_wire.h: 59: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2257                           	opt asmopt_off
  2258  0448  3003               movlw	3
  2259  0449  00F4               movwf	(??_read_bit_ow+0)+0,f
  2260  044A                     u1317:
  2261  044A  0BF4               decfsz	(??_read_bit_ow+0)+0,f
  2262  044B  2C4A               	goto	u1317
  2263                           opt asmopt_on
  2264                           
  2265                           	line	64
  2266                           	
  2267  044C                     l3951:	
  2268                           ;one_wire.h: 64: _delay((unsigned long)((4)*(4000000/4000000.0)));
  2269                           		opt asmopt_off
  2270  044C  2C4D               	nop2	;2 cycle nop
  2271                           	opt asmopt_on
  2272                           	opt asmopt_off
  2273  044D  2C4E               	nop2	;2 cycle nop
  2274                           	opt asmopt_on
  2275                           
  2276                           	line	65
  2277                           	
  2278  044E                     l3953:	
  2279                           ;one_wire.h: 65: return GPIObits.GP4;
  2280  044E  1283               	bcf	status, 5	;RP0=0, select bank0
  2281  044F  0E05               	swapf	(5),w	;volatile
  2282  0450  3901               	andlw	(1<<1)-1
  2283  0451  2C52               	goto	l1377
  2284                           	
  2285  0452                     l3955:	
  2286                           	line	66
  2287                           	
  2288  0452                     l1377:	
  2289  0452  0008               	return
  2290                           	opt stack 0
  2291                           GLOBAL	__end_of_read_bit_ow
  2292  0453                     	__end_of_read_bit_ow:
  2293                           	signat	_read_bit_ow,89
  2294                           	global	_write_byte_ow
  2295                           
  2296 ;; *************** function _write_byte_ow *****************
  2297 ;; Defined at:
  2298 ;;		line 96 in file "one_wire.h"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  val             1    wreg     unsigned char 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  val             1    2[BANK0 ] unsigned char 
  2303 ;;  i               1    4[BANK0 ] unsigned char 
  2304 ;;  temp            1    3[BANK0 ] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;		None               void
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0, pclath, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1
  2314 ;;      Params:         0       0       0
  2315 ;;      Locals:         0       3       0
  2316 ;;      Temps:          0       2       0
  2317 ;;      Totals:         0       5       0
  2318 ;;Total ram usage:        5 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    2
  2321 ;; This function calls:
  2322 ;;		_write_bit_ow
  2323 ;; This function is called by:
  2324 ;;		_read_temperature_ow_18B20
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           psect	text458,local,class=CODE,delta=2,merge=1
  2328                           global __ptext458
  2329  0395                     __ptext458:	;psect for function _write_byte_ow
  2330                           psect	text458
  2331                           	file	"one_wire.h"
  2332                           	line	96
  2333                           	global	__size_of_write_byte_ow
  2334  002F                     	__size_of_write_byte_ow	equ	__end_of_write_byte_ow-_write_byte_ow
  2335                           	
  2336  0395                     _write_byte_ow:	
  2337                           	opt	stack 4
  2338                           ; Regs used in _write_byte_ow: [wreg+status,2+status,0+pclath+cstack]
  2339                           ;write_byte_ow@val stored from wreg
  2340                           	line	100
  2341  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  2342  0396  00A2               	movwf	(write_byte_ow@val)
  2343                           	
  2344  0397                     l3975:	
  2345                           ;one_wire.h: 97: unsigned char i;
  2346                           ;one_wire.h: 98: unsigned char temp;
  2347                           ;one_wire.h: 100: for( i=0; i<8; i++) {
  2348  0397  01A4               	clrf	(write_byte_ow@i)
  2349                           	
  2350  0398                     l3977:	
  2351  0398  3008               	movlw	(08h)
  2352  0399  0224               	subwf	(write_byte_ow@i),w
  2353  039A  1C03               	skipc
  2354  039B  2B9D               	goto	u871
  2355  039C  2B9E               	goto	u870
  2356  039D                     u871:
  2357  039D  2BA0               	goto	l3981
  2358  039E                     u870:
  2359  039E  2BBF               	goto	l3989
  2360                           	
  2361  039F                     l3979:	
  2362  039F  2BBF               	goto	l3989
  2363                           	
  2364  03A0                     l1390:	
  2365                           	line	101
  2366                           	
  2367  03A0                     l3981:	
  2368                           ;one_wire.h: 101: temp = val>>i;
  2369  03A0  0822               	movf	(write_byte_ow@val),w
  2370  03A1  00A0               	movwf	(??_write_byte_ow+0)+0
  2371  03A2  0A24               	incf	(write_byte_ow@i),w
  2372  03A3  2BA6               	goto	u884
  2373  03A4                     u885:
  2374  03A4  1003               	clrc
  2375  03A5  0CA0               	rrf	(??_write_byte_ow+0)+0,f
  2376  03A6                     u884:
  2377  03A6  3EFF               	addlw	-1
  2378  03A7  1D03               	skipz
  2379  03A8  2BA4               	goto	u885
  2380  03A9  0820               	movf	0+(??_write_byte_ow+0)+0,w
  2381  03AA  00A1               	movwf	(??_write_byte_ow+1)+0
  2382  03AB  0821               	movf	(??_write_byte_ow+1)+0,w
  2383  03AC  00A3               	movwf	(write_byte_ow@temp)
  2384                           	line	102
  2385                           ;one_wire.h: 102: temp &= 0x01;
  2386  03AD  3001               	movlw	(01h)
  2387  03AE  00A0               	movwf	(??_write_byte_ow+0)+0
  2388  03AF  0820               	movf	(??_write_byte_ow+0)+0,w
  2389  03B0  05A3               	andwf	(write_byte_ow@temp),f
  2390                           	line	103
  2391                           	
  2392  03B1                     l3983:	
  2393                           ;one_wire.h: 103: write_bit_ow(temp);
  2394  03B1  0823               	movf	(write_byte_ow@temp),w
  2395  03B2  2427               	fcall	_write_bit_ow
  2396                           	line	100
  2397                           	
  2398  03B3                     l3985:	
  2399  03B3  3001               	movlw	(01h)
  2400  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2401  03B5  00A0               	movwf	(??_write_byte_ow+0)+0
  2402  03B6  0820               	movf	(??_write_byte_ow+0)+0,w
  2403  03B7  07A4               	addwf	(write_byte_ow@i),f
  2404                           	
  2405  03B8                     l3987:	
  2406  03B8  3008               	movlw	(08h)
  2407  03B9  0224               	subwf	(write_byte_ow@i),w
  2408  03BA  1C03               	skipc
  2409  03BB  2BBD               	goto	u891
  2410  03BC  2BBE               	goto	u890
  2411  03BD                     u891:
  2412  03BD  2BA0               	goto	l3981
  2413  03BE                     u890:
  2414  03BE  2BBF               	goto	l3989
  2415                           	
  2416  03BF                     l1391:	
  2417                           	line	106
  2418                           	
  2419  03BF                     l3989:	
  2420                           ;one_wire.h: 104: }
  2421                           ;one_wire.h: 106: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2422                           	opt asmopt_off
  2423  03BF  3021               movlw	33
  2424  03C0  00A0               movwf	(??_write_byte_ow+0)+0,f
  2425  03C1                     u1327:
  2426  03C1  0BA0               decfsz	(??_write_byte_ow+0)+0,f
  2427  03C2  2BC1               	goto	u1327
  2428                           opt asmopt_on
  2429                           
  2430                           	line	107
  2431                           	
  2432  03C3                     l1392:	
  2433  03C3  0008               	return
  2434                           	opt stack 0
  2435                           GLOBAL	__end_of_write_byte_ow
  2436  03C4                     	__end_of_write_byte_ow:
  2437                           	signat	_write_byte_ow,4216
  2438                           	global	_write_bit_ow
  2439                           
  2440 ;; *************** function _write_bit_ow *****************
  2441 ;; Defined at:
  2442 ;;		line 82 in file "one_wire.h"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  bitval          1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  bitval          1    5[COMMON] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;		None               void
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1
  2456 ;;      Params:         0       0       0
  2457 ;;      Locals:         1       0       0
  2458 ;;      Temps:          1       0       0
  2459 ;;      Totals:         2       0       0
  2460 ;;Total ram usage:        2 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_write_byte_ow
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           psect	text459,local,class=CODE,delta=2,merge=1
  2470                           global __ptext459
  2471  0427                     __ptext459:	;psect for function _write_bit_ow
  2472                           psect	text459
  2473                           	file	"one_wire.h"
  2474                           	line	82
  2475                           	global	__size_of_write_bit_ow
  2476  0018                     	__size_of_write_bit_ow	equ	__end_of_write_bit_ow-_write_bit_ow
  2477                           	
  2478  0427                     _write_bit_ow:	
  2479                           	opt	stack 4
  2480                           ; Regs used in _write_bit_ow: [wreg]
  2481                           ;write_bit_ow@bitval stored from wreg
  2482                           	line	84
  2483  0427  00F5               	movwf	(write_bit_ow@bitval)
  2484                           	
  2485  0428                     l3677:	
  2486                           ;one_wire.h: 84: sGPIO.GP4 = 0;
  2487  0428  1279               	bcf	(_sGPIO),4
  2488                           	line	85
  2489                           	
  2490  0429                     l3679:	
  2491                           ;one_wire.h: 85: GPIO = sGPIO.port;
  2492  0429  0879               	movf	(_sGPIO),w
  2493  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  2494  042B  0085               	movwf	(5)	;volatile
  2495                           	line	86
  2496                           	
  2497  042C                     l3681:	
  2498                           ;one_wire.h: 86: TRISIO4 = 0;
  2499  042C  1683               	bsf	status, 5	;RP0=1, select bank1
  2500  042D  1205               	bcf	(1068/8)^080h,(1068)&7	;volatile
  2501                           	line	88
  2502                           	
  2503  042E                     l3683:	
  2504                           ;one_wire.h: 88: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2505                           		opt asmopt_off
  2506  042E  0000               	nop
  2507                           	opt asmopt_on
  2508                           
  2509                           	line	89
  2510                           ;one_wire.h: 89: if(bitval == 1)
  2511  042F  0875               	movf	(write_bit_ow@bitval),w
  2512  0430  3A01               	xorlw	01h
  2513  0431  1D03               	skipz
  2514  0432  2C34               	goto	u461
  2515  0433  2C35               	goto	u460
  2516  0434                     u461:
  2517  0434  2C38               	goto	l3687
  2518  0435                     u460:
  2519                           	line	90
  2520                           	
  2521  0435                     l3685:	
  2522                           ;one_wire.h: 90: TRISIO4 = 1;
  2523  0435  1683               	bsf	status, 5	;RP0=1, select bank1
  2524  0436  1605               	bsf	(1068/8)^080h,(1068)&7	;volatile
  2525  0437  2C38               	goto	l3687
  2526                           	
  2527  0438                     l1386:	
  2528                           	line	92
  2529                           	
  2530  0438                     l3687:	
  2531                           ;one_wire.h: 92: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2532                           	opt asmopt_off
  2533  0438  3021               movlw	33
  2534  0439  00F4               movwf	(??_write_bit_ow+0)+0,f
  2535  043A                     u1337:
  2536  043A  0BF4               decfsz	(??_write_bit_ow+0)+0,f
  2537  043B  2C3A               	goto	u1337
  2538                           opt asmopt_on
  2539                           
  2540                           	line	93
  2541                           	
  2542  043C                     l3689:	
  2543                           ;one_wire.h: 93: TRISIO4 = 1;
  2544  043C  1683               	bsf	status, 5	;RP0=1, select bank1
  2545  043D  1605               	bsf	(1068/8)^080h,(1068)&7	;volatile
  2546                           	line	94
  2547                           	
  2548  043E                     l1387:	
  2549  043E  0008               	return
  2550                           	opt stack 0
  2551                           GLOBAL	__end_of_write_bit_ow
  2552  043F                     	__end_of_write_bit_ow:
  2553                           	signat	_write_bit_ow,4216
  2554                           	global	_ConfigureOscillator
  2555                           
  2556 ;; *************** function _ConfigureOscillator *****************
  2557 ;; Defined at:
  2558 ;;		line 14 in file "system.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		None
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1
  2572 ;;      Params:         0       0       0
  2573 ;;      Locals:         0       0       0
  2574 ;;      Temps:          0       0       0
  2575 ;;      Totals:         0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           psect	text460,local,class=CODE,delta=2,merge=1
  2586                           global __ptext460
  2587  0473                     __ptext460:	;psect for function _ConfigureOscillator
  2588                           psect	text460
  2589                           	file	"system.c"
  2590                           	line	14
  2591                           	global	__size_of_ConfigureOscillator
  2592  0001                     	__size_of_ConfigureOscillator	equ	__end_of_ConfigureOscillator-_ConfigureOscillator
  2593                           	
  2594  0473                     _ConfigureOscillator:	
  2595                           	opt	stack 6
  2596                           ; Regs used in _ConfigureOscillator: []
  2597                           	line	35
  2598                           	
  2599  0473                     l1885:	
  2600  0473  0008               	return
  2601                           	opt stack 0
  2602                           GLOBAL	__end_of_ConfigureOscillator
  2603  0474                     	__end_of_ConfigureOscillator:
  2604                           	signat	_ConfigureOscillator,88
  2605                           	global	_InitApp
  2606                           
  2607 ;; *************** function _InitApp *****************
  2608 ;; Defined at:
  2609 ;;		line 18 in file "user.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;		None               void
  2616 ;; Registers used:
  2617 ;;		wreg, status,2
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1
  2623 ;;      Params:         0       0       0
  2624 ;;      Locals:         0       0       0
  2625 ;;      Temps:          0       0       0
  2626 ;;      Totals:         0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           psect	text461,local,class=CODE,delta=2,merge=1
  2637                           global __ptext461
  2638  0467                     __ptext461:	;psect for function _InitApp
  2639                           psect	text461
  2640                           	file	"user.c"
  2641                           	line	18
  2642                           	global	__size_of_InitApp
  2643  0006                     	__size_of_InitApp	equ	__end_of_InitApp-_InitApp
  2644                           	
  2645  0467                     _InitApp:	
  2646                           	opt	stack 6
  2647                           ; Regs used in _InitApp: [wreg+status,2]
  2648                           	line	20
  2649                           	
  2650  0467                     l3835:	
  2651                           ;user.c: 20: OPTION_REGbits.nGPPU = 0;
  2652  0467  1683               	bsf	status, 5	;RP0=1, select bank1
  2653  0468  1381               	bcf	(129)^080h,7	;volatile
  2654                           	line	24
  2655                           	
  2656  0469                     l3837:	
  2657                           ;user.c: 24: ANSEL = 0x00;
  2658  0469  019F               	clrf	(159)^080h	;volatile
  2659                           	line	29
  2660                           	
  2661  046A                     l3839:	
  2662                           ;user.c: 29: TRISIO = 0b11011001;
  2663  046A  30D9               	movlw	(0D9h)
  2664  046B  0085               	movwf	(133)^080h	;volatile
  2665                           	line	41
  2666                           	
  2667  046C                     l2340:	
  2668  046C  0008               	return
  2669                           	opt stack 0
  2670                           GLOBAL	__end_of_InitApp
  2671  046D                     	__end_of_InitApp:
  2672                           	signat	_InitApp,88
  2673                           	global	_printf
  2674                           
  2675 ;; *************** function _printf *****************
  2676 ;; Defined at:
  2677 ;;		line 465 in file "/Applications/microchip/xc8/v1.10/sources/doprnt.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  f               1    wreg     PTR const unsigned char 
  2680 ;;		 -> STR_8(24), STR_7(24), STR_6(25), STR_5(20), 
  2681 ;;		 -> STR_4(15), STR_3(20), STR_2(30), STR_1(33), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  2684 ;;		 -> STR_8(24), STR_7(24), STR_6(25), STR_5(20), 
  2685 ;;		 -> STR_4(15), STR_3(20), STR_2(30), STR_1(33), 
  2686 ;;  _val            4   20[BANK0 ] struct .
  2687 ;;  c               1   24[BANK0 ] char 
  2688 ;;  prec            1   19[BANK0 ] char 
  2689 ;;  flag            1   17[BANK0 ] unsigned char 
  2690 ;;  ap              1   16[BANK0 ] PTR void [1]
  2691 ;;		 -> ?_printf(2), 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2   11[BANK0 ] int 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1
  2701 ;;      Params:         0       2       0
  2702 ;;      Locals:         0       9       0
  2703 ;;      Temps:          0       3       0
  2704 ;;      Totals:         0      14       0
  2705 ;;Total ram usage:       14 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    3
  2708 ;; This function calls:
  2709 ;;		_putch
  2710 ;;		___lwdiv
  2711 ;;		___lwmod
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           psect	text462,local,class=CODE,delta=2,merge=1
  2717                           global __ptext462
  2718  00DF                     __ptext462:	;psect for function _printf
  2719                           psect	text462
  2720                           	file	"/Applications/microchip/xc8/v1.10/sources/doprnt.c"
  2721                           	line	465
  2722                           	global	__size_of_printf
  2723  00C0                     	__size_of_printf	equ	__end_of_printf-_printf
  2724                           	
  2725  00DF                     _printf:	
  2726                           	opt	stack 4
  2727                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2728                           ;printf@f stored from wreg
  2729                           	line	542
  2730  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  2731  00E0  00B2               	movwf	(printf@f)
  2732                           	
  2733  00E1                     l4119:	
  2734                           ;doprnt.c: 466: va_list ap;
  2735                           ;doprnt.c: 499: signed char c;
  2736                           ;doprnt.c: 506: signed char prec;
  2737                           ;doprnt.c: 508: unsigned char flag;
  2738                           ;doprnt.c: 527: union {
  2739                           ;doprnt.c: 528: unsigned int _val;
  2740                           ;doprnt.c: 529: struct {
  2741                           ;doprnt.c: 530: const char * _cp;
  2742                           ;doprnt.c: 531: unsigned _len;
  2743                           ;doprnt.c: 532: } _str;
  2744                           ;doprnt.c: 533: } _val;
  2745                           ;doprnt.c: 542: *ap = __va_start();
  2746  00E1  302B               	movlw	(?_printf)&0ffh
  2747  00E2  00AD               	movwf	(??_printf+0)+0
  2748  00E3  082D               	movf	(??_printf+0)+0,w
  2749  00E4  00B0               	movwf	(printf@ap)
  2750                           	line	545
  2751                           ;doprnt.c: 545: while(c = *f++) {
  2752  00E5  298D               	goto	l4165
  2753                           	
  2754  00E6                     l2358:	
  2755                           	line	547
  2756                           	
  2757  00E6                     l4121:	
  2758                           ;doprnt.c: 547: if(c != '%')
  2759  00E6  0838               	movf	(printf@c),w
  2760  00E7  3A25               	xorlw	025h
  2761  00E8  1903               	skipnz
  2762  00E9  28EB               	goto	u1021
  2763  00EA  28EC               	goto	u1020
  2764  00EB                     u1021:
  2765  00EB  28EF               	goto	l2359
  2766  00EC                     u1020:
  2767                           	line	550
  2768                           	
  2769  00EC                     l4123:	
  2770                           ;doprnt.c: 549: {
  2771                           ;doprnt.c: 550: (putch(c) );
  2772  00EC  0838               	movf	(printf@c),w
  2773  00ED  23C4               	fcall	_putch
  2774                           	line	551
  2775                           ;doprnt.c: 551: continue;
  2776  00EE  298D               	goto	l4165
  2777                           	line	552
  2778                           	
  2779  00EF                     l2359:	
  2780                           	line	557
  2781                           ;doprnt.c: 552: }
  2782                           ;doprnt.c: 557: flag = 0;
  2783  00EF  01B1               	clrf	(printf@flag)
  2784                           	line	643
  2785                           ;doprnt.c: 643: switch(c = *f++) {
  2786  00F0  28F6               	goto	l4127
  2787                           	line	645
  2788                           ;doprnt.c: 645: case 0:
  2789                           	
  2790  00F1                     l2361:	
  2791                           	line	646
  2792                           ;doprnt.c: 646: goto alldone;
  2793  00F1  299E               	goto	l2376
  2794                           	line	705
  2795                           ;doprnt.c: 705: case 'd':
  2796                           	
  2797  00F2                     l2363:	
  2798  00F2  2907               	goto	l4129
  2799                           	line	706
  2800                           	
  2801  00F3                     l2364:	
  2802                           	line	707
  2803                           ;doprnt.c: 706: case 'i':
  2804                           ;doprnt.c: 707: break;
  2805  00F3  2907               	goto	l4129
  2806                           	line	810
  2807                           ;doprnt.c: 810: default:
  2808                           	
  2809  00F4                     l2366:	
  2810                           	line	821
  2811                           ;doprnt.c: 821: continue;
  2812  00F4  298D               	goto	l4165
  2813                           	line	830
  2814                           	
  2815  00F5                     l4125:	
  2816                           ;doprnt.c: 830: }
  2817  00F5  2907               	goto	l4129
  2818                           	line	643
  2819                           	
  2820  00F6                     l2360:	
  2821                           	
  2822  00F6                     l4127:	
  2823  00F6  3001               	movlw	01h
  2824  00F7  07B2               	addwf	(printf@f),f
  2825  00F8  30FF               	movlw	-01h
  2826  00F9  0732               	addwf	(printf@f),w
  2827  00FA  0084               	movwf	fsr0
  2828  00FB  2010               	fcall	stringdir
  2829  00FC  00B8               	movwf	(printf@c)
  2830                           	; Switch size 1, requested type "space"
  2831                           ; Number of cases is 3, Range of values is 0 to 105
  2832                           ; switch strategies available:
  2833                           ; Name         Instructions Cycles
  2834                           ; simple_byte           10     6 (average)
  2835                           ; direct_byte          112     6 (fixed)
  2836                           ; jumptable            260     6 (fixed)
  2837                           ; rangetable           110     6 (fixed)
  2838                           ; spacedrange          218     9 (fixed)
  2839                           ; locatedrange         106     3 (fixed)
  2840                           ;	Chosen strategy is simple_byte
  2841                           
  2842                           	opt asmopt_off
  2843  00FD  3A00               	xorlw	0^0	; case 0
  2844  00FE  1903               	skipnz
  2845  00FF  299E               	goto	l2376
  2846  0100  3A64               	xorlw	100^0	; case 100
  2847  0101  1903               	skipnz
  2848  0102  2907               	goto	l4129
  2849  0103  3A0D               	xorlw	105^100	; case 105
  2850  0104  1903               	skipnz
  2851  0105  2907               	goto	l4129
  2852  0106  298D               	goto	l4165
  2853                           	opt asmopt_on
  2854                           
  2855                           	line	830
  2856                           	
  2857  0107                     l2365:	
  2858                           	line	1259
  2859                           	
  2860  0107                     l4129:	
  2861                           ;doprnt.c: 1253: {
  2862                           ;doprnt.c: 1259: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2863  0107  0830               	movf	(printf@ap),w
  2864  0108  0084               	movwf	fsr0
  2865  0109  1383               	bcf	status, 7	;select IRP bank0
  2866  010A  0800               	movf	indf,w
  2867  010B  00B4               	movwf	(printf@_val)
  2868  010C  0A84               	incf	fsr0,f
  2869  010D  0800               	movf	indf,w
  2870  010E  00B5               	movwf	(printf@_val+1)
  2871                           	
  2872  010F                     l4131:	
  2873  010F  3002               	movlw	(02h)
  2874  0110  00AD               	movwf	(??_printf+0)+0
  2875  0111  082D               	movf	(??_printf+0)+0,w
  2876  0112  07B0               	addwf	(printf@ap),f
  2877                           	line	1261
  2878                           	
  2879  0113                     l4133:	
  2880                           ;doprnt.c: 1261: if((int)_val._val < 0) {
  2881  0113  1FB5               	btfss	(printf@_val+1),7
  2882  0114  2916               	goto	u1031
  2883  0115  2917               	goto	u1030
  2884  0116                     u1031:
  2885  0116  2921               	goto	l4139
  2886  0117                     u1030:
  2887                           	line	1262
  2888                           	
  2889  0117                     l4135:	
  2890                           ;doprnt.c: 1262: flag |= 0x03;
  2891  0117  3003               	movlw	(03h)
  2892  0118  00AD               	movwf	(??_printf+0)+0
  2893  0119  082D               	movf	(??_printf+0)+0,w
  2894  011A  04B1               	iorwf	(printf@flag),f
  2895                           	line	1263
  2896                           	
  2897  011B                     l4137:	
  2898                           ;doprnt.c: 1263: _val._val = -_val._val;
  2899  011B  09B4               	comf	(printf@_val),f
  2900  011C  09B5               	comf	(printf@_val+1),f
  2901  011D  0AB4               	incf	(printf@_val),f
  2902  011E  1903               	skipnz
  2903  011F  0AB5               	incf	(printf@_val+1),f
  2904  0120  2921               	goto	l4139
  2905                           	line	1264
  2906                           	
  2907  0121                     l2367:	
  2908                           	line	1305
  2909                           	
  2910  0121                     l4139:	
  2911                           ;doprnt.c: 1264: }
  2912                           ;doprnt.c: 1266: }
  2913                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2914  0121  01B8               	clrf	(printf@c)
  2915  0122  1403               	bsf	status,0
  2916  0123  0DB8               	rlf	(printf@c),f
  2917                           	
  2918  0124                     l4141:	
  2919  0124  0838               	movf	(printf@c),w
  2920  0125  3A05               	xorlw	05h
  2921  0126  1D03               	skipz
  2922  0127  2929               	goto	u1041
  2923  0128  292A               	goto	u1040
  2924  0129                     u1041:
  2925  0129  292C               	goto	l4145
  2926  012A                     u1040:
  2927  012A  294C               	goto	l4153
  2928                           	
  2929  012B                     l4143:	
  2930  012B  294C               	goto	l4153
  2931                           	line	1306
  2932                           	
  2933  012C                     l2368:	
  2934                           	
  2935  012C                     l4145:	
  2936                           ;doprnt.c: 1306: if(_val._val < dpowers[c])
  2937  012C  0838               	movf	(printf@c),w
  2938  012D  00AD               	movwf	(??_printf+0)+0
  2939  012E  072D               	addwf	(??_printf+0)+0,w
  2940  012F  3E01               	addlw	low((_dpowers-__stringbase))
  2941  0130  0084               	movwf	fsr0
  2942  0131  2010               	fcall	stringdir
  2943  0132  00AE               	movwf	(??_printf+1)+0
  2944  0133  2010               	fcall	stringdir
  2945  0134  00AF               	movwf	(??_printf+1)+0+1
  2946  0135  082F               	movf	1+(??_printf+1)+0,w
  2947  0136  0235               	subwf	(printf@_val+1),w
  2948  0137  1D03               	skipz
  2949  0138  293B               	goto	u1055
  2950  0139  082E               	movf	0+(??_printf+1)+0,w
  2951  013A  0234               	subwf	(printf@_val),w
  2952  013B                     u1055:
  2953  013B  1803               	skipnc
  2954  013C  293E               	goto	u1051
  2955  013D  293F               	goto	u1050
  2956  013E                     u1051:
  2957  013E  2941               	goto	l4149
  2958  013F                     u1050:
  2959  013F  294C               	goto	l4153
  2960                           	line	1307
  2961                           	
  2962  0140                     l4147:	
  2963                           ;doprnt.c: 1307: break;
  2964  0140  294C               	goto	l4153
  2965                           	
  2966  0141                     l2370:	
  2967                           	line	1305
  2968                           	
  2969  0141                     l4149:	
  2970  0141  3001               	movlw	(01h)
  2971  0142  00AD               	movwf	(??_printf+0)+0
  2972  0143  082D               	movf	(??_printf+0)+0,w
  2973  0144  07B8               	addwf	(printf@c),f
  2974                           	
  2975  0145                     l4151:	
  2976  0145  0838               	movf	(printf@c),w
  2977  0146  3A05               	xorlw	05h
  2978  0147  1D03               	skipz
  2979  0148  294A               	goto	u1061
  2980  0149  294B               	goto	u1060
  2981  014A                     u1061:
  2982  014A  292C               	goto	l4145
  2983  014B                     u1060:
  2984  014B  294C               	goto	l4153
  2985                           	
  2986  014C                     l2369:	
  2987                           	line	1438
  2988                           	
  2989  014C                     l4153:	
  2990                           ;doprnt.c: 1422: {
  2991                           ;doprnt.c: 1438: if(flag & 0x03)
  2992  014C  0831               	movf	(printf@flag),w
  2993  014D  3903               	andlw	03h
  2994  014E  1903               	btfsc	status,2
  2995  014F  2951               	goto	u1071
  2996  0150  2952               	goto	u1070
  2997  0151                     u1071:
  2998  0151  2955               	goto	l4157
  2999  0152                     u1070:
  3000                           	line	1439
  3001                           	
  3002  0152                     l4155:	
  3003                           ;doprnt.c: 1439: (putch('-') );
  3004  0152  302D               	movlw	(02Dh)
  3005  0153  23C4               	fcall	_putch
  3006  0154  2955               	goto	l4157
  3007                           	
  3008  0155                     l2371:	
  3009                           	line	1472
  3010                           	
  3011  0155                     l4157:	
  3012                           ;doprnt.c: 1469: }
  3013                           ;doprnt.c: 1472: prec = c;
  3014  0155  1283               	bcf	status, 5	;RP0=0, select bank0
  3015  0156  0838               	movf	(printf@c),w
  3016  0157  00AD               	movwf	(??_printf+0)+0
  3017  0158  082D               	movf	(??_printf+0)+0,w
  3018  0159  00B3               	movwf	(printf@prec)
  3019                           	line	1474
  3020                           ;doprnt.c: 1474: while(prec--) {
  3021  015A  2980               	goto	l4163
  3022                           	
  3023  015B                     l2373:	
  3024                           	line	1489
  3025                           	
  3026  015B                     l4159:	
  3027                           ;doprnt.c: 1478: {
  3028                           ;doprnt.c: 1489: c = (_val._val / dpowers[prec]) % 10 + '0';
  3029  015B  300A               	movlw	low(0Ah)
  3030  015C  00A7               	movwf	(?___lwmod)
  3031  015D  3000               	movlw	high(0Ah)
  3032  015E  00A8               	movwf	((?___lwmod))+1
  3033  015F  0833               	movf	(printf@prec),w
  3034  0160  00AD               	movwf	(??_printf+0)+0
  3035  0161  072D               	addwf	(??_printf+0)+0,w
  3036  0162  3E01               	addlw	low((_dpowers-__stringbase))
  3037  0163  0084               	movwf	fsr0
  3038  0164  2010               	fcall	stringdir
  3039  0165  00A0               	movwf	(?___lwdiv)
  3040  0166  2010               	fcall	stringdir
  3041  0167  00A1               	movwf	(?___lwdiv+1)
  3042  0168  0835               	movf	(printf@_val+1),w
  3043  0169  01A3               	clrf	1+(?___lwdiv)+02h
  3044  016A  07A3               	addwf	1+(?___lwdiv)+02h
  3045  016B  0834               	movf	(printf@_val),w
  3046  016C  01A2               	clrf	0+(?___lwdiv)+02h
  3047  016D  07A2               	addwf	0+(?___lwdiv)+02h
  3048                           
  3049  016E  22CD               	fcall	___lwdiv
  3050  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  3051  0170  0821               	movf	(1+(?___lwdiv)),w
  3052  0171  01AA               	clrf	1+(?___lwmod)+02h
  3053  0172  07AA               	addwf	1+(?___lwmod)+02h
  3054  0173  0820               	movf	(0+(?___lwdiv)),w
  3055  0174  01A9               	clrf	0+(?___lwmod)+02h
  3056  0175  07A9               	addwf	0+(?___lwmod)+02h
  3057                           
  3058  0176  231C               	fcall	___lwmod
  3059  0177  1283               	bcf	status, 5	;RP0=0, select bank0
  3060  0178  0827               	movf	(0+(?___lwmod)),w
  3061  0179  3E30               	addlw	030h
  3062  017A  00AE               	movwf	(??_printf+1)+0
  3063  017B  082E               	movf	(??_printf+1)+0,w
  3064  017C  00B8               	movwf	(printf@c)
  3065                           	line	1521
  3066                           	
  3067  017D                     l4161:	
  3068                           ;doprnt.c: 1520: }
  3069                           ;doprnt.c: 1521: (putch(c) );
  3070  017D  0838               	movf	(printf@c),w
  3071  017E  23C4               	fcall	_putch
  3072  017F  2980               	goto	l4163
  3073                           	line	1522
  3074                           	
  3075  0180                     l2372:	
  3076                           	line	1474
  3077                           	
  3078  0180                     l4163:	
  3079  0180  30FF               	movlw	(-1)
  3080  0181  1283               	bcf	status, 5	;RP0=0, select bank0
  3081  0182  00AD               	movwf	(??_printf+0)+0
  3082  0183  082D               	movf	(??_printf+0)+0,w
  3083  0184  07B3               	addwf	(printf@prec),f
  3084  0185  0833               	movf	((printf@prec)),w
  3085  0186  3AFF               	xorlw	-1
  3086  0187  1D03               	skipz
  3087  0188  298A               	goto	u1081
  3088  0189  298B               	goto	u1080
  3089  018A                     u1081:
  3090  018A  295B               	goto	l4159
  3091  018B                     u1080:
  3092  018B  298D               	goto	l4165
  3093                           	
  3094  018C                     l2374:	
  3095  018C  298D               	goto	l4165
  3096                           	line	1530
  3097                           	
  3098  018D                     l2357:	
  3099                           	line	545
  3100                           	
  3101  018D                     l4165:	
  3102  018D  3001               	movlw	01h
  3103  018E  1283               	bcf	status, 5	;RP0=0, select bank0
  3104  018F  07B2               	addwf	(printf@f),f
  3105  0190  30FF               	movlw	-01h
  3106  0191  0732               	addwf	(printf@f),w
  3107  0192  0084               	movwf	fsr0
  3108  0193  2010               	fcall	stringdir
  3109  0194  00AD               	movwf	(??_printf+0)+0
  3110  0195  082D               	movf	(??_printf+0)+0,w
  3111  0196  00B8               	movwf	(printf@c)
  3112  0197  08B8               	movf	((printf@c)),f
  3113  0198  1D03               	skipz
  3114  0199  299B               	goto	u1091
  3115  019A  299C               	goto	u1090
  3116  019B                     u1091:
  3117  019B  28E6               	goto	l4121
  3118  019C                     u1090:
  3119  019C  299E               	goto	l2376
  3120                           	
  3121  019D                     l2375:	
  3122  019D  299E               	goto	l2376
  3123                           	line	1532
  3124                           ;doprnt.c: 1522: }
  3125                           ;doprnt.c: 1530: }
  3126                           ;doprnt.c: 1532: alldone:
  3127                           	
  3128  019E                     l2362:	
  3129                           	line	1538
  3130                           ;doprnt.c: 1537: return 0;
  3131                           ;	Return value of _printf is never used
  3132                           	
  3133  019E                     l2376:	
  3134  019E  0008               	return
  3135                           	opt stack 0
  3136                           GLOBAL	__end_of_printf
  3137  019F                     	__end_of_printf:
  3138                           	signat	_printf,602
  3139                           	global	_putch
  3140                           
  3141 ;; *************** function _putch *****************
  3142 ;; Defined at:
  3143 ;;		line 86 in file "main.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  c               1    wreg     unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  c               1    0[BANK0 ] unsigned char 
  3148 ;;  bitcount        1    1[BANK0 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, pclath, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1
  3158 ;;      Params:         0       0       0
  3159 ;;      Locals:         0       2       0
  3160 ;;      Temps:          1       0       0
  3161 ;;      Totals:         1       2       0
  3162 ;;Total ram usage:        3 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    2
  3165 ;; This function calls:
  3166 ;;		_DelayTXBitUART
  3167 ;; This function is called by:
  3168 ;;		_printf
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           psect	text463,local,class=CODE,delta=2,merge=1
  3172                           global __ptext463
  3173  03C4                     __ptext463:	;psect for function _putch
  3174                           psect	text463
  3175                           	file	"main.c"
  3176                           	line	86
  3177                           	global	__size_of_putch
  3178  002A                     	__size_of_putch	equ	__end_of_putch-_putch
  3179                           	
  3180  03C4                     _putch:	
  3181                           	opt	stack 4
  3182                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3183                           ;putch@c stored from wreg
  3184                           	line	88
  3185  03C4  1283               	bcf	status, 5	;RP0=0, select bank0
  3186  03C5  00A0               	movwf	(putch@c)
  3187                           	
  3188  03C6                     l4047:	
  3189                           ;main.c: 88: unsigned char bitcount = 8;
  3190  03C6  3008               	movlw	(08h)
  3191  03C7  00F5               	movwf	(??_putch+0)+0
  3192  03C8  0875               	movf	(??_putch+0)+0,w
  3193  03C9  00A1               	movwf	(putch@bitcount)
  3194                           	line	91
  3195                           	
  3196  03CA                     l4049:	
  3197                           ;main.c: 91: sGPIO.GP1 = 0;
  3198  03CA  10F9               	bcf	(_sGPIO),1
  3199                           	line	92
  3200                           ;main.c: 92: GPIO = sGPIO.port;
  3201  03CB  0879               	movf	(_sGPIO),w
  3202  03CC  0085               	movwf	(5)	;volatile
  3203                           	line	93
  3204                           	
  3205  03CD                     l4051:	
  3206                           ;main.c: 93: DelayTXBitUART();
  3207  03CD  246D               	fcall	_DelayTXBitUART
  3208                           	line	95
  3209                           ;main.c: 95: while (bitcount--) {
  3210  03CE  2BE0               	goto	l4061
  3211                           	
  3212  03CF                     l1411:	
  3213                           	line	96
  3214                           	
  3215  03CF                     l4053:	
  3216                           ;main.c: 96: sGPIO.GP1 = (c & 0x01);
  3217  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3218  03D0  0820               	movf	(putch@c),w
  3219  03D1  3901               	andlw	01h
  3220  03D2  00F5               	movwf	(??_putch+0)+0
  3221  03D3  0DF5               	rlf	(??_putch+0)+0,f
  3222  03D4  0879               	movf	(_sGPIO),w
  3223  03D5  0675               	xorwf	(??_putch+0)+0,w
  3224  03D6  39FD               	andlw	not (((1<<1)-1)<<1)
  3225  03D7  0675               	xorwf	(??_putch+0)+0,w
  3226  03D8  00F9               	movwf	(_sGPIO)
  3227                           	line	97
  3228                           	
  3229  03D9                     l4055:	
  3230                           ;main.c: 97: GPIO = sGPIO.port;
  3231  03D9  0879               	movf	(_sGPIO),w
  3232  03DA  0085               	movwf	(5)	;volatile
  3233                           	line	98
  3234                           	
  3235  03DB                     l4057:	
  3236                           ;main.c: 98: DelayTXBitUART();
  3237  03DB  246D               	fcall	_DelayTXBitUART
  3238                           	line	99
  3239                           	
  3240  03DC                     l4059:	
  3241                           ;main.c: 99: c>>=1;
  3242  03DC  1003               	clrc
  3243  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  3244  03DE  0CA0               	rrf	(putch@c),f
  3245                           
  3246  03DF  2BE0               	goto	l4061
  3247                           	line	100
  3248                           	
  3249  03E0                     l1410:	
  3250                           	line	95
  3251                           	
  3252  03E0                     l4061:	
  3253  03E0  3001               	movlw	low(01h)
  3254  03E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3255  03E2  02A1               	subwf	(putch@bitcount),f
  3256  03E3  0821               	movf	((putch@bitcount)),w
  3257  03E4  3AFF               	xorlw	0FFh
  3258  03E5  1D03               	skipz
  3259  03E6  2BE8               	goto	u971
  3260  03E7  2BE9               	goto	u970
  3261  03E8                     u971:
  3262  03E8  2BCF               	goto	l4053
  3263  03E9                     u970:
  3264                           	
  3265  03E9                     l1412:	
  3266                           	line	102
  3267                           ;main.c: 100: }
  3268                           ;main.c: 102: sGPIO.GP1 = 1;
  3269  03E9  14F9               	bsf	(_sGPIO),1
  3270                           	line	103
  3271                           	
  3272  03EA                     l4063:	
  3273                           ;main.c: 103: GPIO = sGPIO.port;
  3274  03EA  0879               	movf	(_sGPIO),w
  3275  03EB  0085               	movwf	(5)	;volatile
  3276                           	line	104
  3277                           	
  3278  03EC                     l4065:	
  3279                           ;main.c: 104: DelayTXBitUART();
  3280  03EC  246D               	fcall	_DelayTXBitUART
  3281                           	line	106
  3282                           	
  3283  03ED                     l1413:	
  3284  03ED  0008               	return
  3285                           	opt stack 0
  3286                           GLOBAL	__end_of_putch
  3287  03EE                     	__end_of_putch:
  3288                           	signat	_putch,4216
  3289                           	global	_DelayTXBitUART
  3290                           
  3291 ;; *************** function _DelayTXBitUART *****************
  3292 ;; Defined at:
  3293 ;;		line 54 in file "main.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1
  3307 ;;      Params:         0       0       0
  3308 ;;      Locals:         0       0       0
  3309 ;;      Temps:          1       0       0
  3310 ;;      Totals:         1       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_putch
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           psect	text464,local,class=CODE,delta=2,merge=1
  3321                           global __ptext464
  3322  046D                     __ptext464:	;psect for function _DelayTXBitUART
  3323                           psect	text464
  3324                           	file	"main.c"
  3325                           	line	54
  3326                           	global	__size_of_DelayTXBitUART
  3327  0006                     	__size_of_DelayTXBitUART	equ	__end_of_DelayTXBitUART-_DelayTXBitUART
  3328                           	
  3329  046D                     _DelayTXBitUART:	
  3330                           	opt	stack 4
  3331                           ; Regs used in _DelayTXBitUART: [wreg]
  3332                           	line	61
  3333                           	
  3334  046D                     l4045:	
  3335                           ;main.c: 61: _delay(77);
  3336                           	opt asmopt_off
  3337  046D  3019               movlw	25
  3338  046E  00F4               movwf	(??_DelayTXBitUART+0)+0,f
  3339  046F                     u1347:
  3340  046F  0BF4               decfsz	(??_DelayTXBitUART+0)+0,f
  3341  0470  2C6F               	goto	u1347
  3342  0471  0000               	nop
  3343                           opt asmopt_on
  3344                           
  3345                           	line	72
  3346                           	
  3347  0472                     l1407:	
  3348  0472  0008               	return
  3349                           	opt stack 0
  3350                           GLOBAL	__end_of_DelayTXBitUART
  3351  0473                     	__end_of_DelayTXBitUART:
  3352                           	signat	_DelayTXBitUART,88
  3353                           	global	___lwmod
  3354                           
  3355 ;; *************** function ___lwmod *****************
  3356 ;; Defined at:
  3357 ;;		line 5 in file "/Applications/microchip/xc8/v1.10/sources/lwmod.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  divisor         2    7[BANK0 ] unsigned int 
  3360 ;;  dividend        2    9[BANK0 ] unsigned int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  counter         1    6[COMMON] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2    7[BANK0 ] unsigned int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1
  3372 ;;      Params:         0       4       0
  3373 ;;      Locals:         1       0       0
  3374 ;;      Temps:          1       0       0
  3375 ;;      Totals:         2       4       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_printf
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           psect	text465,local,class=CODE,delta=2,merge=1
  3386                           global __ptext465
  3387  031C                     __ptext465:	;psect for function ___lwmod
  3388                           psect	text465
  3389                           	file	"/Applications/microchip/xc8/v1.10/sources/lwmod.c"
  3390                           	line	5
  3391                           	global	__size_of___lwmod
  3392  0045                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3393                           	
  3394  031C                     ___lwmod:	
  3395                           	opt	stack 5
  3396                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3397                           	line	8
  3398                           	
  3399  031C                     l4193:	
  3400  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  3401  031D  0828               	movf	(___lwmod@divisor+1),w
  3402  031E  0427               	iorwf	(___lwmod@divisor),w
  3403  031F  1903               	skipnz
  3404  0320  2B22               	goto	u1171
  3405  0321  2B23               	goto	u1170
  3406  0322                     u1171:
  3407  0322  2B59               	goto	l4211
  3408  0323                     u1170:
  3409                           	line	9
  3410                           	
  3411  0323                     l4195:	
  3412  0323  01F6               	clrf	(___lwmod@counter)
  3413  0324  1403               	bsf	status,0
  3414  0325  0DF6               	rlf	(___lwmod@counter),f
  3415                           	line	10
  3416  0326  2B33               	goto	l4201
  3417                           	
  3418  0327                     l2919:	
  3419                           	line	11
  3420                           	
  3421  0327                     l4197:	
  3422  0327  3001               	movlw	01h
  3423                           	
  3424  0328                     u1185:
  3425  0328  1003               	clrc
  3426  0329  0DA7               	rlf	(___lwmod@divisor),f
  3427  032A  0DA8               	rlf	(___lwmod@divisor+1),f
  3428  032B  3EFF               	addlw	-1
  3429  032C  1D03               	skipz
  3430  032D  2B28               	goto	u1185
  3431                           	line	12
  3432                           	
  3433  032E                     l4199:	
  3434  032E  3001               	movlw	(01h)
  3435  032F  00F5               	movwf	(??___lwmod+0)+0
  3436  0330  0875               	movf	(??___lwmod+0)+0,w
  3437  0331  07F6               	addwf	(___lwmod@counter),f
  3438  0332  2B33               	goto	l4201
  3439                           	line	13
  3440                           	
  3441  0333                     l2918:	
  3442                           	line	10
  3443                           	
  3444  0333                     l4201:	
  3445  0333  1FA8               	btfss	(___lwmod@divisor+1),(15)&7
  3446  0334  2B36               	goto	u1191
  3447  0335  2B37               	goto	u1190
  3448  0336                     u1191:
  3449  0336  2B27               	goto	l4197
  3450  0337                     u1190:
  3451  0337  2B39               	goto	l4203
  3452                           	
  3453  0338                     l2920:	
  3454  0338  2B39               	goto	l4203
  3455                           	line	14
  3456                           	
  3457  0339                     l2921:	
  3458                           	line	15
  3459                           	
  3460  0339                     l4203:	
  3461  0339  0828               	movf	(___lwmod@divisor+1),w
  3462  033A  022A               	subwf	(___lwmod@dividend+1),w
  3463  033B  1D03               	skipz
  3464  033C  2B3F               	goto	u1205
  3465  033D  0827               	movf	(___lwmod@divisor),w
  3466  033E  0229               	subwf	(___lwmod@dividend),w
  3467  033F                     u1205:
  3468  033F  1C03               	skipc
  3469  0340  2B42               	goto	u1201
  3470  0341  2B43               	goto	u1200
  3471  0342                     u1201:
  3472  0342  2B4A               	goto	l4207
  3473  0343                     u1200:
  3474                           	line	16
  3475                           	
  3476  0343                     l4205:	
  3477  0343  0827               	movf	(___lwmod@divisor),w
  3478  0344  02A9               	subwf	(___lwmod@dividend),f
  3479  0345  0828               	movf	(___lwmod@divisor+1),w
  3480  0346  1C03               	skipc
  3481  0347  03AA               	decf	(___lwmod@dividend+1),f
  3482  0348  02AA               	subwf	(___lwmod@dividend+1),f
  3483  0349  2B4A               	goto	l4207
  3484                           	
  3485  034A                     l2922:	
  3486                           	line	17
  3487                           	
  3488  034A                     l4207:	
  3489  034A  3001               	movlw	01h
  3490                           	
  3491  034B                     u1215:
  3492  034B  1003               	clrc
  3493  034C  0CA8               	rrf	(___lwmod@divisor+1),f
  3494  034D  0CA7               	rrf	(___lwmod@divisor),f
  3495  034E  3EFF               	addlw	-1
  3496  034F  1D03               	skipz
  3497  0350  2B4B               	goto	u1215
  3498                           	line	18
  3499                           	
  3500  0351                     l4209:	
  3501  0351  3001               	movlw	low(01h)
  3502  0352  02F6               	subwf	(___lwmod@counter),f
  3503  0353  1D03               	btfss	status,2
  3504  0354  2B56               	goto	u1221
  3505  0355  2B57               	goto	u1220
  3506  0356                     u1221:
  3507  0356  2B39               	goto	l4203
  3508  0357                     u1220:
  3509  0357  2B59               	goto	l4211
  3510                           	
  3511  0358                     l2923:	
  3512  0358  2B59               	goto	l4211
  3513                           	line	19
  3514                           	
  3515  0359                     l2917:	
  3516                           	line	20
  3517                           	
  3518  0359                     l4211:	
  3519  0359  082A               	movf	(___lwmod@dividend+1),w
  3520  035A  01A8               	clrf	(?___lwmod+1)
  3521  035B  07A8               	addwf	(?___lwmod+1)
  3522  035C  0829               	movf	(___lwmod@dividend),w
  3523  035D  01A7               	clrf	(?___lwmod)
  3524  035E  07A7               	addwf	(?___lwmod)
  3525                           
  3526  035F  2B60               	goto	l2924
  3527                           	
  3528  0360                     l4213:	
  3529                           	line	21
  3530                           	
  3531  0360                     l2924:	
  3532  0360  0008               	return
  3533                           	opt stack 0
  3534                           GLOBAL	__end_of___lwmod
  3535  0361                     	__end_of___lwmod:
  3536                           	signat	___lwmod,8314
  3537                           	global	___lwdiv
  3538                           
  3539 ;; *************** function ___lwdiv *****************
  3540 ;; Defined at:
  3541 ;;		line 5 in file "/Applications/microchip/xc8/v1.10/sources/lwdiv.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  divisor         2    0[BANK0 ] unsigned int 
  3544 ;;  dividend        2    2[BANK0 ] unsigned int 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  quotient        2    5[BANK0 ] unsigned int 
  3547 ;;  counter         1    4[BANK0 ] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  2    0[BANK0 ] unsigned int 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1
  3557 ;;      Params:         0       4       0
  3558 ;;      Locals:         0       3       0
  3559 ;;      Temps:          1       0       0
  3560 ;;      Totals:         1       7       0
  3561 ;;Total ram usage:        8 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_printf
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           psect	text466,local,class=CODE,delta=2,merge=1
  3571                           global __ptext466
  3572  02CD                     __ptext466:	;psect for function ___lwdiv
  3573                           psect	text466
  3574                           	file	"/Applications/microchip/xc8/v1.10/sources/lwdiv.c"
  3575                           	line	5
  3576                           	global	__size_of___lwdiv
  3577  004F                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3578                           	
  3579  02CD                     ___lwdiv:	
  3580                           	opt	stack 5
  3581                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3582                           	line	9
  3583                           	
  3584  02CD                     l4167:	
  3585  02CD  1283               	bcf	status, 5	;RP0=0, select bank0
  3586  02CE  01A5               	clrf	(___lwdiv@quotient)
  3587  02CF  01A6               	clrf	(___lwdiv@quotient+1)
  3588                           	line	10
  3589                           	
  3590  02D0                     l4169:	
  3591  02D0  0821               	movf	(___lwdiv@divisor+1),w
  3592  02D1  0420               	iorwf	(___lwdiv@divisor),w
  3593  02D2  1903               	skipnz
  3594  02D3  2AD5               	goto	u1101
  3595  02D4  2AD6               	goto	u1100
  3596  02D5                     u1101:
  3597  02D5  2B14               	goto	l4189
  3598  02D6                     u1100:
  3599                           	line	11
  3600                           	
  3601  02D6                     l4171:	
  3602  02D6  01A4               	clrf	(___lwdiv@counter)
  3603  02D7  1403               	bsf	status,0
  3604  02D8  0DA4               	rlf	(___lwdiv@counter),f
  3605                           	line	12
  3606  02D9  2AE6               	goto	l4177
  3607                           	
  3608  02DA                     l2909:	
  3609                           	line	13
  3610                           	
  3611  02DA                     l4173:	
  3612  02DA  3001               	movlw	01h
  3613                           	
  3614  02DB                     u1115:
  3615  02DB  1003               	clrc
  3616  02DC  0DA0               	rlf	(___lwdiv@divisor),f
  3617  02DD  0DA1               	rlf	(___lwdiv@divisor+1),f
  3618  02DE  3EFF               	addlw	-1
  3619  02DF  1D03               	skipz
  3620  02E0  2ADB               	goto	u1115
  3621                           	line	14
  3622                           	
  3623  02E1                     l4175:	
  3624  02E1  3001               	movlw	(01h)
  3625  02E2  00F4               	movwf	(??___lwdiv+0)+0
  3626  02E3  0874               	movf	(??___lwdiv+0)+0,w
  3627  02E4  07A4               	addwf	(___lwdiv@counter),f
  3628  02E5  2AE6               	goto	l4177
  3629                           	line	15
  3630                           	
  3631  02E6                     l2908:	
  3632                           	line	12
  3633                           	
  3634  02E6                     l4177:	
  3635  02E6  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
  3636  02E7  2AE9               	goto	u1121
  3637  02E8  2AEA               	goto	u1120
  3638  02E9                     u1121:
  3639  02E9  2ADA               	goto	l4173
  3640  02EA                     u1120:
  3641  02EA  2AEC               	goto	l4179
  3642                           	
  3643  02EB                     l2910:	
  3644  02EB  2AEC               	goto	l4179
  3645                           	line	16
  3646                           	
  3647  02EC                     l2911:	
  3648                           	line	17
  3649                           	
  3650  02EC                     l4179:	
  3651  02EC  3001               	movlw	01h
  3652                           	
  3653  02ED                     u1135:
  3654  02ED  1003               	clrc
  3655  02EE  0DA5               	rlf	(___lwdiv@quotient),f
  3656  02EF  0DA6               	rlf	(___lwdiv@quotient+1),f
  3657  02F0  3EFF               	addlw	-1
  3658  02F1  1D03               	skipz
  3659  02F2  2AED               	goto	u1135
  3660                           	line	18
  3661  02F3  0821               	movf	(___lwdiv@divisor+1),w
  3662  02F4  0223               	subwf	(___lwdiv@dividend+1),w
  3663  02F5  1D03               	skipz
  3664  02F6  2AF9               	goto	u1145
  3665  02F7  0820               	movf	(___lwdiv@divisor),w
  3666  02F8  0222               	subwf	(___lwdiv@dividend),w
  3667  02F9                     u1145:
  3668  02F9  1C03               	skipc
  3669  02FA  2AFC               	goto	u1141
  3670  02FB  2AFD               	goto	u1140
  3671  02FC                     u1141:
  3672  02FC  2B05               	goto	l4185
  3673  02FD                     u1140:
  3674                           	line	19
  3675                           	
  3676  02FD                     l4181:	
  3677  02FD  0820               	movf	(___lwdiv@divisor),w
  3678  02FE  02A2               	subwf	(___lwdiv@dividend),f
  3679  02FF  0821               	movf	(___lwdiv@divisor+1),w
  3680  0300  1C03               	skipc
  3681  0301  03A3               	decf	(___lwdiv@dividend+1),f
  3682  0302  02A3               	subwf	(___lwdiv@dividend+1),f
  3683                           	line	20
  3684                           	
  3685  0303                     l4183:	
  3686  0303  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3687  0304  2B05               	goto	l4185
  3688                           	line	21
  3689                           	
  3690  0305                     l2912:	
  3691                           	line	22
  3692                           	
  3693  0305                     l4185:	
  3694  0305  3001               	movlw	01h
  3695                           	
  3696  0306                     u1155:
  3697  0306  1003               	clrc
  3698  0307  0CA1               	rrf	(___lwdiv@divisor+1),f
  3699  0308  0CA0               	rrf	(___lwdiv@divisor),f
  3700  0309  3EFF               	addlw	-1
  3701  030A  1D03               	skipz
  3702  030B  2B06               	goto	u1155
  3703                           	line	23
  3704                           	
  3705  030C                     l4187:	
  3706  030C  3001               	movlw	low(01h)
  3707  030D  02A4               	subwf	(___lwdiv@counter),f
  3708  030E  1D03               	btfss	status,2
  3709  030F  2B11               	goto	u1161
  3710  0310  2B12               	goto	u1160
  3711  0311                     u1161:
  3712  0311  2AEC               	goto	l4179
  3713  0312                     u1160:
  3714  0312  2B14               	goto	l4189
  3715                           	
  3716  0313                     l2913:	
  3717  0313  2B14               	goto	l4189
  3718                           	line	24
  3719                           	
  3720  0314                     l2907:	
  3721                           	line	25
  3722                           	
  3723  0314                     l4189:	
  3724  0314  0826               	movf	(___lwdiv@quotient+1),w
  3725  0315  01A1               	clrf	(?___lwdiv+1)
  3726  0316  07A1               	addwf	(?___lwdiv+1)
  3727  0317  0825               	movf	(___lwdiv@quotient),w
  3728  0318  01A0               	clrf	(?___lwdiv)
  3729  0319  07A0               	addwf	(?___lwdiv)
  3730                           
  3731  031A  2B1B               	goto	l2914
  3732                           	
  3733  031B                     l4191:	
  3734                           	line	26
  3735                           	
  3736  031B                     l2914:	
  3737  031B  0008               	return
  3738                           	opt stack 0
  3739                           GLOBAL	__end_of___lwdiv
  3740  031C                     	__end_of___lwdiv:
  3741                           	signat	___lwdiv,8314
  3742                           	global	_isr
  3743                           
  3744 ;; *************** function _isr *****************
  3745 ;; Defined at:
  3746 ;;		line 14 in file "interrupts.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;		None               void
  3753 ;; Registers used:
  3754 ;;		None
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1
  3760 ;;      Params:         0       0       0
  3761 ;;      Locals:         0       0       0
  3762 ;;      Temps:          4       0       0
  3763 ;;      Totals:         4       0       0
  3764 ;;Total ram usage:        4 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		Interrupt level 1
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           psect	text467,local,class=CODE,delta=2,merge=1
  3773                           global __ptext467
  3774  0453                     __ptext467:	;psect for function _isr
  3775                           psect	text467
  3776                           	file	"interrupts.c"
  3777                           	line	14
  3778                           	global	__size_of_isr
  3779  000B                     	__size_of_isr	equ	__end_of_isr-_isr
  3780                           	
  3781  0453                     _isr:	
  3782                           	opt	stack 4
  3783                           ; Regs used in _isr: []
  3784                           psect	intentry,class=CODE,delta=2
  3785                           global __pintentry
  3786  0004                     __pintentry:
  3787                           global interrupt_function
  3788  0004                     interrupt_function:
  3789                           	global saved_w
  3790  007E                     	saved_w	set	btemp+0
  3791  0004  00FE               	movwf	saved_w
  3792  0005  0E03               	swapf	status,w
  3793  0006  00F0               	movwf	(??_isr+0)
  3794  0007  0804               	movf	fsr0,w
  3795  0008  00F1               	movwf	(??_isr+1)
  3796  0009  080A               	movf	pclath,w
  3797  000A  00F2               	movwf	(??_isr+2)
  3798  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  3799  000C  087F               	movf	btemp+1,w
  3800  000D  00F3               	movwf	(??_isr+3)
  3801  000E  2C53               	ljmp	_isr
  3802                           psect	text467
  3803                           	line	40
  3804                           	
  3805  0453                     i1l907:	
  3806  0453  0873               	movf	(??_isr+3),w
  3807  0454  00FF               	movwf	btemp+1
  3808  0455  0872               	movf	(??_isr+2),w
  3809  0456  008A               	movwf	pclath
  3810  0457  0871               	movf	(??_isr+1),w
  3811  0458  0084               	movwf	fsr0
  3812  0459  0E70               	swapf	(??_isr+0)^0FFFFFF80h,w
  3813  045A  0083               	movwf	status
  3814  045B  0EFE               	swapf	saved_w,f
  3815  045C  0E7E               	swapf	saved_w,w
  3816  045D  0009               	retfie
  3817                           	opt stack 0
  3818                           GLOBAL	__end_of_isr
  3819  045E                     	__end_of_isr:
  3820                           	signat	_isr,88
  3821                           psect	text468,local,class=CODE,delta=2,merge=1
  3822                           global __ptext468
  3823  0000                     __ptext468:	;psect for function _isr
  3824                           	global	btemp
  3825  007E                     	btemp set 07Eh
  3826                           
  3827                           	DABS	1,126,2	;btemp
  3828                           	global	wtemp0
  3829  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     191
    Constant    10
    Data        9
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     28      40
    BANK1            32      0       0

Pointer List with Targets:

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?_read_temperature_ow_18B20	unsigned int  size(1) Largest target is 0

    environ	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_8(CODE[24]), STR_7(CODE[24]), STR_6(CODE[25]), STR_5(CODE[20]), 
		 -> STR_4(CODE[15]), STR_3(CODE[20]), STR_2(CODE[30]), STR_1(CODE[33]), 

    ?_printf	int  size(1) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S3267$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    read_temperature_ow_18B20@ID	PTR unsigned char  size(1) Largest target is 9
		 -> DS18B20_A(BANK0[9]), 


Critical Paths under _main in COMMON

    _read_temperature_ow_18B20->_read_byte_ow
    _read_byte_ow->_read_bit_ow
    _write_byte_ow->_write_bit_ow
    _printf->___lwmod
    _putch->_DelayTXBitUART
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _read_temperature_ow_18B20->_write_byte_ow
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1973
                                             25 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
                             _printf
                           _reset_ow
          _read_temperature_ow_18B20
 ---------------------------------------------------------------------------------
 (1) _read_temperature_ow_18B20                           17    15      2     846
                                              5 BANK0     17    15      2
                           _reset_ow
                      _write_byte_ow
                        _read_bit_ow
                       _read_byte_ow
 ---------------------------------------------------------------------------------
 (2) _reset_ow                                             2     2      0      23
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _read_byte_ow                                         4     4      0     136
                                              5 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _read_bit_ow
 ---------------------------------------------------------------------------------
 (3) _read_bit_ow                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _write_byte_ow                                        5     5      0     189
                                              0 BANK0      5     5      0
                       _write_bit_ow
 ---------------------------------------------------------------------------------
 (3) _write_bit_ow                                         2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              14    12      2    1104
                                             11 BANK0     14    12      2
                              _putch
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _putch                                                3     3      0      68
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _DelayTXBitUART
 ---------------------------------------------------------------------------------
 (3) _DelayTXBitUART                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     232
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     241
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _printf
     _putch
       _DelayTXBitUART
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _reset_ow
   _read_temperature_ow_18B20
     _reset_ow
     _write_byte_ow
       _write_bit_ow
     _read_bit_ow
     _read_byte_ow
       _read_bit_ow

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK1               20      0       0       5        0.0%
BITBANK1            20      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      28       4       50.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35       8        0.0%
ABS                  0      0      32       6        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       3       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Mon Nov  5 16:39:36 2012

                                   pc 0002                                    fsr 0004  
        read_temperature_ow_18B20@dat 0029                                   u460 0435  
                                 u461 0434                                   u900 0256  
                                 u901 0255                                   u830 036A  
                                 u910 026B                                   u831 0369  
                                 u911 026A                                   u840 0372  
                                 u920 0276                                   u841 0371  
                                 u921 0275                                   u930 0282  
                                 u931 0281                                   u860 0391  
                                 u940 0297                                   u861 0390  
                                 u941 0296                                   u870 039E  
                                 u854 0379                                   u950 02A2  
                                 u871 039D                                   u855 0377  
                                 u951 02A1                                   u960 02B7  
                                 u961 02B6                                   u970 03E9  
                                 u890 03BE                                   u971 03E8  
                                 u891 03BD                                   u884 03A6  
                                 u980 01DA                                   u885 03A4  
                                 u981 01D9                                   u990 020E  
                                 u991 020D                                   u995 020A  
                                 _isr 0453                                   fsr0 0004  
                                 _tmp 0047                                   indf 0000  
                                l1400 0284                                  l1401 0298  
                                l1410 03E0                                  l1402 02A4  
                                l1411 03CF                                  l1403 02B8  
                                l1412 03E9                                  l1404 02CC  
                                l1413 03ED                                  l1430 0244  
                                l1422 01DD                                  l1407 0472  
                                l1423 01E0                                  l1424 01E1  
                                l4001 0258                                  l1425 0216  
                                l1426 022C                                  l4011 0277  
                                l4003 0260                                  l1427 0242  
                                l2340 046C                                  l1380 036C  
                                l1428 0243                                  l1381 0392  
                                l4021 028C                                  l4013 027A  
                                l4005 0265                                  l1429 0244  
                                l4101 0224                                  l1390 03A0  
                                l1382 0381                                  l1374 040C  
                                l1391 03BF                                  l1383 0394  
                                l4031 02A3                                  l4023 0291  
                                l4015 027C                                  l4007 026C  
                                l4111 023A                                  l4103 0226  
                                l2360 00F6                                  l1392 03C3  
                                l4201 0333                                  l2361 00F1  
                                l4121 00E6                                  l1377 0452  
                                l4041 02C5                                  l4033 02A4  
                                l4017 0283                                  l4025 0298  
                                l4009 0270                                  l4113 023C  
                                l4105 0227                                  l2362 019E  
                                l2370 0141                                  l1386 0438  
                                l4203 0339                                  l4211 0359  
                                l4051 03CD                                  l2371 0155  
                                l4131 010F                                  l2363 00F2  
                                l4123 00EC                                  l1387 043E  
                                l4043 02CC                                  l4035 02AD  
                                l4027 029A                                  l4019 0284  
                                l1395 0258                                  l4115 023D  
                                l4107 0228                                  l2372 0180  
                                l2364 00F3                                  l1396 026C  
                                l4213 0360                                  l4205 0343  
                                l4045 046D                                  l4053 03CF  
                                l4061 03E0                                  l2357 018D  
                                l2373 015B                                  l4141 0124  
                                l4133 0113                                  l2365 0107  
                                l4125 00F5                                  l4037 02B1  
                                l4029 029C                                  l1397 0270  
                                l4117 023E                                  l4109 022C  
                                l2374 018C                                  l2366 00F4  
                                l2358 00E6                                  l1398 026F  
                                l4207 034A                                  l4063 03EA  
                                l4055 03D9                                  l4047 03C6  
                                l2375 019D                                  l4151 0145  
                                l4143 012B                                  l2367 0121  
                                l4135 0117                                  l4127 00F6  
                                l2359 00EF                                  l4119 00E1  
                                l4039 02B8                                  l1399 0277  
                                l4071 01CB                                  l2368 012C  
                                l2376 019E                                  l4209 0351  
                                l4065 03EC                                  l4057 03DB  
                                l4049 03CA                                  l4161 017D  
                                l2369 014C                                  l4153 014C  
                                l4145 012C                                  l4137 011B  
                                l4129 0107                                  l4081 01DD  
                                l4073 01CD                                  l4171 02D6  
                                l4059 03DC                                  l4163 0180  
                                l4155 0152                                  l4147 0140  
                                l4139 0121                                  l4091 020E  
                                l4083 01E1                                  l4075 01CF  
                                l4067 019F                                  l4181 02FD  
                                l4173 02DA                                  l4157 0155  
                                l4149 0141                                  l4165 018D  
                                l4093 0210                                  l4085 01EF  
                                l4077 01D4                                  l4069 01A0  
                                l2910 02EB                                  l4191 031B  
                                l4183 0303                                  l2911 02EC  
                                l4175 02E1                                  l4167 02CD  
                                l4159 015B                                  l3631 03F4  
                                l4095 0211                                  l4087 01F8  
                                l4079 01DA                                  l2912 0305  
                                l2920 0338                                  l2913 0313  
                                l4185 0305                                  l4177 02E6  
                                l4169 02D0                                  l2921 0339  
                                l4193 031C                                  l3641 040C  
                                l3633 03FB                                  l4097 0212  
                                l4089 0200                                  l2914 031B  
                                l2922 034A                                  l2907 0314  
                                l4187 030C                                  l4179 02EC  
                                l2923 0358                                  l4195 0323  
                                l3635 0401                                  l3627 03EE  
                                l4099 0216                                  l2908 02E6  
                                l2924 0360                                  l2909 02DA  
                                l4189 0314                                  l2917 0359  
                                l4197 0327                                  l1885 0473  
                                l3637 0406                                  l3629 03F1  
                                l2918 0333                                  l4199 032E  
                                l2919 0327                                  l3639 040A  
                                l3681 042C                                  l3835 0467  
                                l3683 042E                                  l3837 0469  
                                l3685 0435                                  l3677 0428  
                                l3941 043F                                  l3839 046A  
                                l3687 0438                                  l3679 0429  
                                l3951 044C                                  l3943 0440  
                                l3689 043C                                  l3953 044E  
                                l3945 0443                                  l3961 036B  
                                l3955 0452                                  l3947 0445  
                                l3971 0392                                  l3963 036C  
                                l3981 03A0                                  l3949 0446  
                                l3973 0394                                  l3965 0372  
                                l3957 0361                                  l3983 03B1  
                                l3975 0397                                  l3967 0381  
                                l3959 0364                                  l3991 0247  
                                l3985 03B3                                  l3977 0398  
                                l3969 0386                                  l3993 024B  
                                l3987 03B8                                  l3979 039F  
                                l3995 024C                                  ?_isr 0070  
                                l3989 03BF                                  l3997 024E  
                                l3999 0257                                  STR_1 0020  
                                STR_2 0041                                  STR_3 00A8  
                                STR_4 00D0                                  STR_5 00BC  
                                STR_6 005F                                  STR_7 0090  
                                STR_8 0078                                  u1000 0224  
                                u1001 0223                                  u1010 023A  
                                u1011 0239                                  u1100 02D6  
                                u1020 00EC                                  u1101 02D5  
                                u1021 00EB                                  u1005 0220  
                                u1030 0117                                  u1031 0116  
                                u1015 0236                                  u1120 02EA  
                                u1200 0343                                  u1040 012A  
                                u1121 02E9                                  u1201 0342  
                                u1041 0129                                  u1050 013F  
                                u1115 02DB                                  u1051 013E  
                                u1140 02FD                                  u1220 0357  
                                u1060 014B                                  u1141 02FC  
                                u1221 0356                                  u1205 033F  
                                u1061 014A                                  u1070 0152  
                                u1135 02ED                                  u1215 034B  
                                u1071 0151                                  u1055 013B  
                                u1160 0312                                  u1080 018B  
                                u1161 0311                                  u1145 02F9  
                                u1081 018A                                  u1170 0323  
                                u1090 019C                                  u1155 0306  
                                u1171 0322                                  u1091 019B  
                                u1307 0383                                  u1317 044A  
                                u1237 01A8                                  u1190 0337  
                                u1191 0336                                  u1327 03C1  
                                u1247 01B6                                  u1185 0328  
                                u1337 043A                                  u1257 01C4  
                                u1347 046F                                  u1267 01E8  
                                u1277 03F8                                  u1287 03FF  
                                u1297 0408                                  _GPIO 0005  
                                _main 019F                                  btemp 007E  
                                start 000F                         __CFG_IESO$OFF 0000  
                     __end_of_InitApp 046D                                 ??_isr 0070  
  __size_of_read_temperature_ow_18B20 0088                                 ?_main 0070  
                       __CFG_WDTE$OFF 0000                                 _ANSEL 009F  
                     __end_of___lwdiv 031C                       __end_of___lwmod 0361  
                               i1l907 0453                   _ConfigureOscillator 0473  
                        ?_read_bit_ow 0070                                 _sGPIO 0079  
                     __end_of_dpowers 0020                                 _errno 0077  
                               _putch 03C4                        __CFG_BOREN$OFF 0000  
                               pclath 000A                        write_byte_ow@i 0024  
                               status 0003                                 wtemp0 007E  
                ?_ConfigureOscillator 0070                        __CFG_MCLRE$OFF 0000  
                     __initialization 040D                          __end_of_main 0245  
               __size_of_write_bit_ow 0018                                ??_main 0039  
   __end_of_read_temperature_ow_18B20 02CD                                ?_putch 0070  
                              _TRISIO 0085                             ??_InitApp 0074  
               ??_ConfigureOscillator 0074                          _write_bit_ow 0427  
                    ??_DelayTXBitUART 0074                         ?_read_byte_ow 0070  
                           ??___lwdiv 0074                             ??___lwmod 0075  
                              _printf 00DF                      __end_of_reset_ow 040D  
                              saved_w 007E                                putch@c 0020  
             __end_of__initialization 0425                        ??_read_byte_ow 0075  
                      __pcstackCOMMON 0070                          __pidataBANK0 045E  
                       putch@bitcount 0021                         __end_of_putch 03EE  
                      _OPTION_REGbits 0081                __size_of_write_byte_ow 002F  
                __size_of_read_bit_ow 0014                               ??_putch 0075  
                          __pbssBANK0 0045                     read_byte_ow@value 0020  
                          __pmaintext 019F                            __pintentry 0004  
                             ?_printf 002B                    write_bit_ow@bitval 0075  
          read_temperature_ow_18B20@i 0035                               _TRISIO4 042C  
                          __stringtab 0010                             _DS18B20_A 003C  
                             _InitApp 0467                         _write_byte_ow 0395  
                           ?_reset_ow 0070                               ___lwdiv 02CD  
                             ___lwmod 031C                       __size_of_printf 00C0  
                             _dpowers 0016                          __size_of_isr 000B  
                __end_of_read_byte_ow 0395                  end_of_initialization 0425  
                      ?_write_byte_ow 0070                            ??_reset_ow 0074  
                             printf@c 0038                               printf@f 0032  
                    write_byte_ow@val 0022            ?_read_temperature_ow_18B20 0025  
         __end_of_ConfigureOscillator 0474                        __end_of_printf 019F  
                 start_initialization 040D                           __end_of_isr 045E  
                     ??_write_byte_ow 0020                           __pdataBANK0 003C  
                            ??_printf 002D               __size_of_DelayTXBitUART 0006  
               __size_of_read_byte_ow 0034                         ??_read_bit_ow 0074  
                         __pbssCOMMON 0077                         __pcstackBANK0 0020  
                 __end_of__stringdata 00DF                              ?_InitApp 0070  
                        _current_temp 0045                      ___lwdiv@dividend 0022  
                        _read_byte_ow 0361                             __ptext460 0473  
                           __ptext461 0467                             __ptext462 00DF  
                           __ptext454 0245                             __ptext463 03C4  
                           __ptext455 03EE                             __ptext464 046D  
                           __ptext456 0361                             __ptext465 031C  
                           __ptext457 043F                             __ptext466 02CD  
                           __ptext458 0395                             __ptext467 0453  
                           __ptext459 0427                             __ptext468 0000  
                   __size_of_reset_ow 001F  read_temperature_ow_18B20@temperature 0032  
                            ?___lwdiv 0020                              ?___lwmod 0027  
                           __pstrings 0010                      ___lwdiv@quotient 0025  
                      __size_of_putch 002A           read_temperature_ow_18B20@ID 0034  
                 __end_of_read_bit_ow 0453                     interrupt_function 0004  
                            _GPIObits 0005                         ?_write_bit_ow 0070  
                    reset_ow@presence 0075                           __stringbase 0015  
                         __stringdata 0020                            printf@_val 0034  
                          printf@flag 0031                            printf@prec 0033  
         ??_read_temperature_ow_18B20 0027                        ??_write_bit_ow 0074  
                    __size_of_InitApp 0006                      __size_of___lwdiv 004F  
                    __size_of___lwmod 0045                    __end_of__stringtab 0016  
                      _DelayTXBitUART 046D                           _read_bit_ow 043F  
                     ___lwdiv@divisor 0020                       ___lwdiv@counter 0024  
                       __size_of_main 00A6             _read_temperature_ow_18B20 0245  
        __size_of_ConfigureOscillator 0001                              _reset_ow 03EE  
              __end_of_DelayTXBitUART 0473                              intlevel1 0000  
                    ___lwmod@dividend 0029                 __end_of_write_byte_ow 03C4  
                           stringcode 0010                              printf@ap 0030  
                     ?_DelayTXBitUART 0070                     write_byte_ow@temp 0023  
                       read_byte_ow@i 0021                  __end_of_write_bit_ow 043F  
                     ___lwmod@divisor 0027                       ___lwmod@counter 0076  
                            stringdir 0010                              stringtab 0010  
                  __CFG_FOSC$INTOSCIO 0000  
