

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May  7 14:29:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000D                     	;# 
    53  000E                     	;# 
    54  000E                     	;# 
    55  000F                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0013                     	;# 
    60  0014                     	;# 
    61  0015                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001C                     	;# 
    69  001D                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0087                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  008F                     	;# 
    80  0090                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0093                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011E                     	;# 
   109  011F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0118                     	;# 
   178  0119                     	;# 
   179  011A                     	;# 
   180  011B                     	;# 
   181  011E                     	;# 
   182  011F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  019D                     	;# 
   186  019E                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  008F                     	;# 
   226  0090                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0093                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0095                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011E                     	;# 
   255  011F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001C                     	;# 
   288  001D                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  0081                     	;# 
   292  0085                     	;# 
   293  0086                     	;# 
   294  0087                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  008F                     	;# 
   299  0090                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0095                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0115                     	;# 
   322  0116                     	;# 
   323  0118                     	;# 
   324  0119                     	;# 
   325  011A                     	;# 
   326  011B                     	;# 
   327  011E                     	;# 
   328  011F                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  019D                     	;# 
   332  019E                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  000A                     	;# 
   342  000B                     	;# 
   343  000C                     	;# 
   344  000D                     	;# 
   345  000E                     	;# 
   346  000E                     	;# 
   347  000F                     	;# 
   348  0010                     	;# 
   349  0011                     	;# 
   350  0012                     	;# 
   351  0013                     	;# 
   352  0014                     	;# 
   353  0015                     	;# 
   354  0015                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001C                     	;# 
   361  001D                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  0081                     	;# 
   365  0085                     	;# 
   366  0086                     	;# 
   367  0087                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0098                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  010C                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0118                     	;# 
   397  0119                     	;# 
   398  011A                     	;# 
   399  011B                     	;# 
   400  011E                     	;# 
   401  011F                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406                           
   407                           	psect	idataBANK0
   408  0648                     __pidataBANK0:	
   409                           
   410                           ;initializer for _key_count
   411  0648  3417               	retlw	23
   412  0649  3400               	retlw	0
   413                           
   414                           	psect	strings
   415  002B                     __pstrings:	
   416  002B                     stringtab:	
   417  002B                     __stringtab:	
   418  002B                     stringcode:	
   419                           ;	String table - string pointers are 1 byte each
   420                           
   421  002B                     stringdir:	
   422  002B  3000               	movlw	high stringdir
   423  002C  008A               	movwf	10
   424  002D  0804               	movf	4,w
   425  002E  0A84               	incf	4,f
   426  002F  0782               	addwf	2,f
   427  0030                     __stringbase:	
   428  0030  3400               	retlw	0
   429  0031                     __end_of__stringtab:	
   430  0031                     _dpowers:	
   431  0031  3401               	retlw	1
   432  0032  3400               	retlw	0
   433  0033  340A               	retlw	10
   434  0034  3400               	retlw	0
   435  0035  3464               	retlw	100
   436  0036  3400               	retlw	0
   437  0037  34E8               	retlw	232
   438  0038  3403               	retlw	3
   439  0039  3410               	retlw	16
   440  003A  3427               	retlw	39
   441  003B                     __end_of_dpowers:	
   442  0005                     _PORTAbits	set	5
   443  0006                     _PORTBbits	set	6
   444  0007                     _PORTCbits	set	7
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCONbits	set	20
   447  0019                     _TXREG	set	25
   448  0018                     _CARRY	set	24
   449  00C4                     _CREN	set	196
   450  005F                     _GIE	set	95
   451  00C7                     _SPEN	set	199
   452  0064                     _TXIF	set	100
   453  009B                     _BAUDCTLbits	set	155
   454  008F                     _OSCCON	set	143
   455  0099                     _SPBRG	set	153
   456  0094                     _SSPSTATbits	set	148
   457  0085                     _TRISA	set	133
   458  0085                     _TRISAbits	set	133
   459  0086                     _TRISB	set	134
   460  0086                     _TRISBbits	set	134
   461  0087                     _TRISC	set	135
   462  0087                     _TRISCbits	set	135
   463  0095                     _WPUAbits	set	149
   464  04C2                     _BRGH	set	1218
   465  04C4                     _SYNC	set	1220
   466  04C5                     _TXEN	set	1221
   467  040F                     _nRABPU	set	1039
   468  011E                     _ANSEL	set	286
   469  011F                     _ANSELH	set	287
   470  010D                     _EEADR	set	269
   471  010C                     _EEDATA	set	268
   472  018C                     _EECON1	set	396
   473  018D                     _EECON2	set	397
   474  0C60                     _RD	set	3168
   475  0C61                     _WR	set	3169
   476  0C62                     _WREN	set	3170
   477  003B                     STR_7:	
   478  003B  344C               	retlw	76	;'L'
   479  003C  3461               	retlw	97	;'a'
   480  003D  3473               	retlw	115	;'s'
   481  003E  3474               	retlw	116	;'t'
   482  003F  3420               	retlw	32	;' '
   483  0040  344B               	retlw	75	;'K'
   484  0041  3465               	retlw	101	;'e'
   485  0042  3479               	retlw	121	;'y'
   486  0043  343A               	retlw	58	;':'
   487  0044  3420               	retlw	32	;' '
   488  0045  3425               	retlw	37	;'%'
   489  0046  3469               	retlw	105	;'i'
   490  0047  3420               	retlw	32	;' '
   491  0048  3409               	retlw	9
   492  0049  3420               	retlw	32	;' '
   493  004A  3452               	retlw	82	;'R'
   494  004B  3465               	retlw	101	;'e'
   495  004C  3461               	retlw	97	;'a'
   496  004D  346C               	retlw	108	;'l'
   497  004E  3420               	retlw	32	;' '
   498  004F  3456               	retlw	86	;'V'
   499  0050  3461               	retlw	97	;'a'
   500  0051  346C               	retlw	108	;'l'
   501  0052  3475               	retlw	117	;'u'
   502  0053  3465               	retlw	101	;'e'
   503  0054  343A               	retlw	58	;':'
   504  0055  3420               	retlw	32	;' '
   505  0056  3425               	retlw	37	;'%'
   506  0057  3469               	retlw	105	;'i'
   507  0058  3420               	retlw	32	;' '
   508  0059  3420               	retlw	32	;' '
   509  005A  3409               	retlw	9
   510  005B  3420               	retlw	32	;' '
   511  005C  3450               	retlw	80	;'P'
   512  005D  3472               	retlw	114	;'r'
   513  005E  3465               	retlw	101	;'e'
   514  005F  3473               	retlw	115	;'s'
   515  0060  3473               	retlw	115	;'s'
   516  0061  3465               	retlw	101	;'e'
   517  0062  3464               	retlw	100	;'d'
   518  0063  3420               	retlw	32	;' '
   519  0064  344B               	retlw	75	;'K'
   520  0065  3465               	retlw	101	;'e'
   521  0066  3479               	retlw	121	;'y'
   522  0067  3473               	retlw	115	;'s'
   523  0068  343A               	retlw	58	;':'
   524  0069  3420               	retlw	32	;' '
   525  006A  3425               	retlw	37	;'%'
   526  006B  3469               	retlw	105	;'i'
   527  006C  3420               	retlw	32	;' '
   528  006D  340A               	retlw	10
   529  006E  340D               	retlw	13
   530  006F  3400               	retlw	0
   531  0070                     STR_8:	
   532  0070  340A               	retlw	10
   533  0071  340D               	retlw	13
   534  0072  3452               	retlw	82	;'R'
   535  0073  3465               	retlw	101	;'e'
   536  0074  3464               	retlw	100	;'d'
   537  0075  3420               	retlw	32	;' '
   538  0076  344B               	retlw	75	;'K'
   539  0077  3465               	retlw	101	;'e'
   540  0078  3479               	retlw	121	;'y'
   541  0079  3462               	retlw	98	;'b'
   542  007A  346F               	retlw	111	;'o'
   543  007B  3461               	retlw	97	;'a'
   544  007C  3472               	retlw	114	;'r'
   545  007D  3464               	retlw	100	;'d'
   546  007E  3420               	retlw	32	;' '
   547  007F  3462               	retlw	98	;'b'
   548  0080  3479               	retlw	121	;'y'
   549  0081  3420               	retlw	32	;' '
   550  0082  344A               	retlw	74	;'J'
   551  0083  3461               	retlw	97	;'a'
   552  0084  346D               	retlw	109	;'m'
   553  0085  3465               	retlw	101	;'e'
   554  0086  3473               	retlw	115	;'s'
   555  0087  3420               	retlw	32	;' '
   556  0088  3448               	retlw	72	;'H'
   557  0089  3461               	retlw	97	;'a'
   558  008A  3467               	retlw	103	;'g'
   559  008B  3465               	retlw	101	;'e'
   560  008C  3472               	retlw	114	;'r'
   561  008D  346D               	retlw	109	;'m'
   562  008E  3461               	retlw	97	;'a'
   563  008F  346E               	retlw	110	;'n'
   564  0090  3420               	retlw	32	;' '
   565  0091  3432               	retlw	50	;'2'
   566  0092  3430               	retlw	48	;'0'
   567  0093  3431               	retlw	49	;'1'
   568  0094  3435               	retlw	53	;'5'
   569  0095  340A               	retlw	10
   570  0096  340D               	retlw	13
   571  0097  3400               	retlw	0
   572  0098                     STR_3:	
   573  0098  340A               	retlw	10
   574  0099  340D               	retlw	13
   575  009A  3445               	retlw	69	;'E'
   576  009B  346E               	retlw	110	;'n'
   577  009C  3474               	retlw	116	;'t'
   578  009D  3465               	retlw	101	;'e'
   579  009E  3472               	retlw	114	;'r'
   580  009F  3469               	retlw	105	;'i'
   581  00A0  346E               	retlw	110	;'n'
   582  00A1  3467               	retlw	103	;'g'
   583  00A2  3420               	retlw	32	;' '
   584  00A3  3474               	retlw	116	;'t'
   585  00A4  3475               	retlw	117	;'u'
   586  00A5  346E               	retlw	110	;'n'
   587  00A6  3469               	retlw	105	;'i'
   588  00A7  346E               	retlw	110	;'n'
   589  00A8  3467               	retlw	103	;'g'
   590  00A9  3420               	retlw	32	;' '
   591  00AA  346D               	retlw	109	;'m'
   592  00AB  346F               	retlw	111	;'o'
   593  00AC  3464               	retlw	100	;'d'
   594  00AD  3465               	retlw	101	;'e'
   595  00AE  342E               	retlw	46	;'.'
   596  00AF  342E               	retlw	46	;'.'
   597  00B0  342E               	retlw	46	;'.'
   598  00B1  340A               	retlw	10
   599  00B2  340D               	retlw	13
   600  00B3  3400               	retlw	0
   601  00B4                     STR_4:	
   602  00B4  344E               	retlw	78	;'N'
   603  00B5  346F               	retlw	111	;'o'
   604  00B6  3474               	retlw	116	;'t'
   605  00B7  3465               	retlw	101	;'e'
   606  00B8  343A               	retlw	58	;':'
   607  00B9  3420               	retlw	32	;' '
   608  00BA  3425               	retlw	37	;'%'
   609  00BB  3469               	retlw	105	;'i'
   610  00BC  3409               	retlw	9
   611  00BD  3420               	retlw	32	;' '
   612  00BE  3456               	retlw	86	;'V'
   613  00BF  3461               	retlw	97	;'a'
   614  00C0  346C               	retlw	108	;'l'
   615  00C1  3475               	retlw	117	;'u'
   616  00C2  3465               	retlw	101	;'e'
   617  00C3  343A               	retlw	58	;':'
   618  00C4  3420               	retlw	32	;' '
   619  00C5  3425               	retlw	37	;'%'
   620  00C6  3469               	retlw	105	;'i'
   621  00C7  340A               	retlw	10
   622  00C8  340D               	retlw	13
   623  00C9  3400               	retlw	0
   624  00CA                     STR_5:	
   625  00CA  3457               	retlw	87	;'W'
   626  00CB  3472               	retlw	114	;'r'
   627  00CC  3469               	retlw	105	;'i'
   628  00CD  3474               	retlw	116	;'t'
   629  00CE  3469               	retlw	105	;'i'
   630  00CF  346E               	retlw	110	;'n'
   631  00D0  3467               	retlw	103	;'g'
   632  00D1  3420               	retlw	32	;' '
   633  00D2  3476               	retlw	118	;'v'
   634  00D3  3461               	retlw	97	;'a'
   635  00D4  346C               	retlw	108	;'l'
   636  00D5  3475               	retlw	117	;'u'
   637  00D6  3465               	retlw	101	;'e'
   638  00D7  343A               	retlw	58	;':'
   639  00D8  3420               	retlw	32	;' '
   640  00D9  3425               	retlw	37	;'%'
   641  00DA  3469               	retlw	105	;'i'
   642  00DB  3400               	retlw	0
   643  00DC                     STR_6:	
   644  00DC  3444               	retlw	68	;'D'
   645  00DD  346F               	retlw	111	;'o'
   646  00DE  346E               	retlw	110	;'n'
   647  00DF  3465               	retlw	101	;'e'
   648  00E0  3421               	retlw	33	;'!'
   649  00E1  340A               	retlw	10
   650  00E2  340D               	retlw	13
   651  00E3  3400               	retlw	0
   652  00E4                     STR_1:	
   653  00E4  3468               	retlw	104	;'h'
   654  00E5  3400               	retlw	0
   655  00E6                     STR_2:	
   656  00E6  346C               	retlw	108	;'l'
   657  00E7  3400               	retlw	0
   658                           
   659                           ; #config settings
   660  0000                     
   661                           	psect	cinit
   662  0013                     start_initialization:	
   663  0013                     __initialization:	
   664                           
   665                           ; Clear objects allocated to COMMON
   666  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   667  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   668                           
   669                           ; Clear objects allocated to BANK0
   670  0015  01C7               	clrf	__pbssBANK0& (0+127)
   671  0016  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   672  0017  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   673  0018  01CA               	clrf	(__pbssBANK0+3)& (0+127)
   674  0019  01CB               	clrf	(__pbssBANK0+4)& (0+127)
   675                           
   676                           ; Clear objects allocated to BANK1
   677  001A  1383               	bcf	3,7	;select IRP bank0
   678  001B  30A0               	movlw	low __pbssBANK1
   679  001C  0084               	movwf	4
   680  001D  30CE               	movlw	low (__pbssBANK1+46)
   681  001E  118A  2633  118A   	fcall	clear_ram0
   682                           
   683                           ; Initialize objects allocated to BANK0
   684  0021  118A  2648  118A   	fcall	__pidataBANK0	;fetch initializer
   685  0024  00CC               	movwf	__pdataBANK0& (0+127)
   686  0025  118A  2649         	fcall	__pidataBANK0+1	;fetch initializer
   687  0027  00CD               	movwf	(__pdataBANK0+1)& (0+127)
   688  0028                     end_of_initialization:	
   689                           ;End of C runtime variable initialization code
   690                           
   691  0028                     __end_of__initialization:	
   692  0028  0183               	clrf	3
   693  0029  118A  2C5A         	ljmp	_main	;jump to C main() function
   694                           
   695                           	psect	bssCOMMON
   696  0078                     __pbssCOMMON:	
   697  0078                     _current_key:	
   698  0078                     	ds	1
   699  0079                     _currently_tuning:	
   700  0079                     	ds	1
   701                           
   702                           	psect	bssBANK0
   703  0047                     __pbssBANK0:	
   704  0047                     _last_key:	
   705  0047                     	ds	2
   706  0049                     _pressed_keys:	
   707  0049                     	ds	2
   708  004B                     _in_tuning_mode:	
   709  004B                     	ds	1
   710                           
   711                           	psect	dataBANK0
   712  004C                     __pdataBANK0:	
   713  004C                     _key_count:	
   714  004C                     	ds	2
   715                           
   716                           	psect	bssBANK1
   717  00A0                     __pbssBANK1:	
   718  00A0                     _tuning:	
   719  00A0                     	ds	46
   720                           
   721                           	psect	clrtext
   722  0633                     clear_ram0:	
   723                           ;	Called with FSR containing the base address, and
   724                           ;	W with the last address+1
   725                           
   726  0633  0064               	clrwdt	;clear the watchdog before getting into this loop
   727  0634                     clrloop0:	
   728  0634  0180               	clrf	0	;clear RAM location pointed to by FSR
   729  0635  0A84               	incf	4,f	;increment pointer
   730  0636  0604               	xorwf	4,w	;XOR with final address
   731  0637  1903               	btfsc	3,2	;have we reached the end yet?
   732  0638  3400               	retlw	0	;all done for this memory range, return
   733  0639  0604               	xorwf	4,w	;XOR again to restore value
   734  063A  2E34               	goto	clrloop0	;do the next byte
   735                           
   736                           	psect	cstackCOMMON
   737  0070                     __pcstackCOMMON:	
   738  0070                     ?_ConfigureOscillator:	
   739  0070                     ?_InitApp:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0070                     ?_isr:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0070                     ??_isr:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_putch:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0070                     ?_tuningCheck:	
   752                           ; 0 bytes @ 0x0
   753                           
   754  0070                     ?_load_tuning:	
   755                           ; 0 bytes @ 0x0
   756                           
   757  0070                     ?_print_tuning:	
   758                           ; 0 bytes @ 0x0
   759                           
   760  0070                     ?_save_tuning:	
   761                           ; 0 bytes @ 0x0
   762                           
   763  0070                     ?_tune_down:	
   764                           ; 0 bytes @ 0x0
   765                           
   766  0070                     ?_tune_up:	
   767                           ; 0 bytes @ 0x0
   768                           
   769  0070                     ?_tune:	
   770                           ; 0 bytes @ 0x0
   771                           
   772  0070                     ?_play:	
   773                           ; 0 bytes @ 0x0
   774                           
   775  0070                     ?_main:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0070                     ?_eeprom_read:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0070                     ?_checkKey:	
   782                           ; 1 bytes @ 0x0
   783                           
   784                           
   785                           ; 1 bytes @ 0x0
   786  0070                     	ds	4
   787  0074                     ?_eeprom_write:	
   788  0074                     ??_eeprom_read:	
   789                           ; 0 bytes @ 0x4
   790                           
   791  0074                     ??_ConfigureOscillator:	
   792                           ; 0 bytes @ 0x4
   793                           
   794  0074                     ??_InitApp:	
   795                           ; 0 bytes @ 0x4
   796                           
   797  0074                     ??_putch:	
   798                           ; 0 bytes @ 0x4
   799                           
   800  0074                     ?_SPI_Write:	
   801                           ; 0 bytes @ 0x4
   802                           
   803  0074                     ??_checkKey:	
   804                           ; 0 bytes @ 0x4
   805                           
   806  0074                     ??_tune_down:	
   807                           ; 0 bytes @ 0x4
   808                           
   809  0074                     ??_tune_up:	
   810                           ; 0 bytes @ 0x4
   811                           
   812  0074                     ??___lmul:	
   813                           ; 0 bytes @ 0x4
   814                           
   815  0074                     ?___lwdiv:	
   816                           ; 0 bytes @ 0x4
   817                           
   818  0074                     putch@data:	
   819                           ; 2 bytes @ 0x4
   820                           
   821  0074                     eeprom_write@value:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     SPI_Write@data:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     ___lwdiv@divisor:	
   828                           ; 2 bytes @ 0x4
   829                           
   830                           
   831                           ; 2 bytes @ 0x4
   832  0074                     	ds	1
   833  0075                     ??_eeprom_write:	
   834  0075                     ??___lldiv:	
   835                           ; 0 bytes @ 0x5
   836                           
   837  0075                     eeprom_read@addr:	
   838                           ; 0 bytes @ 0x5
   839                           
   840                           
   841                           ; 1 bytes @ 0x5
   842  0075                     	ds	1
   843  0076                     ??_SPI_Write:	
   844  0076                     ??_get_voltage:	
   845                           ; 0 bytes @ 0x6
   846                           
   847  0076                     ?_read16_eeprom:	
   848                           ; 0 bytes @ 0x6
   849                           
   850  0076                     checkKey@keyVal:	
   851                           ; 2 bytes @ 0x6
   852                           
   853  0076                     eeprom_write@addr:	
   854                           ; 1 bytes @ 0x6
   855                           
   856  0076                     ___lwdiv@dividend:	
   857                           ; 1 bytes @ 0x6
   858                           
   859                           
   860                           ; 2 bytes @ 0x6
   861  0076                     	ds	2
   862  0078                     ??_tuningCheck:	
   863                           
   864                           	psect	cstackBANK0
   865  0020                     __pcstackBANK0:	
   866                           ; 0 bytes @ 0x8
   867                           
   868  0020                     ??_read16_eeprom:	
   869  0020                     ??_tune:	
   870                           ; 0 bytes @ 0x0
   871                           
   872  0020                     ??___lwdiv:	
   873                           ; 0 bytes @ 0x0
   874                           
   875  0020                     ?___lmul:	
   876                           ; 0 bytes @ 0x0
   877                           
   878  0020                     SPI_Write@config:	
   879                           ; 4 bytes @ 0x0
   880                           
   881  0020                     ___lmul@multiplier:	
   882                           ; 2 bytes @ 0x0
   883                           
   884                           
   885                           ; 4 bytes @ 0x0
   886  0020                     	ds	1
   887  0021                     ___lwdiv@counter:	
   888                           
   889                           ; 1 bytes @ 0x1
   890  0021                     	ds	1
   891  0022                     ___lwdiv@quotient:	
   892                           
   893                           ; 2 bytes @ 0x2
   894  0022                     	ds	2
   895  0024                     ?___lwmod:	
   896  0024                     read16_eeprom@lo_byte:	
   897                           ; 2 bytes @ 0x4
   898                           
   899  0024                     ___lwmod@divisor:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0024                     ___lmul@multiplicand:	
   903                           ; 2 bytes @ 0x4
   904                           
   905                           
   906                           ; 4 bytes @ 0x4
   907  0024                     	ds	1
   908  0025                     read16_eeprom@hi_byte:	
   909                           
   910                           ; 1 bytes @ 0x5
   911  0025                     	ds	1
   912  0026                     read16_eeprom@addr:	
   913  0026                     ___lwmod@dividend:	
   914                           ; 1 bytes @ 0x6
   915                           
   916                           
   917                           ; 2 bytes @ 0x6
   918  0026                     	ds	1
   919  0027                     ??_load_tuning:	
   920                           
   921                           ; 0 bytes @ 0x7
   922  0027                     	ds	1
   923  0028                     ??___lwmod:	
   924  0028                     ___lmul@product:	
   925                           ; 0 bytes @ 0x8
   926                           
   927                           
   928                           ; 4 bytes @ 0x8
   929  0028                     	ds	1
   930  0029                     ___lwmod@counter:	
   931                           
   932                           ; 1 bytes @ 0x9
   933  0029                     	ds	1
   934  002A                     ?_printf:	
   935                           
   936                           ; 2 bytes @ 0xA
   937  002A                     	ds	2
   938  002C                     ?___lldiv:	
   939  002C                     ___lldiv@divisor:	
   940                           ; 4 bytes @ 0xC
   941                           
   942                           
   943                           ; 4 bytes @ 0xC
   944  002C                     	ds	4
   945  0030                     ??_printf:	
   946  0030                     ___lldiv@dividend:	
   947                           ; 0 bytes @ 0x10
   948                           
   949                           
   950                           ; 4 bytes @ 0x10
   951  0030                     	ds	3
   952  0033                     printf@ap:	
   953                           
   954                           ; 1 bytes @ 0x13
   955  0033                     	ds	1
   956  0034                     printf@flag:	
   957  0034                     ___lldiv@quotient:	
   958                           ; 1 bytes @ 0x14
   959                           
   960                           
   961                           ; 4 bytes @ 0x14
   962  0034                     	ds	1
   963  0035                     printf@prec:	
   964                           
   965                           ; 1 bytes @ 0x15
   966  0035                     	ds	1
   967  0036                     printf@val:	
   968                           
   969                           ; 2 bytes @ 0x16
   970  0036                     	ds	2
   971  0038                     printf@f:	
   972  0038                     ___lldiv@counter:	
   973                           ; 1 bytes @ 0x18
   974                           
   975                           
   976                           ; 1 bytes @ 0x18
   977  0038                     	ds	1
   978  0039                     ?_get_voltage:	
   979  0039                     printf@c:	
   980                           ; 4 bytes @ 0x19
   981                           
   982  0039                     get_voltage@keyCode:	
   983                           ; 1 bytes @ 0x19
   984                           
   985                           
   986                           ; 4 bytes @ 0x19
   987  0039                     	ds	1
   988  003A                     ?_write16_eeprom:	
   989  003A                     ??_print_tuning:	
   990                           ; 0 bytes @ 0x1A
   991                           
   992  003A                     write16_eeprom@value:	
   993                           ; 0 bytes @ 0x1A
   994                           
   995                           
   996                           ; 2 bytes @ 0x1A
   997  003A                     	ds	2
   998  003C                     ??_write16_eeprom:	
   999                           
  1000                           ; 0 bytes @ 0x1C
  1001  003C                     	ds	1
  1002  003D                     ??_play:	
  1003  003D                     write16_eeprom@lo_byte:	
  1004                           ; 0 bytes @ 0x1D
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x1D
  1008  003D                     	ds	1
  1009  003E                     write16_eeprom@hi_byte:	
  1010                           
  1011                           ; 1 bytes @ 0x1E
  1012  003E                     	ds	1
  1013  003F                     write16_eeprom@addr:	
  1014  003F                     play@real_value:	
  1015                           ; 1 bytes @ 0x1F
  1016                           
  1017                           
  1018                           ; 2 bytes @ 0x1F
  1019  003F                     	ds	1
  1020  0040                     ??_save_tuning:	
  1021                           
  1022                           ; 0 bytes @ 0x20
  1023  0040                     	ds	2
  1024  0042                     save_tuning@value:	
  1025                           
  1026                           ; 2 bytes @ 0x22
  1027  0042                     	ds	2
  1028  0044                     ??_main:	
  1029                           
  1030                           ; 0 bytes @ 0x24
  1031  0044                     	ds	3
  1032                           
  1033                           	psect	maintext
  1034  045A                     __pmaintext:	
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 257 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;		None               void
  1047 ;; Registers used:
  1048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : B00/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1054 ;;      Params:         0       0       0       0
  1055 ;;      Locals:         0       0       0       0
  1056 ;;      Temps:          0       3       0       0
  1057 ;;      Totals:         0       3       0       0
  1058 ;;Total ram usage:        3 bytes
  1059 ;; Hardware stack levels required when called:    5
  1060 ;; This function calls:
  1061 ;;		_ConfigureOscillator
  1062 ;;		_InitApp
  1063 ;;		_load_tuning
  1064 ;;		_play
  1065 ;;		_print_tuning
  1066 ;;		_printf
  1067 ;;		_save_tuning
  1068 ;;		_tune
  1069 ;;		_tuningCheck
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _main
  1077  045A                     _main:	
  1078                           
  1079                           ;main.c: 260: ConfigureOscillator();
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1083  045A  118A  2643  118A   	fcall	_ConfigureOscillator
  1084                           
  1085                           ;main.c: 263: InitApp();
  1086  045D  118A  23E2  118A   	fcall	_InitApp
  1087                           
  1088                           ;main.c: 265: printf("\n\rRed Keyboard by James Hagerman 2015\n\r");
  1089  0460  3040               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1090  0461  118A  20E8  118A   	fcall	_printf
  1091                           
  1092                           ;main.c: 268: load_tuning();
  1093  0464  118A  2584  118A   	fcall	_load_tuning
  1094                           
  1095                           ;main.c: 269: print_tuning();
  1096  0467  118A  252B  118A   	fcall	_print_tuning
  1097                           
  1098                           ;main.c: 271: tuning[10] = 100;
  1099  046A  3064               	movlw	100
  1100  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1101  046C  1303               	bcf	3,6	;RP1=0, select bank1
  1102  046D  00B4               	movwf	(_tuning^(0+128)+20)
  1103  046E  3000               	movlw	0
  1104  046F  00B5               	movwf	(_tuning^(0+128)+21)
  1105                           
  1106                           ;main.c: 274: save_tuning();
  1107  0470  118A  2420  118A   	fcall	_save_tuning
  1108                           
  1109                           ;main.c: 277: tuningCheck();
  1110  0473  118A  2612  118A   	fcall	_tuningCheck
  1111  0476                     l1818:	
  1112                           ;main.c: 278: while(in_tuning_mode) {
  1113                           
  1114  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0478  084B               	movf	_in_tuning_mode,w
  1117  0479  1903               	btfsc	3,2
  1118  047A  2C7F               	goto	l1820
  1119                           
  1120                           ;main.c: 279: tune();
  1121  047B  118A  2231  118A   	fcall	_tune
  1122  047E  2C76               	goto	l1818
  1123  047F                     l1820:	
  1124                           
  1125                           ;main.c: 280: }
  1126                           ;main.c: 282: _delay((unsigned long)((1000)*(8000000L/4000.0)));
  1127  047F  300B               	movlw	11
  1128  0480  00C6               	movwf	??_main+2
  1129  0481  3026               	movlw	38
  1130  0482  00C5               	movwf	??_main+1
  1131  0483  3066               	movlw	102
  1132  0484  00C4               	movwf	??_main
  1133  0485                     u1777:	
  1134  0485  0BC4               	decfsz	??_main,f
  1135  0486  2C85               	goto	u1777
  1136  0487  0BC5               	decfsz	??_main+1,f
  1137  0488  2C85               	goto	u1777
  1138  0489  0BC6               	decfsz	??_main+2,f
  1139  048A  2C85               	goto	u1777
  1140  048B  2C8C               	nop2
  1141  048C                     l1822:	
  1142                           ;main.c: 283: while(1)
  1143                           
  1144                           
  1145                           ;main.c: 284: {
  1146                           ;main.c: 285: play();
  1147  048C  118A  22A3  118A   	fcall	_play
  1148  048F  2C8C               	goto	l1822
  1149  0490                     __end_of_main:	
  1150                           
  1151                           	psect	text1
  1152  0612                     __ptext1:	
  1153 ;; *************** function _tuningCheck *****************
  1154 ;; Defined at:
  1155 ;;		line 158 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;		None               void
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1169 ;;      Params:         0       0       0       0
  1170 ;;      Locals:         0       0       0       0
  1171 ;;      Temps:          0       0       0       0
  1172 ;;      Totals:         0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    3
  1176 ;; This function calls:
  1177 ;;		_checkKey
  1178 ;;		_printf
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _tuningCheck
  1186  0612                     _tuningCheck:	
  1187                           
  1188                           ;main.c: 162: if (checkKey(21) && checkKey(22)) {
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _tuningCheck: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1192  0612  3015               	movlw	21
  1193  0613  118A  219D  118A   	fcall	_checkKey
  1194  0616  3A00               	xorlw	0
  1195  0617  1903               	skipnz
  1196  0618  0008               	return
  1197  0619  3016               	movlw	22
  1198  061A  118A  219D  118A   	fcall	_checkKey
  1199  061D  3A00               	xorlw	0
  1200  061E  1903               	skipnz
  1201  061F  0008               	return
  1202                           
  1203                           ;main.c: 163: in_tuning_mode = 1;
  1204  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0622  01CB               	clrf	_in_tuning_mode
  1207  0623  0ACB               	incf	_in_tuning_mode,f
  1208                           
  1209                           ;main.c: 164: printf("\n\rEntering tuning mode...\n\r");
  1210  0624  3068               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1211  0625  118A  20E8         	fcall	_printf
  1212  0627  0008               	return
  1213  0628                     __end_of_tuningCheck:	
  1214                           
  1215                           	psect	text2
  1216  0231                     __ptext2:	
  1217 ;; *************** function _tune *****************
  1218 ;; Defined at:
  1219 ;;		line 193 in file "main.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, pclath, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1233 ;;      Params:         0       0       0       0
  1234 ;;      Locals:         0       0       0       0
  1235 ;;      Temps:          0       4       0       0
  1236 ;;      Totals:         0       4       0       0
  1237 ;;Total ram usage:        4 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    2
  1240 ;; This function calls:
  1241 ;;		_checkKey
  1242 ;;		_tune_down
  1243 ;;		_tune_up
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _tune
  1251  0231                     _tune:	
  1252                           
  1253                           ;main.c: 194: _delay((unsigned long)((100)*(8000000L/4000.0)));
  1254                           
  1255                           ;incstack = 0
  1256                           ; Regs used in _tune: [wreg+status,2+status,0+pclath+cstack]
  1257  0231  3002               	movlw	2
  1258  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0234  00A2               	movwf	??_tune+2
  1261  0235  3004               	movlw	4
  1262  0236  00A1               	movwf	??_tune+1
  1263  0237  30BA               	movlw	186
  1264  0238  00A0               	movwf	??_tune
  1265  0239                     u1787:	
  1266  0239  0BA0               	decfsz	??_tune,f
  1267  023A  2A39               	goto	u1787
  1268  023B  0BA1               	decfsz	??_tune+1,f
  1269  023C  2A39               	goto	u1787
  1270  023D  0BA2               	decfsz	??_tune+2,f
  1271  023E  2A39               	goto	u1787
  1272  023F  0000               	nop
  1273                           
  1274                           ;main.c: 196: for (current_key = 0; current_key < key_count; current_key += 1) {
  1275  0240  01F8               	clrf	_current_key
  1276  0241  2A6A               	goto	l1464
  1277  0242                     l1450:	
  1278                           ;main.c: 201: break;
  1279                           
  1280                           
  1281                           ;main.c: 202: }
  1282                           ;main.c: 205: if (current_key == 19) {
  1283  0242  3013               	movlw	19
  1284  0243  0678               	xorwf	_current_key,w
  1285  0244  1D03               	btfss	3,2
  1286  0245  2A4C               	goto	l130
  1287                           
  1288                           ;main.c: 206: currently_tuning += 1;
  1289  0246  3001               	movlw	1
  1290  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0249  00A0               	movwf	??_tune
  1293  024A  0820               	movf	??_tune,w
  1294  024B  07F9               	addwf	_currently_tuning,f
  1295  024C                     l130:	
  1296                           
  1297                           ;main.c: 207: }
  1298                           ;main.c: 208: if (current_key == 17) {
  1299  024C  3011               	movlw	17
  1300  024D  0678               	xorwf	_current_key,w
  1301  024E  1D03               	btfss	3,2
  1302  024F  2A56               	goto	l131
  1303                           
  1304                           ;main.c: 209: currently_tuning -= 1;
  1305  0250  30FF               	movlw	255
  1306  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0253  00A0               	movwf	??_tune
  1309  0254  0820               	movf	??_tune,w
  1310  0255  07F9               	addwf	_currently_tuning,f
  1311  0256                     l131:	
  1312                           
  1313                           ;main.c: 210: }
  1314                           ;main.c: 213: if (current_key == 18) {
  1315  0256  3012               	movlw	18
  1316  0257  0678               	xorwf	_current_key,w
  1317  0258  1D03               	btfss	3,2
  1318  0259  2A5D               	goto	l1458
  1319                           
  1320                           ;main.c: 214: tune_down();
  1321  025A  118A  264B  118A   	fcall	_tune_down
  1322  025D                     l1458:	
  1323                           
  1324                           ;main.c: 215: }
  1325                           ;main.c: 216: if (current_key == 20) {
  1326  025D  3014               	movlw	20
  1327  025E  0678               	xorwf	_current_key,w
  1328  025F  1D03               	btfss	3,2
  1329  0260  2A64               	goto	l1462
  1330                           
  1331                           ;main.c: 217: tune_up();
  1332  0261  118A  264A  118A   	fcall	_tune_up
  1333  0264                     l1462:	
  1334  0264  3001               	movlw	1
  1335  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0267  00A0               	movwf	??_tune
  1338  0268  0820               	movf	??_tune,w
  1339  0269  07F8               	addwf	_current_key,f
  1340  026A                     l1464:	
  1341  026A  0878               	movf	_current_key,w
  1342  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1343  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1344  026D  00A0               	movwf	??_tune
  1345  026E  01A1               	clrf	??_tune+1
  1346  026F  084D               	movf	_key_count+1,w
  1347  0270  0221               	subwf	??_tune+1,w
  1348  0271  1D03               	skipz
  1349  0272  2A75               	goto	u1315
  1350  0273  084C               	movf	_key_count,w
  1351  0274  0220               	subwf	??_tune,w
  1352  0275                     u1315:	
  1353  0275  1803               	btfsc	3,0
  1354  0276  2A84               	goto	l129
  1355                           
  1356                           ;main.c: 197: if (checkKey(current_key)) {
  1357  0277  0878               	movf	_current_key,w
  1358  0278  118A  219D  118A   	fcall	_checkKey
  1359  027B  3A00               	xorlw	0
  1360  027C  1903               	skipnz
  1361  027D  2A64               	goto	l1462
  1362                           
  1363                           ;main.c: 199: if (current_key == 0) {
  1364  027E  0878               	movf	_current_key,w
  1365  027F  1D03               	btfss	3,2
  1366  0280  2A42               	goto	l1450
  1367                           
  1368                           ;main.c: 200: in_tuning_mode = 0;
  1369  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0283  01CB               	clrf	_in_tuning_mode
  1372  0284                     l129:	
  1373                           
  1374                           ;main.c: 218: }
  1375                           ;main.c: 220: }
  1376                           ;main.c: 221: }
  1377                           ;main.c: 222: if (currently_tuning < 0) {
  1378  0284  1FF9               	btfss	_currently_tuning,7
  1379  0285  2A88               	goto	l1468
  1380                           
  1381                           ;main.c: 223: currently_tuning = 0;
  1382  0286  01F9               	clrf	_currently_tuning
  1383                           
  1384                           ;main.c: 224: } else if (currently_tuning > key_count-1) {
  1385  0287  0008               	return
  1386  0288                     l1468:	
  1387  0288  0879               	movf	_currently_tuning,w
  1388  0289  00A0               	movwf	??_tune
  1389  028A  01A1               	clrf	??_tune+1
  1390  028B  1BA0               	btfsc	??_tune,7
  1391  028C  03A1               	decf	??_tune+1,f
  1392  028D  084C               	movf	_key_count,w
  1393  028E  3EFF               	addlw	255
  1394  028F  00A2               	movwf	??_tune+2
  1395  0290  084D               	movf	_key_count+1,w
  1396  0291  1803               	skipnc
  1397  0292  3E01               	addlw	1
  1398  0293  3EFF               	addlw	255
  1399  0294  00A3               	movwf	??_tune+3
  1400  0295  0821               	movf	??_tune+1,w
  1401  0296  0223               	subwf	??_tune+3,w
  1402  0297  1D03               	skipz
  1403  0298  2A9B               	goto	u1335
  1404  0299  0820               	movf	??_tune,w
  1405  029A  0222               	subwf	??_tune+2,w
  1406  029B                     u1335:	
  1407  029B  1803               	skipnc
  1408  029C  0008               	return
  1409                           
  1410                           ;main.c: 225: currently_tuning = key_count-1;
  1411  029D  084C               	movf	_key_count,w
  1412  029E  3EFF               	addlw	-1
  1413  029F  00A0               	movwf	??_tune
  1414  02A0  0820               	movf	??_tune,w
  1415  02A1  00F9               	movwf	_currently_tuning
  1416  02A2  0008               	return
  1417  02A3                     __end_of_tune:	
  1418                           
  1419                           	psect	text3
  1420  064A                     __ptext3:	
  1421 ;; *************** function _tune_up *****************
  1422 ;; Defined at:
  1423 ;;		line 190 in file "main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;		None               void
  1430 ;; Registers used:
  1431 ;;		None
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1437 ;;      Params:         0       0       0       0
  1438 ;;      Locals:         0       0       0       0
  1439 ;;      Temps:          0       0       0       0
  1440 ;;      Totals:         0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_tune
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _tune_up
  1453  064A                     _tune_up:	
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in _tune_up: []
  1457  064A  0008               	return
  1458  064B                     __end_of_tune_up:	
  1459                           
  1460                           	psect	text4
  1461  064B                     __ptext4:	
  1462 ;; *************** function _tune_down *****************
  1463 ;; Defined at:
  1464 ;;		line 187 in file "main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;		None               void
  1471 ;; Registers used:
  1472 ;;		None
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1478 ;;      Params:         0       0       0       0
  1479 ;;      Locals:         0       0       0       0
  1480 ;;      Temps:          0       0       0       0
  1481 ;;      Totals:         0       0       0       0
  1482 ;;Total ram usage:        0 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_tune
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _tune_down
  1494  064B                     _tune_down:	
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _tune_down: []
  1498  064B  0008               	return
  1499  064C                     __end_of_tune_down:	
  1500                           
  1501                           	psect	text5
  1502  0420                     __ptext5:	
  1503 ;; *************** function _save_tuning *****************
  1504 ;; Defined at:
  1505 ;;		line 179 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  value           2   34[BANK0 ] unsigned int 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1519 ;;      Params:         0       0       0       0
  1520 ;;      Locals:         0       2       0       0
  1521 ;;      Temps:          0       2       0       0
  1522 ;;      Totals:         0       4       0       0
  1523 ;;Total ram usage:        4 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    4
  1526 ;; This function calls:
  1527 ;;		_printf
  1528 ;;		_write16_eeprom
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function _save_tuning
  1536  0420                     _save_tuning:	
  1537                           
  1538                           ;main.c: 180: for (current_key = 0; current_key < key_count; current_key += 1) {
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _save_tuning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1542  0420  01F8               	clrf	_current_key
  1543  0421                     l1776:	
  1544  0421  0878               	movf	_current_key,w
  1545  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0424  00C0               	movwf	??_save_tuning
  1548  0425  01C1               	clrf	??_save_tuning+1
  1549  0426  084D               	movf	_key_count+1,w
  1550  0427  0241               	subwf	??_save_tuning+1,w
  1551  0428  1D03               	skipz
  1552  0429  2C2C               	goto	u1725
  1553  042A  084C               	movf	_key_count,w
  1554  042B  0240               	subwf	??_save_tuning,w
  1555  042C                     u1725:	
  1556  042C  1803               	btfsc	3,0
  1557  042D  0008               	return
  1558                           
  1559                           ;main.c: 181: uint16_t value = tuning[current_key];
  1560  042E  0878               	movf	_current_key,w
  1561  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0431  00C0               	movwf	??_save_tuning
  1564  0432  0740               	addwf	??_save_tuning,w
  1565  0433  3EA0               	addlw	(low (_tuning| 0))& (0+255)
  1566  0434  0084               	movwf	4
  1567  0435  1383               	bcf	3,7	;select IRP bank1
  1568  0436  0800               	movf	0,w
  1569  0437  00C2               	movwf	save_tuning@value
  1570  0438  0A84               	incf	4,f
  1571  0439  0800               	movf	0,w
  1572  043A  00C3               	movwf	save_tuning@value+1
  1573                           
  1574                           ;main.c: 182: printf("Writing value: %i", value);
  1575  043B  0843               	movf	save_tuning@value+1,w
  1576  043C  00AB               	movwf	?_printf+1
  1577  043D  0842               	movf	save_tuning@value,w
  1578  043E  00AA               	movwf	?_printf
  1579  043F  309A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1580  0440  118A  20E8  118A   	fcall	_printf
  1581                           
  1582                           ;main.c: 183: write16_eeprom(current_key*2, value);
  1583  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0445  0843               	movf	save_tuning@value+1,w
  1586  0446  00BB               	movwf	write16_eeprom@value+1
  1587  0447  0842               	movf	save_tuning@value,w
  1588  0448  00BA               	movwf	write16_eeprom@value
  1589  0449  0878               	movf	_current_key,w
  1590  044A  00C0               	movwf	??_save_tuning
  1591  044B  0740               	addwf	??_save_tuning,w
  1592  044C  118A  24FA  118A   	fcall	_write16_eeprom
  1593                           
  1594                           ;main.c: 184: printf("Done!\n\r");
  1595  044F  30AC               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1596  0450  118A  20E8  118A   	fcall	_printf
  1597  0453  3001               	movlw	1
  1598  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0456  00C0               	movwf	??_save_tuning
  1601  0457  0840               	movf	??_save_tuning,w
  1602  0458  07F8               	addwf	_current_key,f
  1603  0459  2C21               	goto	l1776
  1604  045A                     __end_of_save_tuning:	
  1605                           
  1606                           	psect	text6
  1607  04FA                     __ptext6:	
  1608 ;; *************** function _write16_eeprom *****************
  1609 ;; Defined at:
  1610 ;;		line 71 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  addr            1    wreg     unsigned char 
  1613 ;;  value           2   26[BANK0 ] unsigned int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  addr            1   31[BANK0 ] unsigned char 
  1616 ;;  hi_byte         1   30[BANK0 ] unsigned char 
  1617 ;;  lo_byte         1   29[BANK0 ] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1627 ;;      Params:         0       2       0       0
  1628 ;;      Locals:         0       3       0       0
  1629 ;;      Temps:          0       1       0       0
  1630 ;;      Totals:         0       6       0       0
  1631 ;;Total ram usage:        6 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		_eeprom_write
  1636 ;;		_printf
  1637 ;; This function is called by:
  1638 ;;		_save_tuning
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function _write16_eeprom
  1644  04FA                     _write16_eeprom:	
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _write16_eeprom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1648                           ;write16_eeprom@addr stored from wreg
  1649  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1650  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1651  04FC  00BF               	movwf	write16_eeprom@addr
  1652                           
  1653                           ;main.c: 72: uint8_t lo_byte = value & 0xFF;
  1654  04FD  083A               	movf	write16_eeprom@value,w
  1655  04FE  00BC               	movwf	??_write16_eeprom
  1656  04FF  083C               	movf	??_write16_eeprom,w
  1657  0500  00BD               	movwf	write16_eeprom@lo_byte
  1658                           
  1659                           ;main.c: 73: uint8_t hi_byte = value >> 8;
  1660  0501  083B               	movf	write16_eeprom@value+1,w
  1661  0502  00BC               	movwf	??_write16_eeprom
  1662  0503  083C               	movf	??_write16_eeprom,w
  1663  0504  00BE               	movwf	write16_eeprom@hi_byte
  1664                           
  1665                           ;main.c: 75: eeprom_write(addr, value);
  1666  0505  083A               	movf	write16_eeprom@value,w
  1667  0506  00BC               	movwf	??_write16_eeprom
  1668  0507  083C               	movf	??_write16_eeprom,w
  1669  0508  00F4               	movwf	eeprom_write@value
  1670  0509  083F               	movf	write16_eeprom@addr,w
  1671  050A  118A  25AC  118A   	fcall	_eeprom_write
  1672                           
  1673                           ;main.c: 76: while(WR){
  1674  050D  2D12               	goto	l1728
  1675  050E                     l1726:	
  1676                           
  1677                           ;main.c: 77: printf("h");
  1678  050E  30B4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1679  050F  118A  20E8  118A   	fcall	_printf
  1680  0512                     l1728:	
  1681  0512  1683               	bsf	3,5	;RP0=1, select bank3
  1682  0513  1703               	bsf	3,6	;RP1=1, select bank3
  1683  0514  188C               	btfsc	12,1	;volsfr
  1684  0515  2D0E               	goto	l1726
  1685                           
  1686                           ;main.c: 78: }
  1687                           ;main.c: 79: eeprom_write(addr+1, value);
  1688  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0518  083A               	movf	write16_eeprom@value,w
  1691  0519  00BC               	movwf	??_write16_eeprom
  1692  051A  083C               	movf	??_write16_eeprom,w
  1693  051B  00F4               	movwf	eeprom_write@value
  1694  051C  083F               	movf	write16_eeprom@addr,w
  1695  051D  3E01               	addlw	1
  1696  051E  118A  25AC  118A   	fcall	_eeprom_write
  1697                           
  1698                           ;main.c: 80: while(WR){
  1699  0521  2D26               	goto	l1734
  1700  0522                     l1732:	
  1701                           
  1702                           ;main.c: 81: printf("l");
  1703  0522  30B6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1704  0523  118A  20E8  118A   	fcall	_printf
  1705  0526                     l1734:	
  1706  0526  1683               	bsf	3,5	;RP0=1, select bank3
  1707  0527  1703               	bsf	3,6	;RP1=1, select bank3
  1708  0528  188C               	btfsc	12,1	;volsfr
  1709  0529  2D22               	goto	l1732
  1710  052A  0008               	return
  1711  052B                     __end_of_write16_eeprom:	
  1712                           
  1713                           	psect	text7
  1714  05AC                     __ptext7:	
  1715 ;; *************** function _eeprom_write *****************
  1716 ;; Defined at:
  1717 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/pic/eewrite.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  addr            1    wreg     unsigned char 
  1720 ;;  value           1    4[COMMON] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  addr            1    6[COMMON] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1732 ;;      Params:         1       0       0       0
  1733 ;;      Locals:         1       0       0       0
  1734 ;;      Temps:          1       0       0       0
  1735 ;;      Totals:         3       0       0       0
  1736 ;;Total ram usage:        3 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_write16_eeprom
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _eeprom_write
  1748  05AC                     _eeprom_write:	
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1752                           ;eeprom_write@addr stored from wreg
  1753  05AC  00F6               	movwf	eeprom_write@addr
  1754  05AD                     l270:	
  1755  05AD  1683               	bsf	3,5	;RP0=1, select bank3
  1756  05AE  1703               	bsf	3,6	;RP1=1, select bank3
  1757  05AF  188C               	btfsc	12,1	;volsfr
  1758  05B0  2DAD               	goto	l270
  1759  05B1  0876               	movf	eeprom_write@addr,w
  1760  05B2  1283               	bcf	3,5	;RP0=0, select bank2
  1761  05B3  1703               	bsf	3,6	;RP1=1, select bank2
  1762  05B4  008D               	movwf	13	;volatile
  1763  05B5  0874               	movf	eeprom_write@value,w
  1764  05B6  008C               	movwf	12	;volatile
  1765  05B7  303F               	movlw	63
  1766  05B8  00F5               	movwf	??_eeprom_write
  1767  05B9  0875               	movf	??_eeprom_write,w
  1768  05BA  1683               	bsf	3,5	;RP0=1, select bank3
  1769  05BB  1703               	bsf	3,6	;RP1=1, select bank3
  1770  05BC  058C               	andwf	12,f	;volsfr
  1771  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1772  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1773  05BF  1003               	bcf	3,0	;volatile
  1774  05C0  1B8B               	btfsc	11,7	;volatile
  1775  05C1  1403               	bsf	3,0	;volatile
  1776  05C2  138B               	bcf	11,7	;volatile
  1777  05C3  1683               	bsf	3,5	;RP0=1, select bank3
  1778  05C4  1703               	bsf	3,6	;RP1=1, select bank3
  1779  05C5  150C               	bsf	12,2	;volsfr
  1780  05C6  3055               	movlw	85
  1781  05C7  008D               	movwf	13	;volsfr
  1782  05C8  30AA               	movlw	170
  1783  05C9  008D               	movwf	13	;volsfr
  1784  05CA  148C               	bsf	12,1	;volsfr
  1785  05CB  110C               	bcf	12,2	;volsfr
  1786  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1787  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1788  05CE  1C03               	btfss	3,0	;volatile
  1789  05CF  0008               	return
  1790  05D0  178B               	bsf	11,7	;volatile
  1791  05D1  0008               	return
  1792  05D2                     __end_of_eeprom_write:	
  1793                           
  1794                           	psect	text8
  1795  052B                     __ptext8:	
  1796 ;; *************** function _print_tuning *****************
  1797 ;; Defined at:
  1798 ;;		line 174 in file "main.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;		None               void
  1805 ;; Registers used:
  1806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1812 ;;      Params:         0       0       0       0
  1813 ;;      Locals:         0       0       0       0
  1814 ;;      Temps:          0       3       0       0
  1815 ;;      Totals:         0       3       0       0
  1816 ;;Total ram usage:        3 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    3
  1819 ;; This function calls:
  1820 ;;		_printf
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _print_tuning
  1828  052B                     _print_tuning:	
  1829                           
  1830                           ;main.c: 175: for (current_key = 0; current_key < key_count; current_key += 1) {
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _print_tuning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1834  052B  01F8               	clrf	_current_key
  1835  052C                     l1762:	
  1836  052C  0878               	movf	_current_key,w
  1837  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1838  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1839  052F  00BA               	movwf	??_print_tuning
  1840  0530  01BB               	clrf	??_print_tuning+1
  1841  0531  084D               	movf	_key_count+1,w
  1842  0532  023B               	subwf	??_print_tuning+1,w
  1843  0533  1D03               	skipz
  1844  0534  2D37               	goto	u1715
  1845  0535  084C               	movf	_key_count,w
  1846  0536  023A               	subwf	??_print_tuning,w
  1847  0537                     u1715:	
  1848  0537  1803               	btfsc	3,0
  1849  0538  0008               	return
  1850                           
  1851                           ;main.c: 176: printf("Note: %i\t Value: %i\n\r",current_key, tuning[current_key]);
  1852  0539  0878               	movf	_current_key,w
  1853  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1854  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1855  053C  00BA               	movwf	??_print_tuning
  1856  053D  01BB               	clrf	??_print_tuning+1
  1857  053E  083A               	movf	??_print_tuning,w
  1858  053F  00AA               	movwf	?_printf
  1859  0540  083B               	movf	??_print_tuning+1,w
  1860  0541  00AB               	movwf	?_printf+1
  1861  0542  0878               	movf	_current_key,w
  1862  0543  00BC               	movwf	??_print_tuning+2
  1863  0544  073C               	addwf	??_print_tuning+2,w
  1864  0545  3EA0               	addlw	(low (_tuning| 0))& (0+255)
  1865  0546  0084               	movwf	4
  1866  0547  1383               	bcf	3,7	;select IRP bank1
  1867  0548  0800               	movf	0,w
  1868  0549  00AC               	movwf	?_printf+2
  1869  054A  0A84               	incf	4,f
  1870  054B  0800               	movf	0,w
  1871  054C  00AD               	movwf	?_printf+3
  1872  054D  3084               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1873  054E  118A  20E8  118A   	fcall	_printf
  1874  0551  3001               	movlw	1
  1875  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0554  00BA               	movwf	??_print_tuning
  1878  0555  083A               	movf	??_print_tuning,w
  1879  0556  07F8               	addwf	_current_key,f
  1880  0557  2D2C               	goto	l1762
  1881  0558                     __end_of_print_tuning:	
  1882                           
  1883                           	psect	text9
  1884  02A3                     __ptext9:	
  1885 ;; *************** function _play *****************
  1886 ;; Defined at:
  1887 ;;		line 229 in file "main.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  real_value      2   31[BANK0 ] unsigned int 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;		None               void
  1894 ;; Registers used:
  1895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1901 ;;      Params:         0       0       0       0
  1902 ;;      Locals:         0       2       0       0
  1903 ;;      Temps:          0       2       0       0
  1904 ;;      Totals:         0       4       0       0
  1905 ;;Total ram usage:        4 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    3
  1908 ;; This function calls:
  1909 ;;		_SPI_Write
  1910 ;;		_checkKey
  1911 ;;		_get_voltage
  1912 ;;		_printf
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _play
  1920  02A3                     _play:	
  1921                           
  1922                           ;main.c: 230: pressed_keys = 0;
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _play: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1926  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1927  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1928  02A5  01C9               	clrf	_pressed_keys
  1929  02A6  01CA               	clrf	_pressed_keys+1
  1930                           
  1931                           ;main.c: 231: last_key = 100;
  1932  02A7  3064               	movlw	100
  1933  02A8  00C7               	movwf	_last_key
  1934  02A9  3000               	movlw	0
  1935  02AA  00C8               	movwf	_last_key+1
  1936                           
  1937                           ;main.c: 232: for (current_key = 0; current_key < key_count; current_key += 1) {
  1938  02AB  01F8               	clrf	_current_key
  1939  02AC                     l1790:	
  1940  02AC  0878               	movf	_current_key,w
  1941  02AD  00BD               	movwf	??_play
  1942  02AE  01BE               	clrf	??_play+1
  1943  02AF  084D               	movf	_key_count+1,w
  1944  02B0  023E               	subwf	??_play+1,w
  1945  02B1  1D03               	skipz
  1946  02B2  2AB5               	goto	u1745
  1947  02B3  084C               	movf	_key_count,w
  1948  02B4  023D               	subwf	??_play,w
  1949  02B5                     u1745:	
  1950  02B5  1803               	btfsc	3,0
  1951  02B6  2AD4               	goto	l1792
  1952                           
  1953                           ;main.c: 234: if (checkKey(current_key)) {
  1954  02B7  0878               	movf	_current_key,w
  1955  02B8  118A  219D  118A   	fcall	_checkKey
  1956  02BB  3A00               	xorlw	0
  1957  02BC  1903               	skipnz
  1958  02BD  2ACD               	goto	l1788
  1959                           
  1960                           ;main.c: 235: pressed_keys += 1;
  1961  02BE  3001               	movlw	1
  1962  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1963  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1964  02C1  07C9               	addwf	_pressed_keys,f
  1965  02C2  1803               	skipnc
  1966  02C3  0ACA               	incf	_pressed_keys+1,f
  1967  02C4  3000               	movlw	0
  1968  02C5  07CA               	addwf	_pressed_keys+1,f
  1969                           
  1970                           ;main.c: 236: last_key = current_key;
  1971  02C6  0878               	movf	_current_key,w
  1972  02C7  00BD               	movwf	??_play
  1973  02C8  01BE               	clrf	??_play+1
  1974  02C9  083D               	movf	??_play,w
  1975  02CA  00C7               	movwf	_last_key
  1976  02CB  083E               	movf	??_play+1,w
  1977  02CC  00C8               	movwf	_last_key+1
  1978  02CD                     l1788:	
  1979  02CD  3001               	movlw	1
  1980  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1981  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1982  02D0  00BD               	movwf	??_play
  1983  02D1  083D               	movf	??_play,w
  1984  02D2  07F8               	addwf	_current_key,f
  1985  02D3  2AAC               	goto	l1790
  1986  02D4                     l1792:	
  1987                           
  1988                           ;main.c: 237: }
  1989                           ;main.c: 239: }
  1990                           ;main.c: 241: if (pressed_keys > 0) {
  1991  02D4  0849               	movf	_pressed_keys,w
  1992  02D5  044A               	iorwf	_pressed_keys+1,w
  1993  02D6  1903               	btfsc	3,2
  1994  02D7  2B01               	goto	l144
  1995                           
  1996                           ;main.c: 242: PORTCbits.RC5 = 1;
  1997  02D8  1687               	bsf	7,5	;volatile
  1998                           
  1999                           ;main.c: 244: uint16_t real_value = get_voltage(last_key);
  2000  02D9  0847               	movf	_last_key,w
  2001  02DA  00B9               	movwf	get_voltage@keyCode
  2002  02DB  0848               	movf	_last_key+1,w
  2003  02DC  00BA               	movwf	get_voltage@keyCode+1
  2004  02DD  01BB               	clrf	get_voltage@keyCode+2
  2005  02DE  01BC               	clrf	get_voltage@keyCode+3
  2006  02DF  118A  2490  118A   	fcall	_get_voltage
  2007  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2008  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2009  02E4  083A               	movf	?_get_voltage+1,w
  2010  02E5  00C0               	movwf	play@real_value+1
  2011  02E6  0839               	movf	?_get_voltage,w
  2012  02E7  00BF               	movwf	play@real_value
  2013                           
  2014                           ;main.c: 245: printf("Last Key: %i \t Real Value: %i  \t Pressed Keys: %i \n\r", last_ke
      +                          y, real_value, pressed_keys);
  2015  02E8  0848               	movf	_last_key+1,w
  2016  02E9  00AB               	movwf	?_printf+1
  2017  02EA  0847               	movf	_last_key,w
  2018  02EB  00AA               	movwf	?_printf
  2019  02EC  0840               	movf	play@real_value+1,w
  2020  02ED  00AD               	movwf	?_printf+3
  2021  02EE  083F               	movf	play@real_value,w
  2022  02EF  00AC               	movwf	?_printf+2
  2023  02F0  084A               	movf	_pressed_keys+1,w
  2024  02F1  00AF               	movwf	?_printf+5
  2025  02F2  0849               	movf	_pressed_keys,w
  2026  02F3  00AE               	movwf	?_printf+4
  2027  02F4  300B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2028  02F5  118A  20E8  118A   	fcall	_printf
  2029                           
  2030                           ;main.c: 246: SPI_Write(real_value);
  2031  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2032  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2033  02FA  0840               	movf	play@real_value+1,w
  2034  02FB  00F5               	movwf	SPI_Write@data+1
  2035  02FC  083F               	movf	play@real_value,w
  2036  02FD  00F4               	movwf	SPI_Write@data
  2037  02FE  118A  2558         	fcall	_SPI_Write
  2038                           
  2039                           ;main.c: 247: } else {
  2040  0300  0008               	return
  2041  0301                     l144:	
  2042                           
  2043                           ;main.c: 248: PORTCbits.RC5 = 0;
  2044  0301  1287               	bcf	7,5	;volatile
  2045  0302  0008               	return
  2046  0303                     __end_of_play:	
  2047                           
  2048                           	psect	text10
  2049  00E8                     __ptext10:	
  2050 ;; *************** function _printf *****************
  2051 ;; Defined at:
  2052 ;;		line 464 in file "/Applications/microchip/xc8/v1.34/sources/common/doprnt.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  f               1    wreg     PTR const unsigned char 
  2055 ;;		 -> STR_8(40), STR_7(53), STR_6(8), STR_5(18), 
  2056 ;;		 -> STR_4(22), STR_3(28), STR_2(2), STR_1(2), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  f               1   24[BANK0 ] PTR const unsigned char 
  2059 ;;		 -> STR_8(40), STR_7(53), STR_6(8), STR_5(18), 
  2060 ;;		 -> STR_4(22), STR_3(28), STR_2(2), STR_1(2), 
  2061 ;;  tmpval          4    0        struct .
  2062 ;;  val             2   22[BANK0 ] unsigned int 
  2063 ;;  cp              2    0        PTR const unsigned char 
  2064 ;;  len             2    0        unsigned int 
  2065 ;;  c               1   25[BANK0 ] char 
  2066 ;;  prec            1   21[BANK0 ] char 
  2067 ;;  flag            1   20[BANK0 ] unsigned char 
  2068 ;;  ap              1   19[BANK0 ] PTR void [1]
  2069 ;;		 -> ?_printf(2), 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2   10[BANK0 ] int 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2079 ;;      Params:         0       6       0       0
  2080 ;;      Locals:         0       7       0       0
  2081 ;;      Temps:          0       3       0       0
  2082 ;;      Totals:         0      16       0       0
  2083 ;;Total ram usage:       16 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    2
  2086 ;; This function calls:
  2087 ;;		___lwdiv
  2088 ;;		___lwmod
  2089 ;;		_putch
  2090 ;; This function is called by:
  2091 ;;		_write16_eeprom
  2092 ;;		_tuningCheck
  2093 ;;		_print_tuning
  2094 ;;		_save_tuning
  2095 ;;		_play
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _printf
  2102  00E8                     _printf:	
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2106                           ;printf@f stored from wreg
  2107  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2108  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2109  00EA  00B8               	movwf	printf@f
  2110                           
  2111                           ;doprnt.c: 466: va_list ap;
  2112                           ;doprnt.c: 499: signed char c;
  2113                           ;doprnt.c: 506: signed char prec;
  2114                           ;doprnt.c: 508: unsigned char flag;
  2115                           ;doprnt.c: 523: union {
  2116                           ;doprnt.c: 524: unsigned long vd;
  2117                           ;doprnt.c: 525: double integ;
  2118                           ;doprnt.c: 526: } tmpval;
  2119                           ;doprnt.c: 528: unsigned int val;
  2120                           ;doprnt.c: 529: unsigned len;
  2121                           ;doprnt.c: 530: const char * cp;
  2122                           ;doprnt.c: 533: *ap = __va_start();
  2123  00EB  302A               	movlw	(low (?_printf| 0))& (0+255)
  2124  00EC  00B0               	movwf	??_printf
  2125  00ED  0830               	movf	??_printf,w
  2126  00EE  00B3               	movwf	printf@ap
  2127  00EF                     l1694:	
  2128                           ;doprnt.c: 536: while(c = *f++) {
  2129                           
  2130  00EF  3001               	movlw	1
  2131  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  2132  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  2133  00F2  07B8               	addwf	printf@f,f
  2134  00F3  30FF               	movlw	-1
  2135  00F4  0738               	addwf	printf@f,w
  2136  00F5  0084               	movwf	4
  2137  00F6  118A  202B  118A   	fcall	stringdir
  2138  00F9  00B0               	movwf	??_printf
  2139  00FA  0830               	movf	??_printf,w
  2140  00FB  00B9               	movwf	printf@c
  2141  00FC  0839               	movf	printf@c,w
  2142  00FD  1903               	btfsc	3,2
  2143  00FE  0008               	return
  2144                           
  2145                           ;doprnt.c: 538: if(c != '%')
  2146  00FF  3025               	movlw	37
  2147  0100  0639               	xorwf	printf@c,w
  2148  0101  1903               	btfsc	3,2
  2149  0102  2908               	goto	l1654
  2150                           
  2151                           ;doprnt.c: 540: {
  2152                           ;doprnt.c: 541: (putch(c) );
  2153  0103  0839               	movf	printf@c,w
  2154  0104  118A  263B  118A   	fcall	_putch
  2155                           
  2156                           ;doprnt.c: 542: continue;
  2157  0107  28EF               	goto	l1694
  2158  0108                     l1654:	
  2159                           
  2160                           ;doprnt.c: 543: }
  2161                           ;doprnt.c: 548: flag = 0;
  2162  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0109  1303               	bcf	3,6	;RP1=0, select bank0
  2164  010A  01B4               	clrf	printf@flag
  2165                           
  2166                           ;doprnt.c: 822: }
  2167                           
  2168                           ;doprnt.c: 813: continue;
  2169                           
  2170                           ;doprnt.c: 802: default:
  2171                           
  2172                           ;doprnt.c: 698: case 'i':
  2173                           ;doprnt.c: 699: break;
  2174                           
  2175                           ;doprnt.c: 697: case 'd':
  2176                           
  2177                           ;doprnt.c: 638: goto alldone;
  2178                           
  2179                           ;doprnt.c: 637: case 0:
  2180                           
  2181                           ;doprnt.c: 635: switch(c = *f++) {
  2182  010B  3001               	movlw	1
  2183  010C  07B8               	addwf	printf@f,f
  2184  010D  30FF               	movlw	-1
  2185  010E  0738               	addwf	printf@f,w
  2186  010F  0084               	movwf	4
  2187  0110  118A  202B  118A   	fcall	stringdir
  2188  0113  00B9               	movwf	printf@c
  2189                           
  2190                           ; Switch size 1, requested type "space"
  2191                           ; Number of cases is 3, Range of values is 0 to 105
  2192                           ; switch strategies available:
  2193                           ; Name         Instructions Cycles
  2194                           ; simple_byte           10     6 (average)
  2195                           ; direct_byte          219     7 (fixed)
  2196                           ; jumptable            260     6 (fixed)
  2197                           ;	Chosen strategy is simple_byte
  2198  0114  3A00               	xorlw	0	; case 0
  2199  0115  1903               	skipnz
  2200  0116  299C               	goto	l235
  2201  0117  3A64               	xorlw	100	; case 100
  2202  0118  1903               	skipnz
  2203  0119  291E               	goto	l1660
  2204  011A  3A0D               	xorlw	13	; case 105
  2205  011B  1903               	skipnz
  2206  011C  291E               	goto	l1660
  2207  011D  28EF               	goto	l1694
  2208  011E                     l1660:	
  2209                           
  2210                           ;doprnt.c: 1253: {
  2211                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2212  011E  0833               	movf	printf@ap,w
  2213  011F  0084               	movwf	4
  2214  0120  1383               	bcf	3,7	;select IRP bank0
  2215  0121  0800               	movf	0,w
  2216  0122  00B6               	movwf	printf@val
  2217  0123  0A84               	incf	4,f
  2218  0124  0800               	movf	0,w
  2219  0125  00B7               	movwf	printf@val+1
  2220  0126  3002               	movlw	2
  2221  0127  00B0               	movwf	??_printf
  2222  0128  0830               	movf	??_printf,w
  2223  0129  07B3               	addwf	printf@ap,f
  2224                           
  2225                           ;doprnt.c: 1261: if((int)val < 0) {
  2226  012A  1FB7               	btfss	printf@val+1,7
  2227  012B  2935               	goto	l1670
  2228                           
  2229                           ;doprnt.c: 1262: flag |= 0x03;
  2230  012C  3003               	movlw	3
  2231  012D  00B0               	movwf	??_printf
  2232  012E  0830               	movf	??_printf,w
  2233  012F  04B4               	iorwf	printf@flag,f
  2234                           
  2235                           ;doprnt.c: 1263: val = -val;
  2236  0130  09B6               	comf	printf@val,f
  2237  0131  09B7               	comf	printf@val+1,f
  2238  0132  0AB6               	incf	printf@val,f
  2239  0133  1903               	skipnz
  2240  0134  0AB7               	incf	printf@val+1,f
  2241  0135                     l1670:	
  2242                           
  2243                           ;doprnt.c: 1264: }
  2244                           ;doprnt.c: 1266: }
  2245                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2246  0135  01B9               	clrf	printf@c
  2247  0136  0AB9               	incf	printf@c,f
  2248  0137  3005               	movlw	5
  2249  0138  0639               	xorwf	printf@c,w
  2250  0139  1903               	btfsc	3,2
  2251  013A  2958               	goto	l1682
  2252  013B                     l1676:	
  2253                           
  2254                           ;doprnt.c: 1306: if(val < dpowers[c])
  2255  013B  0839               	movf	printf@c,w
  2256  013C  00B0               	movwf	??_printf
  2257  013D  0730               	addwf	??_printf,w
  2258  013E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2259  013F  0084               	movwf	4
  2260  0140  118A  202B  118A   	fcall	stringdir
  2261  0143  00B1               	movwf	??_printf+1
  2262  0144  118A  202B  118A   	fcall	stringdir
  2263  0147  00B2               	movwf	??_printf+2
  2264  0148  0832               	movf	??_printf+2,w
  2265  0149  0237               	subwf	printf@val+1,w
  2266  014A  1D03               	skipz
  2267  014B  294E               	goto	u1545
  2268  014C  0831               	movf	??_printf+1,w
  2269  014D  0236               	subwf	printf@val,w
  2270  014E                     u1545:	
  2271  014E  1C03               	btfss	3,0
  2272  014F  2958               	goto	l1682
  2273                           
  2274                           ;doprnt.c: 1307: break;
  2275  0150  3001               	movlw	1
  2276  0151  00B0               	movwf	??_printf
  2277  0152  0830               	movf	??_printf,w
  2278  0153  07B9               	addwf	printf@c,f
  2279  0154  3005               	movlw	5
  2280  0155  0639               	xorwf	printf@c,w
  2281  0156  1D03               	btfss	3,2
  2282  0157  293B               	goto	l1676
  2283  0158                     l1682:	
  2284                           
  2285                           ;doprnt.c: 1422: {
  2286                           ;doprnt.c: 1438: if(flag & 0x03)
  2287  0158  0834               	movf	printf@flag,w
  2288  0159  3903               	andlw	3
  2289  015A  1903               	btfsc	3,2
  2290  015B  2960               	goto	l1686
  2291                           
  2292                           ;doprnt.c: 1439: (putch('-') );
  2293  015C  302D               	movlw	45
  2294  015D  118A  263B  118A   	fcall	_putch
  2295  0160                     l1686:	
  2296                           
  2297                           ;doprnt.c: 1469: }
  2298                           ;doprnt.c: 1472: prec = c;
  2299  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0162  0839               	movf	printf@c,w
  2302  0163  00B0               	movwf	??_printf
  2303  0164  0830               	movf	??_printf,w
  2304  0165  00B5               	movwf	printf@prec
  2305  0166                     l1692:	
  2306                           ;doprnt.c: 1474: while(prec--) {
  2307                           
  2308  0166  30FF               	movlw	255
  2309  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0169  00B0               	movwf	??_printf
  2312  016A  0830               	movf	??_printf,w
  2313  016B  07B5               	addwf	printf@prec,f
  2314  016C  0A35               	incf	printf@prec,w
  2315  016D  1903               	btfsc	3,2
  2316  016E  28EF               	goto	l1694
  2317                           
  2318                           ;doprnt.c: 1478: {
  2319                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2320  016F  300A               	movlw	10
  2321  0170  00A4               	movwf	___lwmod@divisor
  2322  0171  3000               	movlw	0
  2323  0172  00A5               	movwf	___lwmod@divisor+1
  2324  0173  0835               	movf	printf@prec,w
  2325  0174  00B0               	movwf	??_printf
  2326  0175  0730               	addwf	??_printf,w
  2327  0176  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2328  0177  0084               	movwf	4
  2329  0178  118A  202B  118A   	fcall	stringdir
  2330  017B  00F4               	movwf	___lwdiv@divisor
  2331  017C  118A  202B  118A   	fcall	stringdir
  2332  017F  00F5               	movwf	___lwdiv@divisor+1
  2333  0180  0837               	movf	printf@val+1,w
  2334  0181  00F7               	movwf	___lwdiv@dividend+1
  2335  0182  0836               	movf	printf@val,w
  2336  0183  00F6               	movwf	___lwdiv@dividend
  2337  0184  118A  23A4  118A   	fcall	___lwdiv
  2338  0187  0875               	movf	?___lwdiv+1,w
  2339  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2341  018A  00A7               	movwf	___lwmod@dividend+1
  2342  018B  0874               	movf	?___lwdiv,w
  2343  018C  00A6               	movwf	___lwmod@dividend
  2344  018D  118A  24C6  118A   	fcall	___lwmod
  2345  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0192  0824               	movf	?___lwmod,w
  2348  0193  3E30               	addlw	48
  2349  0194  00B1               	movwf	??_printf+1
  2350  0195  0831               	movf	??_printf+1,w
  2351  0196  00B9               	movwf	printf@c
  2352                           
  2353                           ;doprnt.c: 1523: }
  2354                           ;doprnt.c: 1524: (putch(c) );
  2355  0197  0839               	movf	printf@c,w
  2356  0198  118A  263B  118A   	fcall	_putch
  2357  019B  2966               	goto	l1692
  2358  019C                     l235:	
  2359                           ;doprnt.c: 1540: return 0;
  2360                           ;	Return value of _printf is never used
  2361                           
  2362                           ;doprnt.c: 1525: }
  2363                           ;doprnt.c: 1533: }
  2364                           ;doprnt.c: 1535: alldone:
  2365                           
  2366  019C  0008               	return
  2367  019D                     __end_of_printf:	
  2368                           
  2369                           	psect	text11
  2370  063B                     __ptext11:	
  2371 ;; *************** function _putch *****************
  2372 ;; Defined at:
  2373 ;;		line 21 in file "main.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  data            1    wreg     unsigned char 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  data            1    4[COMMON] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		wreg
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         0       0       0       0
  2388 ;;      Locals:         1       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         1       0       0       0
  2391 ;;Total ram usage:        1 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_printf
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _putch
  2403  063B                     _putch:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _putch: [wreg]
  2407                           ;putch@data stored from wreg
  2408  063B  00F4               	movwf	putch@data
  2409  063C                     l34:	
  2410                           ;main.c: 23: continue;
  2411                           
  2412                           ;main.c: 22: while( ! TXIF)
  2413                           
  2414  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2415  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2416  063E  1E0C               	btfss	12,4	;volatile
  2417  063F  2E3C               	goto	l34
  2418                           
  2419                           ;main.c: 24: TXREG = data;
  2420  0640  0874               	movf	putch@data,w
  2421  0641  0099               	movwf	25	;volatile
  2422  0642  0008               	return
  2423  0643                     __end_of_putch:	
  2424                           
  2425                           	psect	text12
  2426  04C6                     __ptext12:	
  2427 ;; *************** function ___lwmod *****************
  2428 ;; Defined at:
  2429 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwmod.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  divisor         2    4[BANK0 ] unsigned int 
  2432 ;;  dividend        2    6[BANK0 ] unsigned int 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  counter         1    9[BANK0 ] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2    4[BANK0 ] unsigned int 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2444 ;;      Params:         0       4       0       0
  2445 ;;      Locals:         0       1       0       0
  2446 ;;      Temps:          0       1       0       0
  2447 ;;      Totals:         0       6       0       0
  2448 ;;Total ram usage:        6 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_printf
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function ___lwmod
  2460  04C6                     ___lwmod:	
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2464  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2465  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2466  04C8  0824               	movf	___lwmod@divisor,w
  2467  04C9  0425               	iorwf	___lwmod@divisor+1,w
  2468  04CA  1903               	btfsc	3,2
  2469  04CB  2CF5               	goto	l1644
  2470  04CC  01A9               	clrf	___lwmod@counter
  2471  04CD  0AA9               	incf	___lwmod@counter,f
  2472  04CE                     l1634:	
  2473  04CE  1BA5               	btfsc	___lwmod@divisor+1,7
  2474  04CF  2CDC               	goto	l1636
  2475  04D0  3001               	movlw	1
  2476  04D1                     u1465:	
  2477  04D1  1003               	clrc
  2478  04D2  0DA4               	rlf	___lwmod@divisor,f
  2479  04D3  0DA5               	rlf	___lwmod@divisor+1,f
  2480  04D4  3EFF               	addlw	-1
  2481  04D5  1D03               	skipz
  2482  04D6  2CD1               	goto	u1465
  2483  04D7  3001               	movlw	1
  2484  04D8  00A8               	movwf	??___lwmod
  2485  04D9  0828               	movf	??___lwmod,w
  2486  04DA  07A9               	addwf	___lwmod@counter,f
  2487  04DB  2CCE               	goto	l1634
  2488  04DC                     l1636:	
  2489  04DC  0825               	movf	___lwmod@divisor+1,w
  2490  04DD  0227               	subwf	___lwmod@dividend+1,w
  2491  04DE  1D03               	skipz
  2492  04DF  2CE2               	goto	u1485
  2493  04E0  0824               	movf	___lwmod@divisor,w
  2494  04E1  0226               	subwf	___lwmod@dividend,w
  2495  04E2                     u1485:	
  2496  04E2  1C03               	skipc
  2497  04E3  2CEA               	goto	l1640
  2498  04E4  0824               	movf	___lwmod@divisor,w
  2499  04E5  02A6               	subwf	___lwmod@dividend,f
  2500  04E6  0825               	movf	___lwmod@divisor+1,w
  2501  04E7  1C03               	skipc
  2502  04E8  03A7               	decf	___lwmod@dividend+1,f
  2503  04E9  02A7               	subwf	___lwmod@dividend+1,f
  2504  04EA                     l1640:	
  2505  04EA  3001               	movlw	1
  2506  04EB                     u1495:	
  2507  04EB  1003               	clrc
  2508  04EC  0CA5               	rrf	___lwmod@divisor+1,f
  2509  04ED  0CA4               	rrf	___lwmod@divisor,f
  2510  04EE  3EFF               	addlw	-1
  2511  04EF  1D03               	skipz
  2512  04F0  2CEB               	goto	u1495
  2513  04F1  3001               	movlw	1
  2514  04F2  02A9               	subwf	___lwmod@counter,f
  2515  04F3  1D03               	btfss	3,2
  2516  04F4  2CDC               	goto	l1636
  2517  04F5                     l1644:	
  2518  04F5  0827               	movf	___lwmod@dividend+1,w
  2519  04F6  00A5               	movwf	?___lwmod+1
  2520  04F7  0826               	movf	___lwmod@dividend,w
  2521  04F8  00A4               	movwf	?___lwmod
  2522  04F9  0008               	return
  2523  04FA                     __end_of___lwmod:	
  2524                           
  2525                           	psect	text13
  2526  03A4                     __ptext13:	
  2527 ;; *************** function ___lwdiv *****************
  2528 ;; Defined at:
  2529 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  divisor         2    4[COMMON] unsigned int 
  2532 ;;  dividend        2    6[COMMON] unsigned int 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  quotient        2    2[BANK0 ] unsigned int 
  2535 ;;  counter         1    1[BANK0 ] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  2    4[COMMON] unsigned int 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2545 ;;      Params:         4       0       0       0
  2546 ;;      Locals:         0       3       0       0
  2547 ;;      Temps:          0       1       0       0
  2548 ;;      Totals:         4       4       0       0
  2549 ;;Total ram usage:        8 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_printf
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function ___lwdiv
  2561  03A4                     ___lwdiv:	
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2565  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2566  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2567  03A6  01A2               	clrf	___lwdiv@quotient
  2568  03A7  01A3               	clrf	___lwdiv@quotient+1
  2569  03A8  0874               	movf	___lwdiv@divisor,w
  2570  03A9  0475               	iorwf	___lwdiv@divisor+1,w
  2571  03AA  1903               	btfsc	3,2
  2572  03AB  2BDD               	goto	l1622
  2573  03AC  01A1               	clrf	___lwdiv@counter
  2574  03AD  0AA1               	incf	___lwdiv@counter,f
  2575  03AE                     l1610:	
  2576  03AE  1BF5               	btfsc	___lwdiv@divisor+1,7
  2577  03AF  2BBC               	goto	l1612
  2578  03B0  3001               	movlw	1
  2579  03B1                     u1395:	
  2580  03B1  1003               	clrc
  2581  03B2  0DF4               	rlf	___lwdiv@divisor,f
  2582  03B3  0DF5               	rlf	___lwdiv@divisor+1,f
  2583  03B4  3EFF               	addlw	-1
  2584  03B5  1D03               	skipz
  2585  03B6  2BB1               	goto	u1395
  2586  03B7  3001               	movlw	1
  2587  03B8  00A0               	movwf	??___lwdiv
  2588  03B9  0820               	movf	??___lwdiv,w
  2589  03BA  07A1               	addwf	___lwdiv@counter,f
  2590  03BB  2BAE               	goto	l1610
  2591  03BC                     l1612:	
  2592  03BC  3001               	movlw	1
  2593  03BD                     u1415:	
  2594  03BD  1003               	clrc
  2595  03BE  0DA2               	rlf	___lwdiv@quotient,f
  2596  03BF  0DA3               	rlf	___lwdiv@quotient+1,f
  2597  03C0  3EFF               	addlw	-1
  2598  03C1  1D03               	skipz
  2599  03C2  2BBD               	goto	u1415
  2600  03C3  0875               	movf	___lwdiv@divisor+1,w
  2601  03C4  0277               	subwf	___lwdiv@dividend+1,w
  2602  03C5  1D03               	skipz
  2603  03C6  2BC9               	goto	u1425
  2604  03C7  0874               	movf	___lwdiv@divisor,w
  2605  03C8  0276               	subwf	___lwdiv@dividend,w
  2606  03C9                     u1425:	
  2607  03C9  1C03               	skipc
  2608  03CA  2BD2               	goto	l1618
  2609  03CB  0874               	movf	___lwdiv@divisor,w
  2610  03CC  02F6               	subwf	___lwdiv@dividend,f
  2611  03CD  0875               	movf	___lwdiv@divisor+1,w
  2612  03CE  1C03               	skipc
  2613  03CF  03F7               	decf	___lwdiv@dividend+1,f
  2614  03D0  02F7               	subwf	___lwdiv@dividend+1,f
  2615  03D1  1422               	bsf	___lwdiv@quotient,0
  2616  03D2                     l1618:	
  2617  03D2  3001               	movlw	1
  2618  03D3                     u1435:	
  2619  03D3  1003               	clrc
  2620  03D4  0CF5               	rrf	___lwdiv@divisor+1,f
  2621  03D5  0CF4               	rrf	___lwdiv@divisor,f
  2622  03D6  3EFF               	addlw	-1
  2623  03D7  1D03               	skipz
  2624  03D8  2BD3               	goto	u1435
  2625  03D9  3001               	movlw	1
  2626  03DA  02A1               	subwf	___lwdiv@counter,f
  2627  03DB  1D03               	btfss	3,2
  2628  03DC  2BBC               	goto	l1612
  2629  03DD                     l1622:	
  2630  03DD  0823               	movf	___lwdiv@quotient+1,w
  2631  03DE  00F5               	movwf	?___lwdiv+1
  2632  03DF  0822               	movf	___lwdiv@quotient,w
  2633  03E0  00F4               	movwf	?___lwdiv
  2634  03E1  0008               	return
  2635  03E2                     __end_of___lwdiv:	
  2636                           
  2637                           	psect	text14
  2638  0490                     __ptext14:	
  2639 ;; *************** function _get_voltage *****************
  2640 ;; Defined at:
  2641 ;;		line 139 in file "main.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  keyCode         4   25[BANK0 ] unsigned long 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  4   25[BANK0 ] unsigned long 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2655 ;;      Params:         0       4       0       0
  2656 ;;      Locals:         0       0       0       0
  2657 ;;      Temps:          0       0       0       0
  2658 ;;      Totals:         0       4       0       0
  2659 ;;Total ram usage:        4 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    2
  2662 ;; This function calls:
  2663 ;;		___lldiv
  2664 ;;		___lmul
  2665 ;; This function is called by:
  2666 ;;		_play
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _get_voltage
  2672  0490                     _get_voltage:	
  2673                           
  2674                           ;main.c: 151: return (keyCode * 1502) / (key_count-1);
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _get_voltage: [wreg+status,2+status,0+pclath+cstack]
  2678  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0492  084C               	movf	_key_count,w
  2681  0493  3EFF               	addlw	255
  2682  0494  00AC               	movwf	___lldiv@divisor
  2683  0495  084D               	movf	_key_count+1,w
  2684  0496  1803               	skipnc
  2685  0497  3E01               	addlw	1
  2686  0498  3EFF               	addlw	255
  2687  0499  00AD               	movwf	___lldiv@divisor+1
  2688  049A  01AE               	clrf	___lldiv@divisor+2
  2689  049B  01AF               	clrf	___lldiv@divisor+3
  2690  049C  083C               	movf	get_voltage@keyCode+3,w
  2691  049D  00A3               	movwf	___lmul@multiplier+3
  2692  049E  083B               	movf	get_voltage@keyCode+2,w
  2693  049F  00A2               	movwf	___lmul@multiplier+2
  2694  04A0  083A               	movf	get_voltage@keyCode+1,w
  2695  04A1  00A1               	movwf	___lmul@multiplier+1
  2696  04A2  0839               	movf	get_voltage@keyCode,w
  2697  04A3  00A0               	movwf	___lmul@multiplier
  2698  04A4  3000               	movlw	0
  2699  04A5  00A7               	movwf	___lmul@multiplicand+3
  2700  04A6  3000               	movlw	0
  2701  04A7  00A6               	movwf	___lmul@multiplicand+2
  2702  04A8  3005               	movlw	5
  2703  04A9  00A5               	movwf	___lmul@multiplicand+1
  2704  04AA  30DE               	movlw	222
  2705  04AB  00A4               	movwf	___lmul@multiplicand
  2706  04AC  118A  2363  118A   	fcall	___lmul
  2707  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2708  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2709  04B1  0823               	movf	?___lmul+3,w
  2710  04B2  00B3               	movwf	___lldiv@dividend+3
  2711  04B3  0822               	movf	?___lmul+2,w
  2712  04B4  00B2               	movwf	___lldiv@dividend+2
  2713  04B5  0821               	movf	?___lmul+1,w
  2714  04B6  00B1               	movwf	___lldiv@dividend+1
  2715  04B7  0820               	movf	?___lmul,w
  2716  04B8  00B0               	movwf	___lldiv@dividend
  2717  04B9  118A  2303         	fcall	___lldiv
  2718  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2719  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2720  04BD  082F               	movf	?___lldiv+3,w
  2721  04BE  00BC               	movwf	?_get_voltage+3
  2722  04BF  082E               	movf	?___lldiv+2,w
  2723  04C0  00BB               	movwf	?_get_voltage+2
  2724  04C1  082D               	movf	?___lldiv+1,w
  2725  04C2  00BA               	movwf	?_get_voltage+1
  2726  04C3  082C               	movf	?___lldiv,w
  2727  04C4  00B9               	movwf	?_get_voltage
  2728  04C5  0008               	return
  2729  04C6                     __end_of_get_voltage:	
  2730                           
  2731                           	psect	text15
  2732  0363                     __ptext15:	
  2733 ;; *************** function ___lmul *****************
  2734 ;; Defined at:
  2735 ;;		line 15 in file "/Applications/microchip/xc8/v1.34/sources/common/Umul32.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2738 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  product         4    8[BANK0 ] unsigned long 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  4    0[BANK0 ] unsigned long 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2750 ;;      Params:         0       8       0       0
  2751 ;;      Locals:         0       4       0       0
  2752 ;;      Temps:          1       0       0       0
  2753 ;;      Totals:         1      12       0       0
  2754 ;;Total ram usage:       13 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_get_voltage
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function ___lmul
  2766  0363                     ___lmul:	
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2770  0363  3000               	movlw	0
  2771  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0366  00AB               	movwf	___lmul@product+3
  2774  0367  3000               	movlw	0
  2775  0368  00AA               	movwf	___lmul@product+2
  2776  0369  3000               	movlw	0
  2777  036A  00A9               	movwf	___lmul@product+1
  2778  036B  3000               	movlw	0
  2779  036C  00A8               	movwf	___lmul@product
  2780  036D                     l1698:	
  2781  036D  1C20               	btfss	___lmul@multiplier,0
  2782  036E  2B83               	goto	l1702
  2783  036F  0824               	movf	___lmul@multiplicand,w
  2784  0370  07A8               	addwf	___lmul@product,f
  2785  0371  0825               	movf	___lmul@multiplicand+1,w
  2786  0372  1103               	clrz
  2787  0373  1803               	skipnc
  2788  0374  3E01               	addlw	1
  2789  0375  1D03               	btfss	3,2
  2790  0376  07A9               	addwf	___lmul@product+1,f
  2791  0377  0826               	movf	___lmul@multiplicand+2,w
  2792  0378  1103               	clrz
  2793  0379  1803               	skipnc
  2794  037A  3E01               	addlw	1
  2795  037B  1D03               	btfss	3,2
  2796  037C  07AA               	addwf	___lmul@product+2,f
  2797  037D  0827               	movf	___lmul@multiplicand+3,w
  2798  037E  1103               	clrz
  2799  037F  1803               	skipnc
  2800  0380  3E01               	addlw	1
  2801  0381  1D03               	btfss	3,2
  2802  0382  07AB               	addwf	___lmul@product+3,f
  2803  0383                     l1702:	
  2804  0383  3001               	movlw	1
  2805  0384  00F4               	movwf	??___lmul
  2806  0385                     u1615:	
  2807  0385  1003               	clrc
  2808  0386  0DA4               	rlf	___lmul@multiplicand,f
  2809  0387  0DA5               	rlf	___lmul@multiplicand+1,f
  2810  0388  0DA6               	rlf	___lmul@multiplicand+2,f
  2811  0389  0DA7               	rlf	___lmul@multiplicand+3,f
  2812  038A  0BF4               	decfsz	??___lmul,f
  2813  038B  2B85               	goto	u1615
  2814  038C  3001               	movlw	1
  2815  038D                     u1625:	
  2816  038D  1003               	clrc
  2817  038E  0CA3               	rrf	___lmul@multiplier+3,f
  2818  038F  0CA2               	rrf	___lmul@multiplier+2,f
  2819  0390  0CA1               	rrf	___lmul@multiplier+1,f
  2820  0391  0CA0               	rrf	___lmul@multiplier,f
  2821  0392  3EFF               	addlw	-1
  2822  0393  1D03               	skipz
  2823  0394  2B8D               	goto	u1625
  2824  0395  0823               	movf	___lmul@multiplier+3,w
  2825  0396  0422               	iorwf	___lmul@multiplier+2,w
  2826  0397  0421               	iorwf	___lmul@multiplier+1,w
  2827  0398  0420               	iorwf	___lmul@multiplier,w
  2828  0399  1D03               	skipz
  2829  039A  2B6D               	goto	l1698
  2830  039B  082B               	movf	___lmul@product+3,w
  2831  039C  00A3               	movwf	?___lmul+3
  2832  039D  082A               	movf	___lmul@product+2,w
  2833  039E  00A2               	movwf	?___lmul+2
  2834  039F  0829               	movf	___lmul@product+1,w
  2835  03A0  00A1               	movwf	?___lmul+1
  2836  03A1  0828               	movf	___lmul@product,w
  2837  03A2  00A0               	movwf	?___lmul
  2838  03A3  0008               	return
  2839  03A4                     __end_of___lmul:	
  2840                           
  2841                           	psect	text16
  2842  0303                     __ptext16:	
  2843 ;; *************** function ___lldiv *****************
  2844 ;; Defined at:
  2845 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lldiv.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  divisor         4   12[BANK0 ] unsigned long 
  2848 ;;  dividend        4   16[BANK0 ] unsigned long 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  quotient        4   20[BANK0 ] unsigned long 
  2851 ;;  counter         1   24[BANK0 ] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  4   12[BANK0 ] unsigned long 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2861 ;;      Params:         0       8       0       0
  2862 ;;      Locals:         0       5       0       0
  2863 ;;      Temps:          1       0       0       0
  2864 ;;      Totals:         1      13       0       0
  2865 ;;Total ram usage:       14 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_get_voltage
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function ___lldiv
  2877  0303                     ___lldiv:	
  2878                           
  2879                           ;incstack = 0
  2880                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2881  0303  3000               	movlw	0
  2882  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0306  00B7               	movwf	___lldiv@quotient+3
  2885  0307  3000               	movlw	0
  2886  0308  00B6               	movwf	___lldiv@quotient+2
  2887  0309  3000               	movlw	0
  2888  030A  00B5               	movwf	___lldiv@quotient+1
  2889  030B  3000               	movlw	0
  2890  030C  00B4               	movwf	___lldiv@quotient
  2891  030D  082F               	movf	___lldiv@divisor+3,w
  2892  030E  042E               	iorwf	___lldiv@divisor+2,w
  2893  030F  042D               	iorwf	___lldiv@divisor+1,w
  2894  0310  042C               	iorwf	___lldiv@divisor,w
  2895  0311  1903               	skipnz
  2896  0312  2B5A               	goto	l1334
  2897  0313  01B8               	clrf	___lldiv@counter
  2898  0314  0AB8               	incf	___lldiv@counter,f
  2899  0315                     l1320:	
  2900  0315  1BAF               	btfsc	___lldiv@divisor+3,7
  2901  0316  2B25               	goto	l1322
  2902  0317  3001               	movlw	1
  2903  0318  00F5               	movwf	??___lldiv
  2904  0319                     u1035:	
  2905  0319  1003               	clrc
  2906  031A  0DAC               	rlf	___lldiv@divisor,f
  2907  031B  0DAD               	rlf	___lldiv@divisor+1,f
  2908  031C  0DAE               	rlf	___lldiv@divisor+2,f
  2909  031D  0DAF               	rlf	___lldiv@divisor+3,f
  2910  031E  0BF5               	decfsz	??___lldiv,f
  2911  031F  2B19               	goto	u1035
  2912  0320  3001               	movlw	1
  2913  0321  00F5               	movwf	??___lldiv
  2914  0322  0875               	movf	??___lldiv,w
  2915  0323  07B8               	addwf	___lldiv@counter,f
  2916  0324  2B15               	goto	l1320
  2917  0325                     l1322:	
  2918  0325  3001               	movlw	1
  2919  0326  00F5               	movwf	??___lldiv
  2920  0327                     u1055:	
  2921  0327  1003               	clrc
  2922  0328  0DB4               	rlf	___lldiv@quotient,f
  2923  0329  0DB5               	rlf	___lldiv@quotient+1,f
  2924  032A  0DB6               	rlf	___lldiv@quotient+2,f
  2925  032B  0DB7               	rlf	___lldiv@quotient+3,f
  2926  032C  0BF5               	decfsz	??___lldiv,f
  2927  032D  2B27               	goto	u1055
  2928  032E  082F               	movf	___lldiv@divisor+3,w
  2929  032F  0233               	subwf	___lldiv@dividend+3,w
  2930  0330  1D03               	skipz
  2931  0331  2B3C               	goto	u1065
  2932  0332  082E               	movf	___lldiv@divisor+2,w
  2933  0333  0232               	subwf	___lldiv@dividend+2,w
  2934  0334  1D03               	skipz
  2935  0335  2B3C               	goto	u1065
  2936  0336  082D               	movf	___lldiv@divisor+1,w
  2937  0337  0231               	subwf	___lldiv@dividend+1,w
  2938  0338  1D03               	skipz
  2939  0339  2B3C               	goto	u1065
  2940  033A  082C               	movf	___lldiv@divisor,w
  2941  033B  0230               	subwf	___lldiv@dividend,w
  2942  033C                     u1065:	
  2943  033C  1C03               	skipc
  2944  033D  2B4D               	goto	l1330
  2945  033E  082C               	movf	___lldiv@divisor,w
  2946  033F  02B0               	subwf	___lldiv@dividend,f
  2947  0340  082D               	movf	___lldiv@divisor+1,w
  2948  0341  1C03               	skipc
  2949  0342  0F2D               	incfsz	___lldiv@divisor+1,w
  2950  0343  02B1               	subwf	___lldiv@dividend+1,f
  2951  0344  082E               	movf	___lldiv@divisor+2,w
  2952  0345  1C03               	skipc
  2953  0346  0F2E               	incfsz	___lldiv@divisor+2,w
  2954  0347  02B2               	subwf	___lldiv@dividend+2,f
  2955  0348  082F               	movf	___lldiv@divisor+3,w
  2956  0349  1C03               	skipc
  2957  034A  0F2F               	incfsz	___lldiv@divisor+3,w
  2958  034B  02B3               	subwf	___lldiv@dividend+3,f
  2959  034C  1434               	bsf	___lldiv@quotient,0
  2960  034D                     l1330:	
  2961  034D  3001               	movlw	1
  2962  034E                     u1075:	
  2963  034E  1003               	clrc
  2964  034F  0CAF               	rrf	___lldiv@divisor+3,f
  2965  0350  0CAE               	rrf	___lldiv@divisor+2,f
  2966  0351  0CAD               	rrf	___lldiv@divisor+1,f
  2967  0352  0CAC               	rrf	___lldiv@divisor,f
  2968  0353  3EFF               	addlw	-1
  2969  0354  1D03               	skipz
  2970  0355  2B4E               	goto	u1075
  2971  0356  3001               	movlw	1
  2972  0357  02B8               	subwf	___lldiv@counter,f
  2973  0358  1D03               	btfss	3,2
  2974  0359  2B25               	goto	l1322
  2975  035A                     l1334:	
  2976  035A  0837               	movf	___lldiv@quotient+3,w
  2977  035B  00AF               	movwf	?___lldiv+3
  2978  035C  0836               	movf	___lldiv@quotient+2,w
  2979  035D  00AE               	movwf	?___lldiv+2
  2980  035E  0835               	movf	___lldiv@quotient+1,w
  2981  035F  00AD               	movwf	?___lldiv+1
  2982  0360  0834               	movf	___lldiv@quotient,w
  2983  0361  00AC               	movwf	?___lldiv
  2984  0362  0008               	return
  2985  0363                     __end_of___lldiv:	
  2986                           
  2987                           	psect	text17
  2988  019D                     __ptext17:	
  2989 ;; *************** function _checkKey *****************
  2990 ;; Defined at:
  2991 ;;		line 111 in file "main.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  keyVal          1    wreg     unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  keyVal          1    6[COMMON] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3005 ;;      Params:         0       0       0       0
  3006 ;;      Locals:         1       0       0       0
  3007 ;;      Temps:          2       0       0       0
  3008 ;;      Totals:         3       0       0       0
  3009 ;;Total ram usage:        3 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_tuningCheck
  3016 ;;		_tune
  3017 ;;		_play
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _checkKey
  3023  019D                     _checkKey:	
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _checkKey: [wreg+status,2+status,0]
  3027                           ;checkKey@keyVal stored from wreg
  3028  019D  00F6               	movwf	checkKey@keyVal
  3029                           
  3030                           ;main.c: 112: keyVal = (key_count - keyVal - 1);
  3031  019E  0876               	movf	checkKey@keyVal,w
  3032  019F  3E01               	addlw	1
  3033  01A0  3AFF               	xorlw	255
  3034  01A1  3E01               	addlw	1
  3035  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3036  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3037  01A4  074C               	addwf	_key_count,w
  3038  01A5  00F4               	movwf	??_checkKey
  3039  01A6  0874               	movf	??_checkKey,w
  3040  01A7  00F6               	movwf	checkKey@keyVal
  3041                           
  3042                           ;main.c: 113: if (keyVal <= 15) {
  3043  01A8  3010               	movlw	16
  3044  01A9  0276               	subwf	checkKey@keyVal,w
  3045  01AA  1803               	skipnc
  3046  01AB  29F8               	goto	l1384
  3047                           
  3048                           ;main.c: 114: PORTAbits.RA2 = (keyVal >> 0) & 1;
  3049  01AC  0876               	movf	checkKey@keyVal,w
  3050  01AD  3901               	andlw	1
  3051  01AE  00F4               	movwf	??_checkKey
  3052  01AF  0DF4               	rlf	??_checkKey,f
  3053  01B0  0DF4               	rlf	??_checkKey,f
  3054  01B1  0805               	movf	5,w	;volatile
  3055  01B2  0674               	xorwf	??_checkKey,w
  3056  01B3  39FB               	andlw	-5
  3057  01B4  0674               	xorwf	??_checkKey,w
  3058  01B5  0085               	movwf	5	;volatile
  3059                           
  3060                           ;main.c: 115: PORTCbits.RC0 = (keyVal >> 1) & 1;
  3061  01B6  0876               	movf	checkKey@keyVal,w
  3062  01B7  00F4               	movwf	??_checkKey
  3063  01B8  3001               	movlw	1
  3064  01B9                     u1145:	
  3065  01B9  1003               	clrc
  3066  01BA  0CF4               	rrf	??_checkKey,f
  3067  01BB  3EFF               	addlw	-1
  3068  01BC  1D03               	skipz
  3069  01BD  29B9               	goto	u1145
  3070  01BE  3001               	movlw	1
  3071  01BF  0574               	andwf	??_checkKey,w
  3072  01C0  00F5               	movwf	??_checkKey+1
  3073  01C1  0807               	movf	7,w	;volatile
  3074  01C2  0675               	xorwf	??_checkKey+1,w
  3075  01C3  39FE               	andlw	-2
  3076  01C4  0675               	xorwf	??_checkKey+1,w
  3077  01C5  0087               	movwf	7	;volatile
  3078                           
  3079                           ;main.c: 116: PORTCbits.RC1 = (keyVal >> 2) & 1;
  3080  01C6  0876               	movf	checkKey@keyVal,w
  3081  01C7  00F4               	movwf	??_checkKey
  3082  01C8  3002               	movlw	2
  3083  01C9                     u1155:	
  3084  01C9  1003               	clrc
  3085  01CA  0CF4               	rrf	??_checkKey,f
  3086  01CB  3EFF               	addlw	-1
  3087  01CC  1D03               	skipz
  3088  01CD  29C9               	goto	u1155
  3089  01CE  0874               	movf	??_checkKey,w
  3090  01CF  3901               	andlw	1
  3091  01D0  00F5               	movwf	??_checkKey+1
  3092  01D1  0DF5               	rlf	??_checkKey+1,f
  3093  01D2  0807               	movf	7,w	;volatile
  3094  01D3  0675               	xorwf	??_checkKey+1,w
  3095  01D4  39FD               	andlw	-3
  3096  01D5  0675               	xorwf	??_checkKey+1,w
  3097  01D6  0087               	movwf	7	;volatile
  3098                           
  3099                           ;main.c: 117: PORTCbits.RC2 = (keyVal >> 3) & 1;
  3100  01D7  0876               	movf	checkKey@keyVal,w
  3101  01D8  00F4               	movwf	??_checkKey
  3102  01D9  3003               	movlw	3
  3103  01DA                     u1165:	
  3104  01DA  1003               	clrc
  3105  01DB  0CF4               	rrf	??_checkKey,f
  3106  01DC  3EFF               	addlw	-1
  3107  01DD  1D03               	skipz
  3108  01DE  29DA               	goto	u1165
  3109  01DF  0874               	movf	??_checkKey,w
  3110  01E0  3901               	andlw	1
  3111  01E1  00F5               	movwf	??_checkKey+1
  3112  01E2  0DF5               	rlf	??_checkKey+1,f
  3113  01E3  0DF5               	rlf	??_checkKey+1,f
  3114  01E4  0807               	movf	7,w	;volatile
  3115  01E5  0675               	xorwf	??_checkKey+1,w
  3116  01E6  39FB               	andlw	-5
  3117  01E7  0675               	xorwf	??_checkKey+1,w
  3118  01E8  0087               	movwf	7	;volatile
  3119                           
  3120                           ;main.c: 119: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3121  01E9  3003               	movlw	3
  3122  01EA  00F5               	movwf	??_checkKey+1
  3123  01EB  3097               	movlw	151
  3124  01EC  00F4               	movwf	??_checkKey
  3125  01ED                     u1797:	
  3126  01ED  0BF4               	decfsz	??_checkKey,f
  3127  01EE  29ED               	goto	u1797
  3128  01EF  0BF5               	decfsz	??_checkKey+1,f
  3129  01F0  29ED               	goto	u1797
  3130  01F1  29F2               	nop2
  3131                           
  3132                           ;main.c: 121: if (PORTAbits.RA4 == 0) {
  3133  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3134  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3135  01F4  1A05               	btfsc	5,4	;volatile
  3136  01F5  2A2F               	goto	l1394
  3137                           
  3138                           ;main.c: 122: return 1;
  3139  01F6  3001               	movlw	1
  3140  01F7  0008               	return
  3141  01F8                     l1384:	
  3142                           ;main.c: 123: }
  3143                           ;main.c: 124: } else {
  3144                           
  3145                           
  3146                           ;main.c: 125: PORTBbits.RB4 = (keyVal >> 0) & 1;
  3147  01F8  0876               	movf	checkKey@keyVal,w
  3148  01F9  3901               	andlw	1
  3149  01FA  00F4               	movwf	??_checkKey
  3150  01FB  0EF4               	swapf	??_checkKey,f
  3151  01FC  0806               	movf	6,w	;volatile
  3152  01FD  0674               	xorwf	??_checkKey,w
  3153  01FE  39EF               	andlw	-17
  3154  01FF  0674               	xorwf	??_checkKey,w
  3155  0200  0086               	movwf	6	;volatile
  3156                           
  3157                           ;main.c: 126: PORTCbits.RC3 = (keyVal >> 1) & 1;
  3158  0201  0876               	movf	checkKey@keyVal,w
  3159  0202  00F4               	movwf	??_checkKey
  3160  0203  1003               	clrc
  3161  0204  0C74               	rrf	??_checkKey,w
  3162  0205  3901               	andlw	1
  3163  0206  00F5               	movwf	??_checkKey+1
  3164  0207  0DF5               	rlf	??_checkKey+1,f
  3165  0208  0DF5               	rlf	??_checkKey+1,f
  3166  0209  0DF5               	rlf	??_checkKey+1,f
  3167  020A  0807               	movf	7,w	;volatile
  3168  020B  0675               	xorwf	??_checkKey+1,w
  3169  020C  39F7               	andlw	-9
  3170  020D  0675               	xorwf	??_checkKey+1,w
  3171  020E  0087               	movwf	7	;volatile
  3172                           
  3173                           ;main.c: 127: PORTCbits.RC4 = (keyVal >> 2) & 1;
  3174  020F  0876               	movf	checkKey@keyVal,w
  3175  0210  00F4               	movwf	??_checkKey
  3176  0211  3002               	movlw	2
  3177  0212                     u1185:	
  3178  0212  1003               	clrc
  3179  0213  0CF4               	rrf	??_checkKey,f
  3180  0214  3EFF               	addlw	-1
  3181  0215  1D03               	skipz
  3182  0216  2A12               	goto	u1185
  3183  0217  0874               	movf	??_checkKey,w
  3184  0218  3901               	andlw	1
  3185  0219  00F5               	movwf	??_checkKey+1
  3186  021A  0EF5               	swapf	??_checkKey+1,f
  3187  021B  0807               	movf	7,w	;volatile
  3188  021C  0675               	xorwf	??_checkKey+1,w
  3189  021D  39EF               	andlw	-17
  3190  021E  0675               	xorwf	??_checkKey+1,w
  3191  021F  0087               	movwf	7	;volatile
  3192                           
  3193                           ;main.c: 129: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3194  0220  3003               	movlw	3
  3195  0221  00F5               	movwf	??_checkKey+1
  3196  0222  3097               	movlw	151
  3197  0223  00F4               	movwf	??_checkKey
  3198  0224                     u1807:	
  3199  0224  0BF4               	decfsz	??_checkKey,f
  3200  0225  2A24               	goto	u1807
  3201  0226  0BF5               	decfsz	??_checkKey+1,f
  3202  0227  2A24               	goto	u1807
  3203  0228  2A29               	nop2
  3204                           
  3205                           ;main.c: 131: if (PORTAbits.RA5 == 0) {
  3206  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3207  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3208  022B  1A85               	btfsc	5,5	;volatile
  3209  022C  2A2F               	goto	l1394
  3210                           
  3211                           ;main.c: 132: return 1;
  3212  022D  3001               	movlw	1
  3213  022E  0008               	return
  3214  022F                     l1394:	
  3215                           
  3216                           ;main.c: 133: }
  3217                           ;main.c: 134: }
  3218                           ;main.c: 135: return 0;
  3219  022F  3000               	movlw	0
  3220  0230  0008               	return
  3221  0231                     __end_of_checkKey:	
  3222                           
  3223                           	psect	text18
  3224  0558                     __ptext18:	
  3225 ;; *************** function _SPI_Write *****************
  3226 ;; Defined at:
  3227 ;;		line 28 in file "main.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  data            2    4[COMMON] unsigned int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  config          2    0[BANK0 ] unsigned int 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3241 ;;      Params:         2       0       0       0
  3242 ;;      Locals:         0       2       0       0
  3243 ;;      Temps:          2       0       0       0
  3244 ;;      Totals:         4       2       0       0
  3245 ;;Total ram usage:        6 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_play
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _SPI_Write
  3257  0558                     _SPI_Write:	
  3258                           
  3259                           ;main.c: 30: PORTCbits.RC6 = 0;
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _SPI_Write: [wreg+status,2+status,0]
  3263  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3265  055A  1307               	bcf	7,6	;volatile
  3266                           
  3267                           ;main.c: 33: uint16_t config = 0x3 << 12;
  3268  055B  3000               	movlw	0
  3269  055C  00A0               	movwf	SPI_Write@config
  3270  055D  3030               	movlw	48
  3271  055E  00A1               	movwf	SPI_Write@config+1
  3272                           
  3273                           ;main.c: 34: data = data & 0x0FFF;
  3274  055F  30FF               	movlw	255
  3275  0560  0574               	andwf	SPI_Write@data,w
  3276  0561  00F4               	movwf	SPI_Write@data
  3277  0562  300F               	movlw	15
  3278  0563  0575               	andwf	SPI_Write@data+1,w
  3279  0564  00F5               	movwf	SPI_Write@data+1
  3280                           
  3281                           ;main.c: 36: config = (config | data) >> 8;
  3282  0565  0874               	movf	SPI_Write@data,w
  3283  0566  0420               	iorwf	SPI_Write@config,w
  3284  0567  00F6               	movwf	??_SPI_Write
  3285  0568  0875               	movf	SPI_Write@data+1,w
  3286  0569  0421               	iorwf	SPI_Write@config+1,w
  3287  056A  00F7               	movwf	??_SPI_Write+1
  3288  056B  0877               	movf	??_SPI_Write+1,w
  3289  056C  00F6               	movwf	??_SPI_Write
  3290  056D  01F7               	clrf	??_SPI_Write+1
  3291  056E  0876               	movf	??_SPI_Write,w
  3292  056F  00A0               	movwf	SPI_Write@config
  3293  0570  0877               	movf	??_SPI_Write+1,w
  3294  0571  00A1               	movwf	SPI_Write@config+1
  3295                           
  3296                           ;main.c: 38: SSPBUF = config;
  3297  0572  0820               	movf	SPI_Write@config,w
  3298  0573  0093               	movwf	19	;volatile
  3299  0574                     l40:	
  3300                           ;main.c: 39: while( ! SSPSTATbits.BF);
  3301                           
  3302  0574  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0575  1303               	bcf	3,6	;RP1=0, select bank1
  3304  0576  1C14               	btfss	20,0	;volatile
  3305  0577  2D74               	goto	l40
  3306                           
  3307                           ;main.c: 41: SSPBUF = data;
  3308  0578  0874               	movf	SPI_Write@data,w
  3309  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3310  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3311  057B  0093               	movwf	19	;volatile
  3312  057C                     l43:	
  3313                           ;main.c: 42: while( ! SSPSTATbits.BF);
  3314                           
  3315  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3316  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3317  057E  1C14               	btfss	20,0	;volatile
  3318  057F  2D7C               	goto	l43
  3319                           
  3320                           ;main.c: 45: PORTCbits.RC6 = 1;
  3321  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0582  1707               	bsf	7,6	;volatile
  3324  0583  0008               	return
  3325  0584                     __end_of_SPI_Write:	
  3326                           
  3327                           	psect	text19
  3328  0584                     __ptext19:	
  3329 ;; *************** function _load_tuning *****************
  3330 ;; Defined at:
  3331 ;;		line 169 in file "main.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3345 ;;      Params:         0       0       0       0
  3346 ;;      Locals:         0       0       0       0
  3347 ;;      Temps:          0       2       0       0
  3348 ;;      Totals:         0       2       0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    3
  3352 ;; This function calls:
  3353 ;;		_read16_eeprom
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _load_tuning
  3361  0584                     _load_tuning:	
  3362                           
  3363                           ;main.c: 170: for (current_key = 0; current_key < key_count; current_key += 1) {
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _load_tuning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3367  0584  01F8               	clrf	_current_key
  3368  0585                     l1754:	
  3369  0585  0878               	movf	_current_key,w
  3370  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0587  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0588  00A7               	movwf	??_load_tuning
  3373  0589  01A8               	clrf	??_load_tuning+1
  3374  058A  084D               	movf	_key_count+1,w
  3375  058B  0228               	subwf	??_load_tuning+1,w
  3376  058C  1D03               	skipz
  3377  058D  2D90               	goto	u1705
  3378  058E  084C               	movf	_key_count,w
  3379  058F  0227               	subwf	??_load_tuning,w
  3380  0590                     u1705:	
  3381  0590  1803               	btfsc	3,0
  3382  0591  0008               	return
  3383                           
  3384                           ;main.c: 171: tuning[current_key] = read16_eeprom(current_key*2);
  3385  0592  0878               	movf	_current_key,w
  3386  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0595  00A7               	movwf	??_load_tuning
  3389  0596  0727               	addwf	??_load_tuning,w
  3390  0597  118A  25D2  118A   	fcall	_read16_eeprom
  3391  059A  0878               	movf	_current_key,w
  3392  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3393  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3394  059D  00A8               	movwf	??_load_tuning+1
  3395  059E  0728               	addwf	??_load_tuning+1,w
  3396  059F  3EA0               	addlw	(low (_tuning| 0))& (0+255)
  3397  05A0  0084               	movwf	4
  3398  05A1  0876               	movf	?_read16_eeprom,w
  3399  05A2  1383               	bcf	3,7	;select IRP bank1
  3400  05A3  0080               	movwf	0
  3401  05A4  0A84               	incf	4,f
  3402  05A5  0877               	movf	?_read16_eeprom+1,w
  3403  05A6  0080               	movwf	0
  3404  05A7  3001               	movlw	1
  3405  05A8  00A7               	movwf	??_load_tuning
  3406  05A9  0827               	movf	??_load_tuning,w
  3407  05AA  07F8               	addwf	_current_key,f
  3408  05AB  2D85               	goto	l1754
  3409  05AC                     __end_of_load_tuning:	
  3410                           
  3411                           	psect	text20
  3412  05D2                     __ptext20:	
  3413 ;; *************** function _read16_eeprom *****************
  3414 ;; Defined at:
  3415 ;;		line 84 in file "main.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  addr            1    wreg     unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  addr            1    6[BANK0 ] unsigned char 
  3420 ;;  hi_byte         1    5[BANK0 ] unsigned char 
  3421 ;;  lo_byte         1    4[BANK0 ] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  2    6[COMMON] unsigned int 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3431 ;;      Params:         2       0       0       0
  3432 ;;      Locals:         0       3       0       0
  3433 ;;      Temps:          0       4       0       0
  3434 ;;      Totals:         2       7       0       0
  3435 ;;Total ram usage:        9 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    2
  3438 ;; This function calls:
  3439 ;;		_eeprom_read
  3440 ;; This function is called by:
  3441 ;;		_load_tuning
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _read16_eeprom
  3447  05D2                     _read16_eeprom:	
  3448                           
  3449                           ;incstack = 0
  3450                           ; Regs used in _read16_eeprom: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3451                           ;read16_eeprom@addr stored from wreg
  3452  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3453  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3454  05D4  00A6               	movwf	read16_eeprom@addr
  3455                           
  3456                           ;main.c: 85: uint8_t lo_byte = eeprom_read(addr);
  3457  05D5  0826               	movf	read16_eeprom@addr,w
  3458  05D6  118A  25F7  118A   	fcall	_eeprom_read
  3459  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3460  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3461  05DB  00A0               	movwf	??_read16_eeprom
  3462  05DC  0820               	movf	??_read16_eeprom,w
  3463  05DD  00A4               	movwf	read16_eeprom@lo_byte
  3464                           
  3465                           ;main.c: 86: uint8_t hi_byte = eeprom_read(addr+1);
  3466  05DE  0826               	movf	read16_eeprom@addr,w
  3467  05DF  3E01               	addlw	1
  3468  05E0  118A  25F7         	fcall	_eeprom_read
  3469  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3470  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3471  05E4  00A0               	movwf	??_read16_eeprom
  3472  05E5  0820               	movf	??_read16_eeprom,w
  3473  05E6  00A5               	movwf	read16_eeprom@hi_byte
  3474                           
  3475                           ;main.c: 89: return (uint16_t)(hi_byte << 8 | lo_byte);
  3476  05E7  0824               	movf	read16_eeprom@lo_byte,w
  3477  05E8  00A0               	movwf	??_read16_eeprom
  3478  05E9  01A1               	clrf	??_read16_eeprom+1
  3479  05EA  0825               	movf	read16_eeprom@hi_byte,w
  3480  05EB  00A2               	movwf	??_read16_eeprom+2
  3481  05EC  01A3               	clrf	??_read16_eeprom+3
  3482  05ED  0822               	movf	??_read16_eeprom+2,w
  3483  05EE  00A3               	movwf	??_read16_eeprom+3
  3484  05EF  01A2               	clrf	??_read16_eeprom+2
  3485  05F0  0820               	movf	??_read16_eeprom,w
  3486  05F1  0422               	iorwf	??_read16_eeprom+2,w
  3487  05F2  00F6               	movwf	?_read16_eeprom
  3488  05F3  0821               	movf	??_read16_eeprom+1,w
  3489  05F4  0423               	iorwf	??_read16_eeprom+3,w
  3490  05F5  00F7               	movwf	?_read16_eeprom+1
  3491  05F6  0008               	return
  3492  05F7                     __end_of_read16_eeprom:	
  3493                           
  3494                           	psect	text21
  3495  05F7                     __ptext21:	
  3496 ;; *************** function _eeprom_read *****************
  3497 ;; Defined at:
  3498 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/pic/eeread.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  addr            1    wreg     unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  addr            1    5[COMMON] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      unsigned char 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3512 ;;      Params:         0       0       0       0
  3513 ;;      Locals:         1       0       0       0
  3514 ;;      Temps:          1       0       0       0
  3515 ;;      Totals:         2       0       0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_read16_eeprom
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _eeprom_read
  3528  05F7                     _eeprom_read:	
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3532                           ;eeprom_read@addr stored from wreg
  3533  05F7  00F5               	movwf	eeprom_read@addr
  3534  05F8                     l248:	
  3535  05F8  0064               	clrwdt	;# 
  3536  05F9  1683               	bsf	3,5	;RP0=1, select bank3
  3537  05FA  1703               	bsf	3,6	;RP1=1, select bank3
  3538  05FB  188C               	btfsc	12,1	;volsfr
  3539  05FC  2DF8               	goto	l248
  3540  05FD  0875               	movf	eeprom_read@addr,w
  3541  05FE  1283               	bcf	3,5	;RP0=0, select bank2
  3542  05FF  1703               	bsf	3,6	;RP1=1, select bank2
  3543  0600  008D               	movwf	13	;volatile
  3544  0601  303F               	movlw	63
  3545  0602  00F4               	movwf	??_eeprom_read
  3546  0603  0874               	movf	??_eeprom_read,w
  3547  0604  1683               	bsf	3,5	;RP0=1, select bank3
  3548  0605  1703               	bsf	3,6	;RP1=1, select bank3
  3549  0606  058C               	andwf	12,f	;volsfr
  3550  0607  140C               	bsf	12,0	;volsfr
  3551  0608  1003               	clrc
  3552  0609  180C               	btfsc	12,0	;volsfr
  3553  060A  1403               	setc
  3554  060B  3000               	movlw	0
  3555  060C  1803               	skipnc
  3556  060D  3001               	movlw	1
  3557  060E  1283               	bcf	3,5	;RP0=0, select bank2
  3558  060F  1703               	bsf	3,6	;RP1=1, select bank2
  3559  0610  080C               	movf	12,w	;volatile
  3560  0611  0008               	return
  3561  0612                     __end_of_eeprom_read:	
  3562                           
  3563                           	psect	text22
  3564  03E2                     __ptext22:	
  3565 ;; *************** function _InitApp *****************
  3566 ;; Defined at:
  3567 ;;		line 22 in file "user.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3581 ;;      Params:         0       0       0       0
  3582 ;;      Locals:         0       0       0       0
  3583 ;;      Temps:          0       0       0       0
  3584 ;;      Totals:         0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _InitApp
  3597  03E2                     _InitApp:	
  3598                           
  3599                           ;user.c: 24: OSCCON = 0x70;
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  3603  03E2  3070               	movlw	112
  3604  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  3605  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  3606  03E5  008F               	movwf	15	;volatile
  3607                           
  3608                           ;user.c: 27: ANSEL = 0;
  3609  03E6  1283               	bcf	3,5	;RP0=0, select bank2
  3610  03E7  1703               	bsf	3,6	;RP1=1, select bank2
  3611  03E8  019E               	clrf	30	;volatile
  3612                           
  3613                           ;user.c: 28: ANSELH = 0;
  3614  03E9  019F               	clrf	31	;volatile
  3615                           
  3616                           ;user.c: 31: TRISA = 0;
  3617  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  3618  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  3619  03EC  0185               	clrf	5	;volatile
  3620                           
  3621                           ;user.c: 32: TRISB = 0;
  3622  03ED  0186               	clrf	6	;volatile
  3623                           
  3624                           ;user.c: 33: TRISC = 0;
  3625  03EE  0187               	clrf	7	;volatile
  3626                           
  3627                           ;user.c: 39: TRISBbits.TRISB5 = 1;
  3628  03EF  1686               	bsf	6,5	;volatile
  3629                           
  3630                           ;user.c: 40: TRISBbits.TRISB7 = 1;
  3631  03F0  1786               	bsf	6,7	;volatile
  3632                           
  3633                           ;user.c: 42: BAUDCTLbits.BRG16 = 0;
  3634  03F1  119B               	bcf	27,3	;volatile
  3635                           
  3636                           ;user.c: 44: SPBRG = 51;
  3637  03F2  3033               	movlw	51
  3638  03F3  0099               	movwf	25	;volatile
  3639                           
  3640                           ;user.c: 47: BRGH = 1;
  3641  03F4  1518               	bsf	24,2	;volatile
  3642                           
  3643                           ;user.c: 48: SYNC = 0;
  3644  03F5  1218               	bcf	24,4	;volatile
  3645                           
  3646                           ;user.c: 49: SPEN = 1;
  3647  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3648  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3649  03F8  1798               	bsf	24,7	;volatile
  3650                           
  3651                           ;user.c: 50: CREN = 0;
  3652  03F9  1218               	bcf	24,4	;volatile
  3653                           
  3654                           ;user.c: 51: TXEN = 1;
  3655  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3656  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3657  03FC  1698               	bsf	24,5	;volatile
  3658                           
  3659                           ;user.c: 60: TRISCbits.TRISC7 = 0;
  3660  03FD  1387               	bcf	7,7	;volatile
  3661                           
  3662                           ;user.c: 61: TRISBbits.TRISB4 = 1;
  3663  03FE  1606               	bsf	6,4	;volatile
  3664                           
  3665                           ;user.c: 62: TRISBbits.TRISB6 = 0;
  3666  03FF  1306               	bcf	6,6	;volatile
  3667                           
  3668                           ;user.c: 63: TRISCbits.TRISC6 = 0;
  3669  0400  1307               	bcf	7,6	;volatile
  3670                           
  3671                           ;user.c: 64: PORTCbits.RC6 = 1;
  3672  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0403  1707               	bsf	7,6	;volatile
  3675                           
  3676                           ;user.c: 66: SSPCONbits.SSPEN = 0;
  3677  0404  1294               	bcf	20,5	;volatile
  3678                           
  3679                           ;user.c: 67: SSPCONbits.SSPM = 0b0000;
  3680  0405  30F0               	movlw	-16
  3681  0406  0594               	andwf	20,f	;volatile
  3682                           
  3683                           ;user.c: 68: SSPSTATbits.SMP = 1;
  3684  0407  1683               	bsf	3,5	;RP0=1, select bank1
  3685  0408  1303               	bcf	3,6	;RP1=0, select bank1
  3686  0409  1794               	bsf	20,7	;volatile
  3687                           
  3688                           ;user.c: 69: SSPSTATbits.CKE = 1;
  3689  040A  1714               	bsf	20,6	;volatile
  3690                           
  3691                           ;user.c: 70: SSPCONbits.CKP = 0;
  3692  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3693  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3694  040D  1214               	bcf	20,4	;volatile
  3695                           
  3696                           ;user.c: 72: SSPCONbits.SSPEN = 1;
  3697  040E  1694               	bsf	20,5	;volatile
  3698                           
  3699                           ;user.c: 77: TRISCbits.TRISC5 = 0;
  3700  040F  1683               	bsf	3,5	;RP0=1, select bank1
  3701  0410  1303               	bcf	3,6	;RP1=0, select bank1
  3702  0411  1287               	bcf	7,5	;volatile
  3703                           
  3704                           ;user.c: 80: TRISAbits.TRISA4 = 1;
  3705  0412  1605               	bsf	5,4	;volatile
  3706                           
  3707                           ;user.c: 81: nRABPU = 0;
  3708  0413  1381               	bcf	1,7	;volatile
  3709                           
  3710                           ;user.c: 82: WPUAbits.WPUA4 = 1;
  3711  0414  1615               	bsf	21,4	;volatile
  3712                           
  3713                           ;user.c: 83: TRISAbits.TRISA2 = 0;
  3714  0415  1105               	bcf	5,2	;volatile
  3715                           
  3716                           ;user.c: 84: TRISCbits.TRISC0 = 0;
  3717  0416  1007               	bcf	7,0	;volatile
  3718                           
  3719                           ;user.c: 85: TRISCbits.TRISC1 = 0;
  3720  0417  1087               	bcf	7,1	;volatile
  3721                           
  3722                           ;user.c: 86: TRISCbits.TRISC2 = 0;
  3723  0418  1107               	bcf	7,2	;volatile
  3724                           
  3725                           ;user.c: 89: TRISAbits.TRISA5 = 1;
  3726  0419  1685               	bsf	5,5	;volatile
  3727                           
  3728                           ;user.c: 90: nRABPU = 0;
  3729  041A  1381               	bcf	1,7	;volatile
  3730                           
  3731                           ;user.c: 91: WPUAbits.WPUA5 = 1;
  3732  041B  1695               	bsf	21,5	;volatile
  3733                           
  3734                           ;user.c: 92: TRISBbits.TRISB4 = 0;
  3735  041C  1206               	bcf	6,4	;volatile
  3736                           
  3737                           ;user.c: 93: TRISCbits.TRISC3 = 0;
  3738  041D  1187               	bcf	7,3	;volatile
  3739                           
  3740                           ;user.c: 94: TRISCbits.TRISC4 = 0;
  3741  041E  1207               	bcf	7,4	;volatile
  3742  041F  0008               	return
  3743  0420                     __end_of_InitApp:	
  3744                           
  3745                           	psect	text23
  3746  0643                     __ptext23:	
  3747 ;; *************** function _ConfigureOscillator *****************
  3748 ;; Defined at:
  3749 ;;		line 18 in file "system.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		wreg
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3763 ;;      Params:         0       0       0       0
  3764 ;;      Locals:         0       0       0       0
  3765 ;;      Temps:          0       0       0       0
  3766 ;;      Totals:         0       0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function _ConfigureOscillator
  3779  0643                     _ConfigureOscillator:	
  3780                           
  3781                           ;system.c: 21: OSCCON = 0x70;
  3782                           
  3783                           ;incstack = 0
  3784                           ; Regs used in _ConfigureOscillator: [wreg]
  3785  0643  3070               	movlw	112
  3786  0644  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0645  1303               	bcf	3,6	;RP1=0, select bank1
  3788  0646  008F               	movwf	15	;volatile
  3789  0647  0008               	return
  3790  0648                     __end_of_ConfigureOscillator:	
  3791                           
  3792                           	psect	text24
  3793  0628                     __ptext24:	
  3794 ;; *************** function _isr *****************
  3795 ;; Defined at:
  3796 ;;		line 23 in file "interrupts.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		None
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3810 ;;      Params:         0       0       0       0
  3811 ;;      Locals:         0       0       0       0
  3812 ;;      Temps:          4       0       0       0
  3813 ;;      Totals:         4       0       0       0
  3814 ;;Total ram usage:        4 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		Interrupt level 1
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function _isr
  3825  0628                     _isr:	
  3826  0628  0873               	movf	??_isr+3,w
  3827  0629  00FF               	movwf	127
  3828  062A  0872               	movf	??_isr+2,w
  3829  062B  008A               	movwf	10
  3830  062C  0871               	movf	??_isr+1,w
  3831  062D  0084               	movwf	4
  3832  062E  0E70               	swapf	??_isr^(0+-128),w
  3833  062F  0083               	movwf	3
  3834  0630  0EFE               	swapf	126,f
  3835  0631  0E7E               	swapf	126,w
  3836  0632  0009               	retfie
  3837  0633                     __end_of_isr:	
  3838  007E                     btemp	set	126	;btemp
  3839  007E                     wtemp	set	126
  3840  007E                     wtemp0	set	126
  3841  0080                     wtemp1	set	128
  3842  0082                     wtemp2	set	130
  3843  0084                     wtemp3	set	132
  3844  0086                     wtemp4	set	134
  3845  0088                     wtemp5	set	136
  3846  007F                     wtemp6	set	127
  3847  007E                     ttemp	set	126
  3848  007E                     ttemp0	set	126
  3849  0081                     ttemp1	set	129
  3850  0084                     ttemp2	set	132
  3851  0087                     ttemp3	set	135
  3852  007F                     ttemp4	set	127
  3853  007E                     ltemp	set	126
  3854  007E                     ltemp0	set	126
  3855  0082                     ltemp1	set	130
  3856  0086                     ltemp2	set	134
  3857  0080                     ltemp3	set	128
  3858                           
  3859                           	psect	intentry
  3860  0004                     __pintentry:	
  3861                           ;incstack = 0
  3862                           ; Regs used in _isr: []
  3863                           
  3864  0004                     interrupt_function:	
  3865  007E                     saved_w	set	btemp
  3866  0004  00FE               	movwf	btemp
  3867  0005  0E03               	swapf	3,w
  3868  0006  00F0               	movwf	??_isr
  3869  0007  0804               	movf	4,w
  3870  0008  00F1               	movwf	??_isr+1
  3871  0009  080A               	movf	10,w
  3872  000A  00F2               	movwf	??_isr+2
  3873  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3874  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3875  000D  087F               	movf	btemp+1,w
  3876  000E  00F3               	movwf	??_isr+3
  3877  000F  118A  2E28         	ljmp	_isr


Data Sizes:
    Strings     173
    Constant    10
    Data        2
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     39      46
    BANK1            80      0      46
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 53
		 -> STR_8(CODE[40]), STR_7(CODE[53]), STR_6(CODE[8]), STR_5(CODE[18]), 
		 -> STR_4(CODE[22]), STR_3(CODE[28]), STR_2(CODE[2]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _tune->_checkKey
    _play->_SPI_Write
    _printf->___lwdiv
    ___lwmod->___lwdiv
    _get_voltage->___lldiv
    ___lldiv->___lmul
    _load_tuning->_read16_eeprom
    _read16_eeprom->_eeprom_read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_save_tuning
    _tuningCheck->_printf
    _save_tuning->_write16_eeprom
    _write16_eeprom->_printf
    _print_tuning->_printf
    _play->_get_voltage
    _printf->___lwmod
    ___lwmod->___lwdiv
    _get_voltage->___lldiv
    ___lldiv->___lmul
    _load_tuning->_read16_eeprom

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11989
                                             36 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
                        _load_tuning
                               _play
                       _print_tuning
                             _printf
                        _save_tuning
                               _tune
                        _tuningCheck
 ---------------------------------------------------------------------------------
 (1) _tuningCheck                                          0     0      0    1829
                           _checkKey
                             _printf
 ---------------------------------------------------------------------------------
 (1) _tune                                                 4     4      0     199
                                              0 BANK0      4     4      0
                           _checkKey
                          _tune_down
                            _tune_up
 ---------------------------------------------------------------------------------
 (2) _tune_up                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tune_down                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _save_tuning                                          4     4      0    3766
                                             32 BANK0      4     4      0
                             _printf
                     _write16_eeprom
 ---------------------------------------------------------------------------------
 (2) _write16_eeprom                                       6     4      2    2071
                                             26 BANK0      6     4      2
                       _eeprom_write
                             _printf
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     172
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _print_tuning                                         3     3      0    1630
                                             26 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _play                                                 4     4      0    2823
                                             29 BANK0      4     4      0
                          _SPI_Write
                           _checkKey
                        _get_voltage
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    1630
                                             10 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _get_voltage                                          4     0      4     688
                                             25 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _checkKey                                             3     3      0     199
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Write                                            6     4      2     241
                                              4 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _load_tuning                                          2     2      0     112
                                              7 BANK0      2     2      0
                      _read16_eeprom
 ---------------------------------------------------------------------------------
 (2) _read16_eeprom                                        9     7      2     112
                                              6 COMMON     2     0      2
                                              0 BANK0      7     7      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _load_tuning
     _read16_eeprom
       _eeprom_read
   _play
     _SPI_Write
     _checkKey
     _get_voltage
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _print_tuning
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _save_tuning
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
     _write16_eeprom
       _eeprom_write
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
   _tune
     _checkKey
     _tune_down
     _tune_up
   _tuningCheck
     _checkKey
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      2E       5       57.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      2E       3       57.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      10        0.0%
ABS                  0      0      66       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May  7 14:29:01 2015

                           pc 0002                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          l40 0574                            l34 063C                            l43 057C  
                          _RD 0C60                            _WR 0C61                  ?_get_voltage 0039  
                          fsr 0004                           l130 024C                           l131 0256  
                         l144 0301                           l129 0284                           l235 019C  
                         l270 05AD                           l248 05F8                           _GIE 005F  
                __CFG_CPD$OFF 0000                 _read16_eeprom 05D2                           _isr 0628  
                         fsr0 0004                           indf 0000                          l1320 0315  
                        l1330 034D                          l1322 0325                          l1334 035A  
                        l1610 03AE                          l1450 0242                          l1612 03BC  
                        l1702 0383                          l1622 03DD                          l1462 0264  
                        l1384 01F8                          l1640 04EA                          l1464 026A  
                        l1394 022F                          l1618 03D2                          l1634 04CE  
                        l1458 025D                          l1636 04DC                          l1644 04F5  
                        l1660 011E                          l1732 0522                          l1468 0288  
                        l1820 047F                          l1670 0135                          l1654 0108  
                        l1734 0526                          l1726 050E                          l1822 048C  
                        l1728 0512                          l1754 0585                          l1682 0158  
                        l1762 052C                          l1818 0476                          l1692 0166  
                        l1676 013B                          l1686 0160                          l1694 00EF  
                        l1790 02AC                          l1792 02D4                          l1776 0421  
                        l1698 036D                          l1788 02CD                          ?_isr 0070  
                        STR_1 00E4                          STR_2 00E6                          STR_3 0098  
                        STR_4 00B4                          STR_5 00CA                          STR_6 00DC  
                        STR_7 003B                          STR_8 0070                          _BRGH 04C2  
                        _CREN 00C4                          u1035 0319                          u1055 0327  
                        u1145 01B9                          u1065 033C                          u1155 01C9  
                        u1075 034E                          u1315 0275                          u1165 01DA  
                        u1415 03BD                          u1335 029B                          u1185 0212  
                        u1425 03C9                          u1435 03D3                          u1615 0385  
                        u1705 0590                          u1625 038D                          u1465 04D1  
                        u1545 014E                          u1395 03B1                          u1715 0537  
                        u1485 04E2                          u1725 042C                          u1807 0224  
                        u1495 04EB                          u1745 02B5                          u1777 0485  
                        u1787 0239                          u1797 01ED                          _SPEN 00C7  
                        _WREN 0C62                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4                ??_eeprom_write 0075                          _main 045A  
                        _play 02A3                          btemp 007E                          _tune 0231  
                        ltemp 007E                          start 0011                          ttemp 007E  
                        wtemp 007E             read16_eeprom@addr 0026                 __CFG_IESO$OFF 0000  
               __CFG_MCLRE$ON 0000               __end_of_InitApp 0420                   _tuningCheck 0612  
                       ??_isr 0070                         ?_main 0070                ?_read16_eeprom 0076  
                       _EEADR 010D                         ?_play 0070                 __CFG_WDTE$OFF 0000  
                       _CARRY 0018                         _ANSEL 011E               __end_of___lldiv 0363  
                       ?_tune 0070               __end_of___lwdiv 03E2               __end_of___lwmod 04FA  
                       _SPBRG 0099                  ?_load_tuning 0070                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TXREG 0019  
         _ConfigureOscillator 0643           ___lmul@multiplicand 0024                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000               __end_of_dpowers 003B                         _putch 063B  
              __CFG_BOREN$OFF 0000                         pclath 000A                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
       write16_eeprom@hi_byte 003E                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_tune_up 064B  
          __size_of_SPI_Write 002C         write16_eeprom@lo_byte 003D          ?_ConfigureOscillator 0070  
             __initialization 0013                  __end_of_main 0490                  __end_of_play 0303  
                __end_of_tune 02A3                        ??_main 0044                        ??_play 003D  
                      ??_tune 0020                        _EEDATA 010C                        _EECON1 018C  
                      _EECON2 018D                        ?_putch 0070                        _ANSELH 011F  
                      _OSCCON 008F                  ?_save_tuning 0070                        _SSPBUF 0013  
            __end_of_checkKey 0231                     ??_InitApp 0074         ??_ConfigureOscillator 0074  
                      _nRABPU 040F          __size_of_eeprom_read 001B                        ___lmul 0363  
                   ??___lldiv 0075                     ??___lwdiv 0020                     ??___lwmod 0028  
             ??_read16_eeprom 0020          __end_of_eeprom_write 05D2                        _printf 00E8  
                      _tuning 00A0          __size_of_get_voltage 0036             __end_of_SPI_Write 0584  
                      saved_w 007E                     ??_tune_up 0074       __end_of__initialization 0028  
             eeprom_read@addr 0075                __pcstackCOMMON 0070       __size_of_write16_eeprom 0031  
                __pidataBANK0 0648                 __end_of_putch 0643           write16_eeprom@value 003A  
           eeprom_write@value 0074          __size_of_load_tuning 0028                       ??_putch 0074  
                  __pbssBANK0 0047                    __pbssBANK1 00A0                    __pmaintext 045A  
                     ?___lmul 0020                  ?_tuningCheck 0070                    __pintentry 0004  
              ___lmul@product 0028                       ?_printf 002A                     ?_checkKey 0070  
                  __stringtab 002B            __size_of_tune_down 0001                       _InitApp 03E2  
        __size_of_save_tuning 003A                checkKey@keyVal 0076                 SPI_Write@data 0074  
       __size_of_eeprom_write 0026               __size_of___lmul 0041                       ___lldiv 0303  
                     ___lwdiv 03A4                       ___lwmod 04C6                       __ptext1 0612  
                     __ptext2 0231                       __ptext3 064A                       __ptext4 064B  
                     __ptext5 0420                       __ptext6 04FA                       __ptext7 05AC  
                     __ptext8 052B                       __ptext9 02A3               __size_of_printf 00B5  
                     _dpowers 0031                    ??_checkKey 0074                  __size_of_isr 000B  
                     clrloop0 0634                       _tune_up 064A          end_of_initialization 0028  
                _eeprom_write 05AC               ___lldiv@divisor 002C               ___lldiv@counter 0038  
              _write16_eeprom 04FA                       printf@c 0039                       printf@f 0038  
              _in_tuning_mode 004B                     _PORTAbits 0005                     _PORTBbits 0006  
                   _PORTCbits 0007             __end_of_tune_down 064C          read16_eeprom@hi_byte 0025  
                   _TRISAbits 0085                     _TRISBbits 0086                     _TRISCbits 0087  
        read16_eeprom@lo_byte 0024                     _SPI_Write 0558                 ?_print_tuning 0070  
 __end_of_ConfigureOscillator 0648                 ??_eeprom_read 0074        __end_of_write16_eeprom 052B  
              play@real_value 003F                 ??_get_voltage 0076                __end_of___lmul 03A4  
        __size_of_tuningCheck 0016                   _BAUDCTLbits 009B         __end_of_read16_eeprom 05F7  
              __end_of_printf 019D           start_initialization 0013                   __end_of_isr 0633  
              ??_print_tuning 003A                    ?_SPI_Write 0074              _currently_tuning 0079  
             SPI_Write@config 0020               ?_write16_eeprom 003A                      ??___lmul 0074  
         __end_of_eeprom_read 0612                   __pdataBANK0 004C                      ??_printf 0030  
               ??_load_tuning 0027                   __pbssCOMMON 0078           __end_of_get_voltage 04C6  
                   ___latbits 0001                 __pcstackBANK0 0020             __size_of_checkKey 0094  
          write16_eeprom@addr 003F              eeprom_write@addr 0076                      ?_InitApp 0070  
            ___lwdiv@dividend 0076                      ?___lldiv 002C                      ?___lwdiv 0074  
                    ?___lwmod 0024                     __pstrings 002B                   ??_SPI_Write 0076  
                   _key_count 004C              ___lwdiv@quotient 0022                      ?_tune_up 0070  
         __end_of_load_tuning 05AC                __size_of_putch 0008                 ??_save_tuning 0040  
           interrupt_function 0004                     clear_ram0 0633                   _eeprom_read 05F7  
        __end_of_print_tuning 0558                   _get_voltage 0490                   __stringbase 0030  
                  printf@flag 0034                      _WPUAbits 0095                    printf@prec 0035  
                   _tune_down 064B             ___lmul@multiplier 0020              __size_of_InitApp 003E  
         __end_of_save_tuning 045A              __size_of___lldiv 0060              __size_of___lwdiv 003E  
            __size_of___lwmod 0034            __end_of__stringtab 0031                      _checkKey 019D  
                 _load_tuning 0584                   _current_key 0078                    ?_tune_down 0070  
             ___lwdiv@divisor 0074               ___lwdiv@counter 0021                      __ptext10 00E8  
                    __ptext11 063B                      __ptext20 05D2                      __ptext12 04C6  
                    __ptext21 05F7                      __ptext13 03A4                      __ptext22 03E2  
                    __ptext14 0490                      __ptext23 0643                      __ptext15 0363  
                    __ptext24 0628                      __ptext16 0303                      __ptext17 019D  
                    __ptext18 0558                      __ptext19 0584            get_voltage@keyCode 0039  
            __size_of_tune_up 0001              ??_write16_eeprom 003C                      _last_key 0047  
               __size_of_main 0036                 __size_of_play 0060                 __size_of_tune 0072  
__size_of_ConfigureOscillator 0005                 ??_tuningCheck 0078                     printf@val 0036  
                   putch@data 0074                      intlevel1 0000              save_tuning@value 0042  
                 _save_tuning 0420              ___lwmod@dividend 0026              ___lldiv@dividend 0030  
      __size_of_read16_eeprom 0025         __size_of_print_tuning 002D                     stringcode 002B  
                    printf@ap 0033                  _pressed_keys 0049           __end_of_tuningCheck 0628  
            ___lldiv@quotient 0034               ___lwmod@divisor 0024               ___lwmod@counter 0029  
                    stringdir 002B                   ??_tune_down 0074                      stringtab 002B  
                _print_tuning 052B                 ?_eeprom_write 0074             __CFG_FOSC$INTRCIO 0000  
                ?_eeprom_read 0070                    _SSPCONbits 0014  
