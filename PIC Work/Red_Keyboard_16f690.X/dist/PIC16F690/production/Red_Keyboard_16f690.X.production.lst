

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May  7 09:46:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  000E                     	;# 
    53  000F                     	;# 
    54  0010                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0014                     	;# 
    59  0015                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0017                     	;# 
    63  0018                     	;# 
    64  0019                     	;# 
    65  001A                     	;# 
    66  001C                     	;# 
    67  001D                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  0087                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  008F                     	;# 
    78  0090                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0118                     	;# 
   103  0119                     	;# 
   104  011A                     	;# 
   105  011B                     	;# 
   106  011E                     	;# 
   107  011F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  019D                     	;# 
   111  019E                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  008F                     	;# 
   151  0090                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0093                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0095                     	;# 
   158  0095                     	;# 
   159  0096                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0118                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011E                     	;# 
   180  011F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  008F                     	;# 
   224  0090                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0093                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0095                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0096                     	;# 
   234  0097                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010E                     	;# 
   245  010F                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0118                     	;# 
   249  0119                     	;# 
   250  011A                     	;# 
   251  011B                     	;# 
   252  011E                     	;# 
   253  011F                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  019D                     	;# 
   257  019E                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  000E                     	;# 
   271  000E                     	;# 
   272  000F                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  010C                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  0115                     	;# 
   320  0116                     	;# 
   321  0118                     	;# 
   322  0119                     	;# 
   323  011A                     	;# 
   324  011B                     	;# 
   325  011E                     	;# 
   326  011F                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  000E                     	;# 
   345  000F                     	;# 
   346  0010                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0015                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0118                     	;# 
   395  0119                     	;# 
   396  011A                     	;# 
   397  011B                     	;# 
   398  011E                     	;# 
   399  011F                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  019D                     	;# 
   403  019E                     	;# 
   404                           
   405                           	psect	idataBANK0
   406  05EF                     __pidataBANK0:	
   407                           
   408                           ;initializer for _key_count
   409  05EF  3417               	retlw	23
   410  05F0  3400               	retlw	0
   411                           
   412                           	psect	strings
   413  002B                     __pstrings:	
   414  002B                     stringtab:	
   415  002B                     __stringtab:	
   416  002B                     stringcode:	
   417                           ;	String table - string pointers are 1 byte each
   418                           
   419  002B                     stringdir:	
   420  002B  3000               	movlw	high stringdir
   421  002C  008A               	movwf	10
   422  002D  0804               	movf	4,w
   423  002E  0A84               	incf	4,f
   424  002F  0782               	addwf	2,f
   425  0030                     __stringbase:	
   426  0030  3400               	retlw	0
   427  0031                     __end_of__stringtab:	
   428  0031                     _dpowers:	
   429  0031  3401               	retlw	1
   430  0032  3400               	retlw	0
   431  0033  340A               	retlw	10
   432  0034  3400               	retlw	0
   433  0035  3464               	retlw	100
   434  0036  3400               	retlw	0
   435  0037  34E8               	retlw	232
   436  0038  3403               	retlw	3
   437  0039  3410               	retlw	16
   438  003A  3427               	retlw	39
   439  003B                     __end_of_dpowers:	
   440  0005                     _PORTAbits	set	5
   441  0006                     _PORTBbits	set	6
   442  0007                     _PORTCbits	set	7
   443  0013                     _SSPBUF	set	19
   444  0014                     _SSPCONbits	set	20
   445  0019                     _TXREG	set	25
   446  0018                     _CARRY	set	24
   447  00C4                     _CREN	set	196
   448  005F                     _GIE	set	95
   449  00C7                     _SPEN	set	199
   450  0064                     _TXIF	set	100
   451  009B                     _BAUDCTLbits	set	155
   452  008F                     _OSCCON	set	143
   453  0099                     _SPBRG	set	153
   454  0094                     _SSPSTATbits	set	148
   455  0085                     _TRISA	set	133
   456  0085                     _TRISAbits	set	133
   457  0086                     _TRISB	set	134
   458  0086                     _TRISBbits	set	134
   459  0087                     _TRISC	set	135
   460  0087                     _TRISCbits	set	135
   461  0095                     _WPUAbits	set	149
   462  04C2                     _BRGH	set	1218
   463  04C4                     _SYNC	set	1220
   464  04C5                     _TXEN	set	1221
   465  040F                     _nRABPU	set	1039
   466  011E                     _ANSEL	set	286
   467  011F                     _ANSELH	set	287
   468  010D                     _EEADR	set	269
   469  010C                     _EEDATA	set	268
   470  018C                     _EECON1	set	396
   471  018D                     _EECON2	set	397
   472  0C60                     _RD	set	3168
   473  0C61                     _WR	set	3169
   474  0C62                     _WREN	set	3170
   475  003B                     STR_6:	
   476  003B  344C               	retlw	76	;'L'
   477  003C  3461               	retlw	97	;'a'
   478  003D  3473               	retlw	115	;'s'
   479  003E  3474               	retlw	116	;'t'
   480  003F  3420               	retlw	32	;' '
   481  0040  344B               	retlw	75	;'K'
   482  0041  3465               	retlw	101	;'e'
   483  0042  3479               	retlw	121	;'y'
   484  0043  343A               	retlw	58	;':'
   485  0044  3420               	retlw	32	;' '
   486  0045  3425               	retlw	37	;'%'
   487  0046  3469               	retlw	105	;'i'
   488  0047  3420               	retlw	32	;' '
   489  0048  3409               	retlw	9
   490  0049  3420               	retlw	32	;' '
   491  004A  3452               	retlw	82	;'R'
   492  004B  3465               	retlw	101	;'e'
   493  004C  3461               	retlw	97	;'a'
   494  004D  346C               	retlw	108	;'l'
   495  004E  3420               	retlw	32	;' '
   496  004F  3456               	retlw	86	;'V'
   497  0050  3461               	retlw	97	;'a'
   498  0051  346C               	retlw	108	;'l'
   499  0052  3475               	retlw	117	;'u'
   500  0053  3465               	retlw	101	;'e'
   501  0054  343A               	retlw	58	;':'
   502  0055  3420               	retlw	32	;' '
   503  0056  3425               	retlw	37	;'%'
   504  0057  3469               	retlw	105	;'i'
   505  0058  3420               	retlw	32	;' '
   506  0059  3420               	retlw	32	;' '
   507  005A  3409               	retlw	9
   508  005B  3420               	retlw	32	;' '
   509  005C  3450               	retlw	80	;'P'
   510  005D  3472               	retlw	114	;'r'
   511  005E  3465               	retlw	101	;'e'
   512  005F  3473               	retlw	115	;'s'
   513  0060  3473               	retlw	115	;'s'
   514  0061  3465               	retlw	101	;'e'
   515  0062  3464               	retlw	100	;'d'
   516  0063  3420               	retlw	32	;' '
   517  0064  344B               	retlw	75	;'K'
   518  0065  3465               	retlw	101	;'e'
   519  0066  3479               	retlw	121	;'y'
   520  0067  3473               	retlw	115	;'s'
   521  0068  343A               	retlw	58	;':'
   522  0069  3420               	retlw	32	;' '
   523  006A  3425               	retlw	37	;'%'
   524  006B  3469               	retlw	105	;'i'
   525  006C  3420               	retlw	32	;' '
   526  006D  340A               	retlw	10
   527  006E  340D               	retlw	13
   528  006F  3400               	retlw	0
   529  0070                     STR_7:	
   530  0070  340A               	retlw	10
   531  0071  340D               	retlw	13
   532  0072  3452               	retlw	82	;'R'
   533  0073  3465               	retlw	101	;'e'
   534  0074  3464               	retlw	100	;'d'
   535  0075  3420               	retlw	32	;' '
   536  0076  344B               	retlw	75	;'K'
   537  0077  3465               	retlw	101	;'e'
   538  0078  3479               	retlw	121	;'y'
   539  0079  3462               	retlw	98	;'b'
   540  007A  346F               	retlw	111	;'o'
   541  007B  3461               	retlw	97	;'a'
   542  007C  3472               	retlw	114	;'r'
   543  007D  3464               	retlw	100	;'d'
   544  007E  3420               	retlw	32	;' '
   545  007F  3462               	retlw	98	;'b'
   546  0080  3479               	retlw	121	;'y'
   547  0081  3420               	retlw	32	;' '
   548  0082  344A               	retlw	74	;'J'
   549  0083  3461               	retlw	97	;'a'
   550  0084  346D               	retlw	109	;'m'
   551  0085  3465               	retlw	101	;'e'
   552  0086  3473               	retlw	115	;'s'
   553  0087  3420               	retlw	32	;' '
   554  0088  3448               	retlw	72	;'H'
   555  0089  3461               	retlw	97	;'a'
   556  008A  3467               	retlw	103	;'g'
   557  008B  3465               	retlw	101	;'e'
   558  008C  3472               	retlw	114	;'r'
   559  008D  346D               	retlw	109	;'m'
   560  008E  3461               	retlw	97	;'a'
   561  008F  346E               	retlw	110	;'n'
   562  0090  3420               	retlw	32	;' '
   563  0091  3432               	retlw	50	;'2'
   564  0092  3430               	retlw	48	;'0'
   565  0093  3431               	retlw	49	;'1'
   566  0094  3435               	retlw	53	;'5'
   567  0095  340A               	retlw	10
   568  0096  340D               	retlw	13
   569  0097  3400               	retlw	0
   570  0098                     STR_1:	
   571  0098  340A               	retlw	10
   572  0099  340D               	retlw	13
   573  009A  3445               	retlw	69	;'E'
   574  009B  346E               	retlw	110	;'n'
   575  009C  3474               	retlw	116	;'t'
   576  009D  3465               	retlw	101	;'e'
   577  009E  3472               	retlw	114	;'r'
   578  009F  3469               	retlw	105	;'i'
   579  00A0  346E               	retlw	110	;'n'
   580  00A1  3467               	retlw	103	;'g'
   581  00A2  3420               	retlw	32	;' '
   582  00A3  3474               	retlw	116	;'t'
   583  00A4  3475               	retlw	117	;'u'
   584  00A5  346E               	retlw	110	;'n'
   585  00A6  3469               	retlw	105	;'i'
   586  00A7  346E               	retlw	110	;'n'
   587  00A8  3467               	retlw	103	;'g'
   588  00A9  3420               	retlw	32	;' '
   589  00AA  346D               	retlw	109	;'m'
   590  00AB  346F               	retlw	111	;'o'
   591  00AC  3464               	retlw	100	;'d'
   592  00AD  3465               	retlw	101	;'e'
   593  00AE  342E               	retlw	46	;'.'
   594  00AF  342E               	retlw	46	;'.'
   595  00B0  342E               	retlw	46	;'.'
   596  00B1  340A               	retlw	10
   597  00B2  340D               	retlw	13
   598  00B3  3400               	retlw	0
   599  00B4                     STR_2:	
   600  00B4  344E               	retlw	78	;'N'
   601  00B5  346F               	retlw	111	;'o'
   602  00B6  3474               	retlw	116	;'t'
   603  00B7  3465               	retlw	101	;'e'
   604  00B8  343A               	retlw	58	;':'
   605  00B9  3420               	retlw	32	;' '
   606  00BA  3425               	retlw	37	;'%'
   607  00BB  3469               	retlw	105	;'i'
   608  00BC  3409               	retlw	9
   609  00BD  3420               	retlw	32	;' '
   610  00BE  3456               	retlw	86	;'V'
   611  00BF  3461               	retlw	97	;'a'
   612  00C0  346C               	retlw	108	;'l'
   613  00C1  3475               	retlw	117	;'u'
   614  00C2  3465               	retlw	101	;'e'
   615  00C3  343A               	retlw	58	;':'
   616  00C4  3420               	retlw	32	;' '
   617  00C5  3425               	retlw	37	;'%'
   618  00C6  3469               	retlw	105	;'i'
   619  00C7  340A               	retlw	10
   620  00C8  340D               	retlw	13
   621  00C9  3400               	retlw	0
   622  00CA                     STR_3:	
   623  00CA  3457               	retlw	87	;'W'
   624  00CB  3472               	retlw	114	;'r'
   625  00CC  3469               	retlw	105	;'i'
   626  00CD  3474               	retlw	116	;'t'
   627  00CE  3469               	retlw	105	;'i'
   628  00CF  346E               	retlw	110	;'n'
   629  00D0  3467               	retlw	103	;'g'
   630  00D1  3420               	retlw	32	;' '
   631  00D2  3476               	retlw	118	;'v'
   632  00D3  3461               	retlw	97	;'a'
   633  00D4  346C               	retlw	108	;'l'
   634  00D5  3475               	retlw	117	;'u'
   635  00D6  3465               	retlw	101	;'e'
   636  00D7  343A               	retlw	58	;':'
   637  00D8  3420               	retlw	32	;' '
   638  00D9  3425               	retlw	37	;'%'
   639  00DA  3469               	retlw	105	;'i'
   640  00DB  3400               	retlw	0
   641  00DC                     STR_5:	
   642  00DC  3444               	retlw	68	;'D'
   643  00DD  346F               	retlw	111	;'o'
   644  00DE  346E               	retlw	110	;'n'
   645  00DF  3465               	retlw	101	;'e'
   646  00E0  3421               	retlw	33	;'!'
   647  00E1  340A               	retlw	10
   648  00E2  340D               	retlw	13
   649  00E3  3400               	retlw	0
   650  00E4                     STR_4:	
   651  00E4  342E               	retlw	46	;'.'
   652  00E5  3400               	retlw	0
   653                           
   654                           ; #config settings
   655  0000                     
   656                           	psect	cinit
   657  0013                     start_initialization:	
   658  0013                     __initialization:	
   659                           
   660                           ; Clear objects allocated to COMMON
   661  0013  01F9               	clrf	__pbssCOMMON& (0+127)
   662                           
   663                           ; Clear objects allocated to BANK0
   664  0014  1383               	bcf	3,7	;select IRP bank0
   665  0015  3041               	movlw	low __pbssBANK0
   666  0016  0084               	movwf	4
   667  0017  3047               	movlw	low (__pbssBANK0+6)
   668  0018  118A  25DA  118A   	fcall	clear_ram0
   669                           
   670                           ; Clear objects allocated to BANK1
   671  001B  30A0               	movlw	low __pbssBANK1
   672  001C  0084               	movwf	4
   673  001D  30CE               	movlw	low (__pbssBANK1+46)
   674  001E  118A  25DA  118A   	fcall	clear_ram0
   675                           
   676                           ; Initialize objects allocated to BANK0
   677  0021  118A  25EF  118A   	fcall	__pidataBANK0	;fetch initializer
   678  0024  00C7               	movwf	__pdataBANK0& (0+127)
   679  0025  118A  25F0         	fcall	__pidataBANK0+1	;fetch initializer
   680  0027  00C8               	movwf	(__pdataBANK0+1)& (0+127)
   681  0028                     end_of_initialization:	
   682                           ;End of C runtime variable initialization code
   683                           
   684  0028                     __end_of__initialization:	
   685  0028  0183               	clrf	3
   686  0029  118A  2C5B         	ljmp	_main	;jump to C main() function
   687                           
   688                           	psect	bssCOMMON
   689  0079                     __pbssCOMMON:	
   690  0079                     _currently_tuning:	
   691  0079                     	ds	1
   692                           
   693                           	psect	bssBANK0
   694  0041                     __pbssBANK0:	
   695  0041                     _last_key:	
   696  0041                     	ds	2
   697  0043                     _pressed_keys:	
   698  0043                     	ds	2
   699  0045                     _current_key:	
   700  0045                     	ds	1
   701  0046                     _in_tuning_mode:	
   702  0046                     	ds	1
   703                           
   704                           	psect	dataBANK0
   705  0047                     __pdataBANK0:	
   706  0047                     _key_count:	
   707  0047                     	ds	2
   708                           
   709                           	psect	bssBANK1
   710  00A0                     __pbssBANK1:	
   711  00A0                     _tuning:	
   712  00A0                     	ds	46
   713                           
   714                           	psect	clrtext
   715  05DA                     clear_ram0:	
   716                           ;	Called with FSR containing the base address, and
   717                           ;	W with the last address+1
   718                           
   719  05DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   720  05DB                     clrloop0:	
   721  05DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   722  05DC  0A84               	incf	4,f	;increment pointer
   723  05DD  0604               	xorwf	4,w	;XOR with final address
   724  05DE  1903               	btfsc	3,2	;have we reached the end yet?
   725  05DF  3400               	retlw	0	;all done for this memory range, return
   726  05E0  0604               	xorwf	4,w	;XOR again to restore value
   727  05E1  2DDB               	goto	clrloop0	;do the next byte
   728                           
   729                           	psect	cstackCOMMON
   730  0070                     __pcstackCOMMON:	
   731  0070                     ?_ConfigureOscillator:	
   732  0070                     ?_InitApp:	
   733                           ; 0 bytes @ 0x0
   734                           
   735  0070                     ?_isr:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ??_isr:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ?_putch:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ?_tuningCheck:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ?_load_tuning:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ?_print_tuning:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ?_save_tuning:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ?_tune_down:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0070                     ?_tune_up:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0070                     ?_tune:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0070                     ?_play:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0070                     ?_main:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0070                     ?_eeprom_read:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0070                     ?_checkKey:	
   775                           ; 1 bytes @ 0x0
   776                           
   777                           
   778                           ; 1 bytes @ 0x0
   779  0070                     	ds	4
   780  0074                     ??_eeprom_read:	
   781  0074                     ?_eeprom_write:	
   782                           ; 0 bytes @ 0x4
   783                           
   784  0074                     ??_ConfigureOscillator:	
   785                           ; 0 bytes @ 0x4
   786                           
   787  0074                     ??_InitApp:	
   788                           ; 0 bytes @ 0x4
   789                           
   790  0074                     ??_putch:	
   791                           ; 0 bytes @ 0x4
   792                           
   793  0074                     ?_SPI_Write:	
   794                           ; 0 bytes @ 0x4
   795                           
   796  0074                     ??_checkKey:	
   797                           ; 0 bytes @ 0x4
   798                           
   799  0074                     ??_tune_down:	
   800                           ; 0 bytes @ 0x4
   801                           
   802  0074                     ??_tune_up:	
   803                           ; 0 bytes @ 0x4
   804                           
   805  0074                     ??___lmul:	
   806                           ; 0 bytes @ 0x4
   807                           
   808  0074                     ?___lwdiv:	
   809                           ; 0 bytes @ 0x4
   810                           
   811  0074                     putch@data:	
   812                           ; 2 bytes @ 0x4
   813                           
   814  0074                     eeprom_write@value:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     SPI_Write@data:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ___lwdiv@divisor:	
   821                           ; 2 bytes @ 0x4
   822                           
   823                           
   824                           ; 2 bytes @ 0x4
   825  0074                     	ds	1
   826  0075                     ??_eeprom_write:	
   827  0075                     eeprom_read@addr:	
   828                           ; 0 bytes @ 0x5
   829                           
   830  0075                     ___lmul@product:	
   831                           ; 1 bytes @ 0x5
   832                           
   833                           
   834                           ; 4 bytes @ 0x5
   835  0075                     	ds	1
   836  0076                     ??_SPI_Write:	
   837  0076                     ??_load_tuning:	
   838                           ; 0 bytes @ 0x6
   839                           
   840  0076                     checkKey@keyVal:	
   841                           ; 0 bytes @ 0x6
   842                           
   843  0076                     eeprom_write@addr:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0076                     ___lwdiv@dividend:	
   847                           ; 1 bytes @ 0x6
   848                           
   849                           
   850                           ; 2 bytes @ 0x6
   851  0076                     	ds	2
   852  0078                     ??___lwdiv:	
   853                           
   854                           ; 0 bytes @ 0x8
   855  0078                     	ds	1
   856  0079                     ??_get_voltage:	
   857  0079                     ??_tuningCheck:	
   858                           ; 0 bytes @ 0x9
   859                           
   860                           
   861                           	psect	cstackBANK0
   862  0020                     __pcstackBANK0:	
   863                           ; 0 bytes @ 0x9
   864                           
   865  0020                     ??_tune:	
   866  0020                     ?___lmul:	
   867                           ; 0 bytes @ 0x0
   868                           
   869  0020                     SPI_Write@config:	
   870                           ; 4 bytes @ 0x0
   871                           
   872  0020                     ___lwdiv@quotient:	
   873                           ; 2 bytes @ 0x0
   874                           
   875  0020                     ___lmul@multiplier:	
   876                           ; 2 bytes @ 0x0
   877                           
   878                           
   879                           ; 4 bytes @ 0x0
   880  0020                     	ds	2
   881  0022                     ___lwdiv@counter:	
   882                           
   883                           ; 1 bytes @ 0x2
   884  0022                     	ds	1
   885  0023                     ?___lwmod:	
   886  0023                     ___lwmod@divisor:	
   887                           ; 2 bytes @ 0x3
   888                           
   889                           
   890                           ; 2 bytes @ 0x3
   891  0023                     	ds	1
   892  0024                     ___lmul@multiplicand:	
   893                           
   894                           ; 4 bytes @ 0x4
   895  0024                     	ds	1
   896  0025                     ___lwmod@dividend:	
   897                           
   898                           ; 2 bytes @ 0x5
   899  0025                     	ds	2
   900  0027                     ??___lwmod:	
   901                           
   902                           ; 0 bytes @ 0x7
   903  0027                     	ds	1
   904  0028                     ?___lldiv:	
   905  0028                     ___lwmod@counter:	
   906                           ; 4 bytes @ 0x8
   907                           
   908  0028                     ___lldiv@divisor:	
   909                           ; 1 bytes @ 0x8
   910                           
   911                           
   912                           ; 4 bytes @ 0x8
   913  0028                     	ds	1
   914  0029                     ?_printf:	
   915                           
   916                           ; 2 bytes @ 0x9
   917  0029                     	ds	3
   918  002C                     ___lldiv@dividend:	
   919                           
   920                           ; 4 bytes @ 0xC
   921  002C                     	ds	3
   922  002F                     ??_printf:	
   923                           
   924                           ; 0 bytes @ 0xF
   925  002F                     	ds	1
   926  0030                     ??___lldiv:	
   927                           
   928                           ; 0 bytes @ 0x10
   929  0030                     	ds	1
   930  0031                     ___lldiv@quotient:	
   931                           
   932                           ; 4 bytes @ 0x11
   933  0031                     	ds	1
   934  0032                     printf@ap:	
   935                           
   936                           ; 1 bytes @ 0x12
   937  0032                     	ds	1
   938  0033                     printf@flag:	
   939                           
   940                           ; 1 bytes @ 0x13
   941  0033                     	ds	1
   942  0034                     printf@prec:	
   943                           
   944                           ; 1 bytes @ 0x14
   945  0034                     	ds	1
   946  0035                     printf@f:	
   947  0035                     ___lldiv@counter:	
   948                           ; 1 bytes @ 0x15
   949                           
   950                           
   951                           ; 1 bytes @ 0x15
   952  0035                     	ds	1
   953  0036                     ?_get_voltage:	
   954  0036                     printf@val:	
   955                           ; 4 bytes @ 0x16
   956                           
   957  0036                     get_voltage@keyCode:	
   958                           ; 2 bytes @ 0x16
   959                           
   960                           
   961                           ; 4 bytes @ 0x16
   962  0036                     	ds	2
   963  0038                     printf@c:	
   964                           
   965                           ; 1 bytes @ 0x18
   966  0038                     	ds	1
   967  0039                     ??_print_tuning:	
   968  0039                     ??_save_tuning:	
   969                           ; 0 bytes @ 0x19
   970                           
   971                           
   972                           ; 0 bytes @ 0x19
   973  0039                     	ds	1
   974  003A                     ??_play:	
   975                           
   976                           ; 0 bytes @ 0x1A
   977  003A                     	ds	1
   978  003B                     save_tuning@value:	
   979                           
   980                           ; 2 bytes @ 0x1B
   981  003B                     	ds	1
   982  003C                     play@real_value:	
   983                           
   984                           ; 2 bytes @ 0x1C
   985  003C                     	ds	2
   986  003E                     ??_main:	
   987                           
   988                           ; 0 bytes @ 0x1E
   989  003E                     	ds	3
   990                           
   991                           	psect	maintext
   992  045B                     __pmaintext:	
   993 ;;
   994 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   995 ;;
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 243 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;		None               void
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : B00/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1012 ;;      Params:         0       0       0       0
  1013 ;;      Locals:         0       0       0       0
  1014 ;;      Temps:          0       3       0       0
  1015 ;;      Totals:         0       3       0       0
  1016 ;;Total ram usage:        3 bytes
  1017 ;; Hardware stack levels required when called:    4
  1018 ;; This function calls:
  1019 ;;		_ConfigureOscillator
  1020 ;;		_InitApp
  1021 ;;		_load_tuning
  1022 ;;		_play
  1023 ;;		_print_tuning
  1024 ;;		_printf
  1025 ;;		_save_tuning
  1026 ;;		_tune
  1027 ;;		_tuningCheck
  1028 ;; This function is called by:
  1029 ;;		Startup code after reset
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _main
  1035  045B                     _main:	
  1036                           
  1037                           ;main.c: 246: ConfigureOscillator();
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1041  045B  118A  25EA  118A   	fcall	_ConfigureOscillator
  1042                           
  1043                           ;main.c: 249: InitApp();
  1044  045E  118A  241D  118A   	fcall	_InitApp
  1045                           
  1046                           ;main.c: 251: printf("\n\rRed Keyboard by James Hagerman 2015\n\r");
  1047  0461  3040               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1048  0462  118A  20E6  118A   	fcall	_printf
  1049                           
  1050                           ;main.c: 254: load_tuning();
  1051  0465  118A  2578  118A   	fcall	_load_tuning
  1052                           
  1053                           ;main.c: 255: print_tuning();
  1054  0468  118A  2527  118A   	fcall	_print_tuning
  1055                           
  1056                           ;main.c: 257: tuning[10] = 100;
  1057  046B  3064               	movlw	100
  1058  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1059  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1060  046E  00B4               	movwf	(_tuning^(0+128)+20)
  1061  046F  3000               	movlw	0
  1062  0470  00B5               	movwf	(_tuning^(0+128)+21)
  1063                           
  1064                           ;main.c: 260: save_tuning();
  1065  0471  118A  23A0  118A   	fcall	_save_tuning
  1066                           
  1067                           ;main.c: 263: tuningCheck();
  1068  0474  118A  25B9  118A   	fcall	_tuningCheck
  1069  0477                     l1737:	
  1070                           ;main.c: 264: while(in_tuning_mode) {
  1071                           
  1072  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0479  0846               	movf	_in_tuning_mode,w
  1075  047A  1903               	btfsc	3,2
  1076  047B  2C80               	goto	l1739
  1077                           
  1078                           ;main.c: 265: tune();
  1079  047C  118A  222F  118A   	fcall	_tune
  1080  047F  2C77               	goto	l1737
  1081  0480                     l1739:	
  1082                           
  1083                           ;main.c: 266: }
  1084                           ;main.c: 268: _delay((unsigned long)((1000)*(8000000L/4000.0)));
  1085  0480  300B               	movlw	11
  1086  0481  00C0               	movwf	??_main+2
  1087  0482  3026               	movlw	38
  1088  0483  00BF               	movwf	??_main+1
  1089  0484  3066               	movlw	102
  1090  0485  00BE               	movwf	??_main
  1091  0486                     u1687:	
  1092  0486  0BBE               	decfsz	??_main,f
  1093  0487  2C86               	goto	u1687
  1094  0488  0BBF               	decfsz	??_main+1,f
  1095  0489  2C86               	goto	u1687
  1096  048A  0BC0               	decfsz	??_main+2,f
  1097  048B  2C86               	goto	u1687
  1098  048C  2C8D               	nop2
  1099  048D                     l1741:	
  1100                           ;main.c: 269: while(1)
  1101                           
  1102                           
  1103                           ;main.c: 270: {
  1104                           ;main.c: 271: play();
  1105  048D  118A  229F  118A   	fcall	_play
  1106  0490  2C8D               	goto	l1741
  1107  0491                     __end_of_main:	
  1108                           
  1109                           	psect	text1
  1110  05B9                     __ptext1:	
  1111 ;; *************** function _tuningCheck *****************
  1112 ;; Defined at:
  1113 ;;		line 143 in file "main.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;		None               void
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1127 ;;      Params:         0       0       0       0
  1128 ;;      Locals:         0       0       0       0
  1129 ;;      Temps:          0       0       0       0
  1130 ;;      Totals:         0       0       0       0
  1131 ;;Total ram usage:        0 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    3
  1134 ;; This function calls:
  1135 ;;		_checkKey
  1136 ;;		_printf
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _tuningCheck
  1144  05B9                     _tuningCheck:	
  1145                           
  1146                           ;main.c: 147: if (checkKey(21) && checkKey(22)) {
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _tuningCheck: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1150  05B9  3015               	movlw	21
  1151  05BA  118A  219B  118A   	fcall	_checkKey
  1152  05BD  3A00               	xorlw	0
  1153  05BE  1903               	skipnz
  1154  05BF  0008               	return
  1155  05C0  3016               	movlw	22
  1156  05C1  118A  219B  118A   	fcall	_checkKey
  1157  05C4  3A00               	xorlw	0
  1158  05C5  1903               	skipnz
  1159  05C6  0008               	return
  1160                           
  1161                           ;main.c: 148: in_tuning_mode = 1;
  1162  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1163  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1164  05C9  01C6               	clrf	_in_tuning_mode
  1165  05CA  0AC6               	incf	_in_tuning_mode,f
  1166                           
  1167                           ;main.c: 149: printf("\n\rEntering tuning mode...\n\r");
  1168  05CB  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1169  05CC  118A  20E6         	fcall	_printf
  1170  05CE  0008               	return
  1171  05CF                     __end_of_tuningCheck:	
  1172                           
  1173                           	psect	text2
  1174  022F                     __ptext2:	
  1175 ;; *************** function _tune *****************
  1176 ;; Defined at:
  1177 ;;		line 179 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;		None               void
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1191 ;;      Params:         0       0       0       0
  1192 ;;      Locals:         0       0       0       0
  1193 ;;      Temps:          0       4       0       0
  1194 ;;      Totals:         0       4       0       0
  1195 ;;Total ram usage:        4 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    2
  1198 ;; This function calls:
  1199 ;;		_checkKey
  1200 ;;		_tune_down
  1201 ;;		_tune_up
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _tune
  1209  022F                     _tune:	
  1210                           
  1211                           ;main.c: 180: _delay((unsigned long)((100)*(8000000L/4000.0)));
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _tune: [wreg+status,2+status,0+pclath+cstack]
  1215  022F  3002               	movlw	2
  1216  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0232  00A2               	movwf	??_tune+2
  1219  0233  3004               	movlw	4
  1220  0234  00A1               	movwf	??_tune+1
  1221  0235  30BA               	movlw	186
  1222  0236  00A0               	movwf	??_tune
  1223  0237                     u1697:	
  1224  0237  0BA0               	decfsz	??_tune,f
  1225  0238  2A37               	goto	u1697
  1226  0239  0BA1               	decfsz	??_tune+1,f
  1227  023A  2A37               	goto	u1697
  1228  023B  0BA2               	decfsz	??_tune+2,f
  1229  023C  2A37               	goto	u1697
  1230  023D  0000               	nop
  1231                           
  1232                           ;main.c: 182: for (current_key = 0; current_key < key_count; current_key += 1) {
  1233  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1234  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0240  01C5               	clrf	_current_key
  1236  0241  2A68               	goto	l1419
  1237  0242                     l1405:	
  1238                           ;main.c: 187: break;
  1239                           
  1240                           
  1241                           ;main.c: 188: }
  1242                           ;main.c: 191: if (current_key == 19) {
  1243  0242  3013               	movlw	19
  1244  0243  0645               	xorwf	_current_key,w
  1245  0244  1D03               	btfss	3,2
  1246  0245  2A4A               	goto	l121
  1247                           
  1248                           ;main.c: 192: currently_tuning += 1;
  1249  0246  3001               	movlw	1
  1250  0247  00A0               	movwf	??_tune
  1251  0248  0820               	movf	??_tune,w
  1252  0249  07F9               	addwf	_currently_tuning,f
  1253  024A                     l121:	
  1254                           
  1255                           ;main.c: 193: }
  1256                           ;main.c: 194: if (current_key == 17) {
  1257  024A  3011               	movlw	17
  1258  024B  0645               	xorwf	_current_key,w
  1259  024C  1D03               	btfss	3,2
  1260  024D  2A52               	goto	l122
  1261                           
  1262                           ;main.c: 195: currently_tuning -= 1;
  1263  024E  30FF               	movlw	255
  1264  024F  00A0               	movwf	??_tune
  1265  0250  0820               	movf	??_tune,w
  1266  0251  07F9               	addwf	_currently_tuning,f
  1267  0252                     l122:	
  1268                           
  1269                           ;main.c: 196: }
  1270                           ;main.c: 199: if (current_key == 18) {
  1271  0252  3012               	movlw	18
  1272  0253  0645               	xorwf	_current_key,w
  1273  0254  1D03               	btfss	3,2
  1274  0255  2A59               	goto	l1413
  1275                           
  1276                           ;main.c: 200: tune_down();
  1277  0256  118A  25F2  118A   	fcall	_tune_down
  1278  0259                     l1413:	
  1279                           
  1280                           ;main.c: 201: }
  1281                           ;main.c: 202: if (current_key == 20) {
  1282  0259  3014               	movlw	20
  1283  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1284  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1285  025C  0645               	xorwf	_current_key,w
  1286  025D  1D03               	btfss	3,2
  1287  025E  2A62               	goto	l1417
  1288                           
  1289                           ;main.c: 203: tune_up();
  1290  025F  118A  25F1  118A   	fcall	_tune_up
  1291  0262                     l1417:	
  1292  0262  3001               	movlw	1
  1293  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0265  00A0               	movwf	??_tune
  1296  0266  0820               	movf	??_tune,w
  1297  0267  07C5               	addwf	_current_key,f
  1298  0268                     l1419:	
  1299  0268  0845               	movf	_current_key,w
  1300  0269  00A0               	movwf	??_tune
  1301  026A  01A1               	clrf	??_tune+1
  1302  026B  0848               	movf	_key_count+1,w
  1303  026C  0221               	subwf	??_tune+1,w
  1304  026D  1D03               	skipz
  1305  026E  2A71               	goto	u1295
  1306  026F  0847               	movf	_key_count,w
  1307  0270  0220               	subwf	??_tune,w
  1308  0271                     u1295:	
  1309  0271  1803               	btfsc	3,0
  1310  0272  2A80               	goto	l120
  1311                           
  1312                           ;main.c: 183: if (checkKey(current_key)) {
  1313  0273  0845               	movf	_current_key,w
  1314  0274  118A  219B  118A   	fcall	_checkKey
  1315  0277  3A00               	xorlw	0
  1316  0278  1903               	skipnz
  1317  0279  2A62               	goto	l1417
  1318                           
  1319                           ;main.c: 185: if (current_key == 0) {
  1320  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1321  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1322  027C  0845               	movf	_current_key,w
  1323  027D  1D03               	btfss	3,2
  1324  027E  2A42               	goto	l1405
  1325                           
  1326                           ;main.c: 186: in_tuning_mode = 0;
  1327  027F  01C6               	clrf	_in_tuning_mode
  1328  0280                     l120:	
  1329                           
  1330                           ;main.c: 204: }
  1331                           ;main.c: 206: }
  1332                           ;main.c: 207: }
  1333                           ;main.c: 208: if (currently_tuning < 0) {
  1334  0280  1FF9               	btfss	_currently_tuning,7
  1335  0281  2A84               	goto	l1423
  1336                           
  1337                           ;main.c: 209: currently_tuning = 0;
  1338  0282  01F9               	clrf	_currently_tuning
  1339                           
  1340                           ;main.c: 210: } else if (currently_tuning > key_count-1) {
  1341  0283  0008               	return
  1342  0284                     l1423:	
  1343  0284  0879               	movf	_currently_tuning,w
  1344  0285  00A0               	movwf	??_tune
  1345  0286  01A1               	clrf	??_tune+1
  1346  0287  1BA0               	btfsc	??_tune,7
  1347  0288  03A1               	decf	??_tune+1,f
  1348  0289  0847               	movf	_key_count,w
  1349  028A  3EFF               	addlw	255
  1350  028B  00A2               	movwf	??_tune+2
  1351  028C  0848               	movf	_key_count+1,w
  1352  028D  1803               	skipnc
  1353  028E  3E01               	addlw	1
  1354  028F  3EFF               	addlw	255
  1355  0290  00A3               	movwf	??_tune+3
  1356  0291  0821               	movf	??_tune+1,w
  1357  0292  0223               	subwf	??_tune+3,w
  1358  0293  1D03               	skipz
  1359  0294  2A97               	goto	u1315
  1360  0295  0820               	movf	??_tune,w
  1361  0296  0222               	subwf	??_tune+2,w
  1362  0297                     u1315:	
  1363  0297  1803               	skipnc
  1364  0298  0008               	return
  1365                           
  1366                           ;main.c: 211: currently_tuning = key_count-1;
  1367  0299  0847               	movf	_key_count,w
  1368  029A  3EFF               	addlw	-1
  1369  029B  00A0               	movwf	??_tune
  1370  029C  0820               	movf	??_tune,w
  1371  029D  00F9               	movwf	_currently_tuning
  1372  029E  0008               	return
  1373  029F                     __end_of_tune:	
  1374                           
  1375                           	psect	text3
  1376  05F1                     __ptext3:	
  1377 ;; *************** function _tune_up *****************
  1378 ;; Defined at:
  1379 ;;		line 176 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		None
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1393 ;;      Params:         0       0       0       0
  1394 ;;      Locals:         0       0       0       0
  1395 ;;      Temps:          0       0       0       0
  1396 ;;      Totals:         0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_tune
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _tune_up
  1409  05F1                     _tune_up:	
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _tune_up: []
  1413  05F1  0008               	return
  1414  05F2                     __end_of_tune_up:	
  1415                           
  1416                           	psect	text4
  1417  05F2                     __ptext4:	
  1418 ;; *************** function _tune_down *****************
  1419 ;; Defined at:
  1420 ;;		line 173 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;		None               void
  1427 ;; Registers used:
  1428 ;;		None
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1434 ;;      Params:         0       0       0       0
  1435 ;;      Locals:         0       0       0       0
  1436 ;;      Temps:          0       0       0       0
  1437 ;;      Totals:         0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_tune
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _tune_down
  1450  05F2                     _tune_down:	
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _tune_down: []
  1454  05F2  0008               	return
  1455  05F3                     __end_of_tune_down:	
  1456                           
  1457                           	psect	text5
  1458  03A0                     __ptext5:	
  1459 ;; *************** function _save_tuning *****************
  1460 ;; Defined at:
  1461 ;;		line 162 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  value           2   27[BANK0 ] unsigned int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1475 ;;      Params:         0       0       0       0
  1476 ;;      Locals:         0       2       0       0
  1477 ;;      Temps:          0       2       0       0
  1478 ;;      Totals:         0       4       0       0
  1479 ;;Total ram usage:        4 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		_eeprom_write
  1484 ;;		_printf
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _save_tuning
  1492  03A0                     _save_tuning:	
  1493                           
  1494                           ;main.c: 163: for (current_key = 0; current_key < key_count; current_key += 1) {
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _save_tuning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1498  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1499  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1500  03A2  01C5               	clrf	_current_key
  1501  03A3                     l1695:	
  1502  03A3  0845               	movf	_current_key,w
  1503  03A4  00B9               	movwf	??_save_tuning
  1504  03A5  01BA               	clrf	??_save_tuning+1
  1505  03A6  0848               	movf	_key_count+1,w
  1506  03A7  023A               	subwf	??_save_tuning+1,w
  1507  03A8  1D03               	skipz
  1508  03A9  2BAC               	goto	u1635
  1509  03AA  0847               	movf	_key_count,w
  1510  03AB  0239               	subwf	??_save_tuning,w
  1511  03AC                     u1635:	
  1512  03AC  1803               	btfsc	3,0
  1513  03AD  0008               	return
  1514                           
  1515                           ;main.c: 164: uint16_t value = tuning[current_key];
  1516  03AE  0845               	movf	_current_key,w
  1517  03AF  00B9               	movwf	??_save_tuning
  1518  03B0  0739               	addwf	??_save_tuning,w
  1519  03B1  3EA0               	addlw	(low (_tuning| 0))& (0+255)
  1520  03B2  0084               	movwf	4
  1521  03B3  1383               	bcf	3,7	;select IRP bank1
  1522  03B4  0800               	movf	0,w
  1523  03B5  00BB               	movwf	save_tuning@value
  1524  03B6  0A84               	incf	4,f
  1525  03B7  0800               	movf	0,w
  1526  03B8  00BC               	movwf	save_tuning@value+1
  1527                           
  1528                           ;main.c: 165: printf("Writing value: %i", value);
  1529  03B9  083C               	movf	save_tuning@value+1,w
  1530  03BA  00AA               	movwf	?_printf+1
  1531  03BB  083B               	movf	save_tuning@value,w
  1532  03BC  00A9               	movwf	?_printf
  1533  03BD  309A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1534  03BE  118A  20E6  118A   	fcall	_printf
  1535                           
  1536                           ;main.c: 166: eeprom_write(current_key, value);
  1537  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1538  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1539  03C3  083B               	movf	save_tuning@value,w
  1540  03C4  00B9               	movwf	??_save_tuning
  1541  03C5  0839               	movf	??_save_tuning,w
  1542  03C6  00F4               	movwf	eeprom_write@value
  1543  03C7  0845               	movf	_current_key,w
  1544  03C8  118A  2552  118A   	fcall	_eeprom_write
  1545                           
  1546                           ;main.c: 167: while(WR){
  1547  03CB  2BD0               	goto	l1689
  1548  03CC                     l1687:	
  1549                           
  1550                           ;main.c: 168: printf(".");
  1551  03CC  30B4               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1552  03CD  118A  20E6  118A   	fcall	_printf
  1553  03D0                     l1689:	
  1554  03D0  1683               	bsf	3,5	;RP0=1, select bank3
  1555  03D1  1703               	bsf	3,6	;RP1=1, select bank3
  1556  03D2  188C               	btfsc	12,1	;volsfr
  1557  03D3  2BCC               	goto	l1687
  1558                           
  1559                           ;main.c: 169: }
  1560                           ;main.c: 170: printf("Done!\n\r");
  1561  03D4  30AC               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1562  03D5  118A  20E6  118A   	fcall	_printf
  1563  03D8  3001               	movlw	1
  1564  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1565  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1566  03DB  00B9               	movwf	??_save_tuning
  1567  03DC  0839               	movf	??_save_tuning,w
  1568  03DD  07C5               	addwf	_current_key,f
  1569  03DE  2BA3               	goto	l1695
  1570  03DF                     __end_of_save_tuning:	
  1571                           
  1572                           	psect	text6
  1573  0552                     __ptext6:	
  1574 ;; *************** function _eeprom_write *****************
  1575 ;; Defined at:
  1576 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/pic/eewrite.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  addr            1    wreg     unsigned char 
  1579 ;;  value           1    4[COMMON] unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  addr            1    6[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;		None               void
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1591 ;;      Params:         1       0       0       0
  1592 ;;      Locals:         1       0       0       0
  1593 ;;      Temps:          1       0       0       0
  1594 ;;      Totals:         3       0       0       0
  1595 ;;Total ram usage:        3 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_save_tuning
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _eeprom_write
  1607  0552                     _eeprom_write:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1611                           ;eeprom_write@addr stored from wreg
  1612  0552  00F6               	movwf	eeprom_write@addr
  1613  0553                     l261:	
  1614  0553  1683               	bsf	3,5	;RP0=1, select bank3
  1615  0554  1703               	bsf	3,6	;RP1=1, select bank3
  1616  0555  188C               	btfsc	12,1	;volsfr
  1617  0556  2D53               	goto	l261
  1618  0557  0876               	movf	eeprom_write@addr,w
  1619  0558  1283               	bcf	3,5	;RP0=0, select bank2
  1620  0559  1703               	bsf	3,6	;RP1=1, select bank2
  1621  055A  008D               	movwf	13	;volatile
  1622  055B  0874               	movf	eeprom_write@value,w
  1623  055C  008C               	movwf	12	;volatile
  1624  055D  303F               	movlw	63
  1625  055E  00F5               	movwf	??_eeprom_write
  1626  055F  0875               	movf	??_eeprom_write,w
  1627  0560  1683               	bsf	3,5	;RP0=1, select bank3
  1628  0561  1703               	bsf	3,6	;RP1=1, select bank3
  1629  0562  058C               	andwf	12,f	;volsfr
  1630  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0565  1003               	bcf	3,0	;volatile
  1633  0566  1B8B               	btfsc	11,7	;volatile
  1634  0567  1403               	bsf	3,0	;volatile
  1635  0568  138B               	bcf	11,7	;volatile
  1636  0569  1683               	bsf	3,5	;RP0=1, select bank3
  1637  056A  1703               	bsf	3,6	;RP1=1, select bank3
  1638  056B  150C               	bsf	12,2	;volsfr
  1639  056C  3055               	movlw	85
  1640  056D  008D               	movwf	13	;volsfr
  1641  056E  30AA               	movlw	170
  1642  056F  008D               	movwf	13	;volsfr
  1643  0570  148C               	bsf	12,1	;volsfr
  1644  0571  110C               	bcf	12,2	;volsfr
  1645  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0574  1C03               	btfss	3,0	;volatile
  1648  0575  0008               	return
  1649  0576  178B               	bsf	11,7	;volatile
  1650  0577  0008               	return
  1651  0578                     __end_of_eeprom_write:	
  1652                           
  1653                           	psect	text7
  1654  0527                     __ptext7:	
  1655 ;; *************** function _print_tuning *****************
  1656 ;; Defined at:
  1657 ;;		line 157 in file "main.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;		None               void
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       0       0       0
  1672 ;;      Locals:         0       0       0       0
  1673 ;;      Temps:          0       3       0       0
  1674 ;;      Totals:         0       3       0       0
  1675 ;;Total ram usage:        3 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		_printf
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _print_tuning
  1687  0527                     _print_tuning:	
  1688                           
  1689                           ;main.c: 158: for (current_key = 0; current_key < key_count; current_key += 1) {
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _print_tuning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1693  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0529  01C5               	clrf	_current_key
  1696  052A                     l1677:	
  1697  052A  0845               	movf	_current_key,w
  1698  052B  00B9               	movwf	??_print_tuning
  1699  052C  01BA               	clrf	??_print_tuning+1
  1700  052D  0848               	movf	_key_count+1,w
  1701  052E  023A               	subwf	??_print_tuning+1,w
  1702  052F  1D03               	skipz
  1703  0530  2D33               	goto	u1615
  1704  0531  0847               	movf	_key_count,w
  1705  0532  0239               	subwf	??_print_tuning,w
  1706  0533                     u1615:	
  1707  0533  1803               	btfsc	3,0
  1708  0534  0008               	return
  1709                           
  1710                           ;main.c: 159: printf("Note: %i\t Value: %i\n\r",current_key, tuning[current_key]);
  1711  0535  0845               	movf	_current_key,w
  1712  0536  00B9               	movwf	??_print_tuning
  1713  0537  01BA               	clrf	??_print_tuning+1
  1714  0538  0839               	movf	??_print_tuning,w
  1715  0539  00A9               	movwf	?_printf
  1716  053A  083A               	movf	??_print_tuning+1,w
  1717  053B  00AA               	movwf	?_printf+1
  1718  053C  0845               	movf	_current_key,w
  1719  053D  00BB               	movwf	??_print_tuning+2
  1720  053E  073B               	addwf	??_print_tuning+2,w
  1721  053F  3EA0               	addlw	(low (_tuning| 0))& (0+255)
  1722  0540  0084               	movwf	4
  1723  0541  1383               	bcf	3,7	;select IRP bank1
  1724  0542  0800               	movf	0,w
  1725  0543  00AB               	movwf	?_printf+2
  1726  0544  0A84               	incf	4,f
  1727  0545  0800               	movf	0,w
  1728  0546  00AC               	movwf	?_printf+3
  1729  0547  3084               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1730  0548  118A  20E6  118A   	fcall	_printf
  1731  054B  3001               	movlw	1
  1732  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1733  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1734  054E  00B9               	movwf	??_print_tuning
  1735  054F  0839               	movf	??_print_tuning,w
  1736  0550  07C5               	addwf	_current_key,f
  1737  0551  2D2A               	goto	l1677
  1738  0552                     __end_of_print_tuning:	
  1739                           
  1740                           	psect	text8
  1741  029F                     __ptext8:	
  1742 ;; *************** function _play *****************
  1743 ;; Defined at:
  1744 ;;		line 215 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  real_value      2   28[BANK0 ] unsigned int 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;		None               void
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1758 ;;      Params:         0       0       0       0
  1759 ;;      Locals:         0       2       0       0
  1760 ;;      Temps:          0       2       0       0
  1761 ;;      Totals:         0       4       0       0
  1762 ;;Total ram usage:        4 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    3
  1765 ;; This function calls:
  1766 ;;		_SPI_Write
  1767 ;;		_checkKey
  1768 ;;		_get_voltage
  1769 ;;		_printf
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           
  1776                           ;psect for function _play
  1777  029F                     _play:	
  1778                           
  1779                           ;main.c: 216: pressed_keys = 0;
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _play: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1783  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1784  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1785  02A1  01C3               	clrf	_pressed_keys
  1786  02A2  01C4               	clrf	_pressed_keys+1
  1787                           
  1788                           ;main.c: 217: last_key = 100;
  1789  02A3  3064               	movlw	100
  1790  02A4  00C1               	movwf	_last_key
  1791  02A5  3000               	movlw	0
  1792  02A6  00C2               	movwf	_last_key+1
  1793                           
  1794                           ;main.c: 218: for (current_key = 0; current_key < key_count; current_key += 1) {
  1795  02A7  01C5               	clrf	_current_key
  1796  02A8                     l1709:	
  1797  02A8  0845               	movf	_current_key,w
  1798  02A9  00BA               	movwf	??_play
  1799  02AA  01BB               	clrf	??_play+1
  1800  02AB  0848               	movf	_key_count+1,w
  1801  02AC  023B               	subwf	??_play+1,w
  1802  02AD  1D03               	skipz
  1803  02AE  2AB1               	goto	u1655
  1804  02AF  0847               	movf	_key_count,w
  1805  02B0  023A               	subwf	??_play,w
  1806  02B1                     u1655:	
  1807  02B1  1803               	btfsc	3,0
  1808  02B2  2AD0               	goto	l1711
  1809                           
  1810                           ;main.c: 220: if (checkKey(current_key)) {
  1811  02B3  0845               	movf	_current_key,w
  1812  02B4  118A  219B  118A   	fcall	_checkKey
  1813  02B7  3A00               	xorlw	0
  1814  02B8  1903               	skipnz
  1815  02B9  2AC9               	goto	l1707
  1816                           
  1817                           ;main.c: 221: pressed_keys += 1;
  1818  02BA  3001               	movlw	1
  1819  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1820  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1821  02BD  07C3               	addwf	_pressed_keys,f
  1822  02BE  1803               	skipnc
  1823  02BF  0AC4               	incf	_pressed_keys+1,f
  1824  02C0  3000               	movlw	0
  1825  02C1  07C4               	addwf	_pressed_keys+1,f
  1826                           
  1827                           ;main.c: 222: last_key = current_key;
  1828  02C2  0845               	movf	_current_key,w
  1829  02C3  00BA               	movwf	??_play
  1830  02C4  01BB               	clrf	??_play+1
  1831  02C5  083A               	movf	??_play,w
  1832  02C6  00C1               	movwf	_last_key
  1833  02C7  083B               	movf	??_play+1,w
  1834  02C8  00C2               	movwf	_last_key+1
  1835  02C9                     l1707:	
  1836  02C9  3001               	movlw	1
  1837  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1838  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1839  02CC  00BA               	movwf	??_play
  1840  02CD  083A               	movf	??_play,w
  1841  02CE  07C5               	addwf	_current_key,f
  1842  02CF  2AA8               	goto	l1709
  1843  02D0                     l1711:	
  1844                           
  1845                           ;main.c: 223: }
  1846                           ;main.c: 225: }
  1847                           ;main.c: 227: if (pressed_keys > 0) {
  1848  02D0  0843               	movf	_pressed_keys,w
  1849  02D1  0444               	iorwf	_pressed_keys+1,w
  1850  02D2  1903               	btfsc	3,2
  1851  02D3  2AFD               	goto	l135
  1852                           
  1853                           ;main.c: 228: PORTCbits.RC5 = 1;
  1854  02D4  1687               	bsf	7,5	;volatile
  1855                           
  1856                           ;main.c: 230: uint16_t real_value = get_voltage(last_key);
  1857  02D5  0841               	movf	_last_key,w
  1858  02D6  00B6               	movwf	get_voltage@keyCode
  1859  02D7  0842               	movf	_last_key+1,w
  1860  02D8  00B7               	movwf	get_voltage@keyCode+1
  1861  02D9  01B8               	clrf	get_voltage@keyCode+2
  1862  02DA  01B9               	clrf	get_voltage@keyCode+3
  1863  02DB  118A  2491  118A   	fcall	_get_voltage
  1864  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1865  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1866  02E0  0837               	movf	?_get_voltage+1,w
  1867  02E1  00BD               	movwf	play@real_value+1
  1868  02E2  0836               	movf	?_get_voltage,w
  1869  02E3  00BC               	movwf	play@real_value
  1870                           
  1871                           ;main.c: 231: printf("Last Key: %i \t Real Value: %i  \t Pressed Keys: %i \n\r", last_ke
      +                          y, real_value, pressed_keys);
  1872  02E4  0842               	movf	_last_key+1,w
  1873  02E5  00AA               	movwf	?_printf+1
  1874  02E6  0841               	movf	_last_key,w
  1875  02E7  00A9               	movwf	?_printf
  1876  02E8  083D               	movf	play@real_value+1,w
  1877  02E9  00AC               	movwf	?_printf+3
  1878  02EA  083C               	movf	play@real_value,w
  1879  02EB  00AB               	movwf	?_printf+2
  1880  02EC  0844               	movf	_pressed_keys+1,w
  1881  02ED  00AE               	movwf	?_printf+5
  1882  02EE  0843               	movf	_pressed_keys,w
  1883  02EF  00AD               	movwf	?_printf+4
  1884  02F0  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1885  02F1  118A  20E6  118A   	fcall	_printf
  1886                           
  1887                           ;main.c: 232: SPI_Write(real_value);
  1888  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1889  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1890  02F6  083D               	movf	play@real_value+1,w
  1891  02F7  00F5               	movwf	SPI_Write@data+1
  1892  02F8  083C               	movf	play@real_value,w
  1893  02F9  00F4               	movwf	SPI_Write@data
  1894  02FA  118A  24FB         	fcall	_SPI_Write
  1895                           
  1896                           ;main.c: 233: } else {
  1897  02FC  0008               	return
  1898  02FD                     l135:	
  1899                           
  1900                           ;main.c: 234: PORTCbits.RC5 = 0;
  1901  02FD  1287               	bcf	7,5	;volatile
  1902  02FE  0008               	return
  1903  02FF                     __end_of_play:	
  1904                           
  1905                           	psect	text9
  1906  00E6                     __ptext9:	
  1907 ;; *************** function _printf *****************
  1908 ;; Defined at:
  1909 ;;		line 464 in file "/Applications/microchip/xc8/v1.34/sources/common/doprnt.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  f               1    wreg     PTR const unsigned char 
  1912 ;;		 -> STR_7(40), STR_6(53), STR_5(8), STR_4(2), 
  1913 ;;		 -> STR_3(18), STR_2(22), STR_1(28), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  f               1   21[BANK0 ] PTR const unsigned char 
  1916 ;;		 -> STR_7(40), STR_6(53), STR_5(8), STR_4(2), 
  1917 ;;		 -> STR_3(18), STR_2(22), STR_1(28), 
  1918 ;;  tmpval          4    0        struct .
  1919 ;;  val             2   22[BANK0 ] unsigned int 
  1920 ;;  cp              2    0        PTR const unsigned char 
  1921 ;;  len             2    0        unsigned int 
  1922 ;;  c               1   24[BANK0 ] char 
  1923 ;;  prec            1   20[BANK0 ] char 
  1924 ;;  flag            1   19[BANK0 ] unsigned char 
  1925 ;;  ap              1   18[BANK0 ] PTR void [1]
  1926 ;;		 -> ?_printf(2), 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2    9[BANK0 ] int 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1936 ;;      Params:         0       6       0       0
  1937 ;;      Locals:         0       7       0       0
  1938 ;;      Temps:          0       3       0       0
  1939 ;;      Totals:         0      16       0       0
  1940 ;;Total ram usage:       16 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    2
  1943 ;; This function calls:
  1944 ;;		___lwdiv
  1945 ;;		___lwmod
  1946 ;;		_putch
  1947 ;; This function is called by:
  1948 ;;		_tuningCheck
  1949 ;;		_print_tuning
  1950 ;;		_save_tuning
  1951 ;;		_play
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _printf
  1958  00E6                     _printf:	
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1962                           ;printf@f stored from wreg
  1963  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1964  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1965  00E8  00B5               	movwf	printf@f
  1966                           
  1967                           ;doprnt.c: 466: va_list ap;
  1968                           ;doprnt.c: 499: signed char c;
  1969                           ;doprnt.c: 506: signed char prec;
  1970                           ;doprnt.c: 508: unsigned char flag;
  1971                           ;doprnt.c: 523: union {
  1972                           ;doprnt.c: 524: unsigned long vd;
  1973                           ;doprnt.c: 525: double integ;
  1974                           ;doprnt.c: 526: } tmpval;
  1975                           ;doprnt.c: 528: unsigned int val;
  1976                           ;doprnt.c: 529: unsigned len;
  1977                           ;doprnt.c: 530: const char * cp;
  1978                           ;doprnt.c: 533: *ap = __va_start();
  1979  00E9  3029               	movlw	(low (?_printf| 0))& (0+255)
  1980  00EA  00AF               	movwf	??_printf
  1981  00EB  082F               	movf	??_printf,w
  1982  00EC  00B2               	movwf	printf@ap
  1983  00ED                     l1661:	
  1984                           ;doprnt.c: 536: while(c = *f++) {
  1985                           
  1986  00ED  3001               	movlw	1
  1987  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1988  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1989  00F0  07B5               	addwf	printf@f,f
  1990  00F1  30FF               	movlw	-1
  1991  00F2  0735               	addwf	printf@f,w
  1992  00F3  0084               	movwf	4
  1993  00F4  118A  202B  118A   	fcall	stringdir
  1994  00F7  00AF               	movwf	??_printf
  1995  00F8  082F               	movf	??_printf,w
  1996  00F9  00B8               	movwf	printf@c
  1997  00FA  0838               	movf	printf@c,w
  1998  00FB  1903               	btfsc	3,2
  1999  00FC  0008               	return
  2000                           
  2001                           ;doprnt.c: 538: if(c != '%')
  2002  00FD  3025               	movlw	37
  2003  00FE  0638               	xorwf	printf@c,w
  2004  00FF  1903               	btfsc	3,2
  2005  0100  2906               	goto	l1621
  2006                           
  2007                           ;doprnt.c: 540: {
  2008                           ;doprnt.c: 541: (putch(c) );
  2009  0101  0838               	movf	printf@c,w
  2010  0102  118A  25E2  118A   	fcall	_putch
  2011                           
  2012                           ;doprnt.c: 542: continue;
  2013  0105  28ED               	goto	l1661
  2014  0106                     l1621:	
  2015                           
  2016                           ;doprnt.c: 543: }
  2017                           ;doprnt.c: 548: flag = 0;
  2018  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0108  01B3               	clrf	printf@flag
  2021                           
  2022                           ;doprnt.c: 822: }
  2023                           
  2024                           ;doprnt.c: 813: continue;
  2025                           
  2026                           ;doprnt.c: 802: default:
  2027                           
  2028                           ;doprnt.c: 698: case 'i':
  2029                           ;doprnt.c: 699: break;
  2030                           
  2031                           ;doprnt.c: 697: case 'd':
  2032                           
  2033                           ;doprnt.c: 638: goto alldone;
  2034                           
  2035                           ;doprnt.c: 637: case 0:
  2036                           
  2037                           ;doprnt.c: 635: switch(c = *f++) {
  2038  0109  3001               	movlw	1
  2039  010A  07B5               	addwf	printf@f,f
  2040  010B  30FF               	movlw	-1
  2041  010C  0735               	addwf	printf@f,w
  2042  010D  0084               	movwf	4
  2043  010E  118A  202B  118A   	fcall	stringdir
  2044  0111  00B8               	movwf	printf@c
  2045                           
  2046                           ; Switch size 1, requested type "space"
  2047                           ; Number of cases is 3, Range of values is 0 to 105
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte           10     6 (average)
  2051                           ; direct_byte          219     7 (fixed)
  2052                           ; jumptable            260     6 (fixed)
  2053                           ;	Chosen strategy is simple_byte
  2054  0112  3A00               	xorlw	0	; case 0
  2055  0113  1903               	skipnz
  2056  0114  299A               	goto	l226
  2057  0115  3A64               	xorlw	100	; case 100
  2058  0116  1903               	skipnz
  2059  0117  291C               	goto	l1627
  2060  0118  3A0D               	xorlw	13	; case 105
  2061  0119  1903               	skipnz
  2062  011A  291C               	goto	l1627
  2063  011B  28ED               	goto	l1661
  2064  011C                     l1627:	
  2065                           
  2066                           ;doprnt.c: 1253: {
  2067                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2068  011C  0832               	movf	printf@ap,w
  2069  011D  0084               	movwf	4
  2070  011E  1383               	bcf	3,7	;select IRP bank0
  2071  011F  0800               	movf	0,w
  2072  0120  00B6               	movwf	printf@val
  2073  0121  0A84               	incf	4,f
  2074  0122  0800               	movf	0,w
  2075  0123  00B7               	movwf	printf@val+1
  2076  0124  3002               	movlw	2
  2077  0125  00AF               	movwf	??_printf
  2078  0126  082F               	movf	??_printf,w
  2079  0127  07B2               	addwf	printf@ap,f
  2080                           
  2081                           ;doprnt.c: 1261: if((int)val < 0) {
  2082  0128  1FB7               	btfss	printf@val+1,7
  2083  0129  2933               	goto	l1637
  2084                           
  2085                           ;doprnt.c: 1262: flag |= 0x03;
  2086  012A  3003               	movlw	3
  2087  012B  00AF               	movwf	??_printf
  2088  012C  082F               	movf	??_printf,w
  2089  012D  04B3               	iorwf	printf@flag,f
  2090                           
  2091                           ;doprnt.c: 1263: val = -val;
  2092  012E  09B6               	comf	printf@val,f
  2093  012F  09B7               	comf	printf@val+1,f
  2094  0130  0AB6               	incf	printf@val,f
  2095  0131  1903               	skipnz
  2096  0132  0AB7               	incf	printf@val+1,f
  2097  0133                     l1637:	
  2098                           
  2099                           ;doprnt.c: 1264: }
  2100                           ;doprnt.c: 1266: }
  2101                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2102  0133  01B8               	clrf	printf@c
  2103  0134  0AB8               	incf	printf@c,f
  2104  0135  3005               	movlw	5
  2105  0136  0638               	xorwf	printf@c,w
  2106  0137  1903               	btfsc	3,2
  2107  0138  2956               	goto	l1649
  2108  0139                     l1643:	
  2109                           
  2110                           ;doprnt.c: 1306: if(val < dpowers[c])
  2111  0139  0838               	movf	printf@c,w
  2112  013A  00AF               	movwf	??_printf
  2113  013B  072F               	addwf	??_printf,w
  2114  013C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2115  013D  0084               	movwf	4
  2116  013E  118A  202B  118A   	fcall	stringdir
  2117  0141  00B0               	movwf	??_printf+1
  2118  0142  118A  202B  118A   	fcall	stringdir
  2119  0145  00B1               	movwf	??_printf+2
  2120  0146  0831               	movf	??_printf+2,w
  2121  0147  0237               	subwf	printf@val+1,w
  2122  0148  1D03               	skipz
  2123  0149  294C               	goto	u1545
  2124  014A  0830               	movf	??_printf+1,w
  2125  014B  0236               	subwf	printf@val,w
  2126  014C                     u1545:	
  2127  014C  1C03               	btfss	3,0
  2128  014D  2956               	goto	l1649
  2129                           
  2130                           ;doprnt.c: 1307: break;
  2131  014E  3001               	movlw	1
  2132  014F  00AF               	movwf	??_printf
  2133  0150  082F               	movf	??_printf,w
  2134  0151  07B8               	addwf	printf@c,f
  2135  0152  3005               	movlw	5
  2136  0153  0638               	xorwf	printf@c,w
  2137  0154  1D03               	btfss	3,2
  2138  0155  2939               	goto	l1643
  2139  0156                     l1649:	
  2140                           
  2141                           ;doprnt.c: 1422: {
  2142                           ;doprnt.c: 1438: if(flag & 0x03)
  2143  0156  0833               	movf	printf@flag,w
  2144  0157  3903               	andlw	3
  2145  0158  1903               	btfsc	3,2
  2146  0159  295E               	goto	l1653
  2147                           
  2148                           ;doprnt.c: 1439: (putch('-') );
  2149  015A  302D               	movlw	45
  2150  015B  118A  25E2  118A   	fcall	_putch
  2151  015E                     l1653:	
  2152                           
  2153                           ;doprnt.c: 1469: }
  2154                           ;doprnt.c: 1472: prec = c;
  2155  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2156  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0160  0838               	movf	printf@c,w
  2158  0161  00AF               	movwf	??_printf
  2159  0162  082F               	movf	??_printf,w
  2160  0163  00B4               	movwf	printf@prec
  2161  0164                     l1659:	
  2162                           ;doprnt.c: 1474: while(prec--) {
  2163                           
  2164  0164  30FF               	movlw	255
  2165  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0167  00AF               	movwf	??_printf
  2168  0168  082F               	movf	??_printf,w
  2169  0169  07B4               	addwf	printf@prec,f
  2170  016A  0A34               	incf	printf@prec,w
  2171  016B  1903               	btfsc	3,2
  2172  016C  28ED               	goto	l1661
  2173                           
  2174                           ;doprnt.c: 1478: {
  2175                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2176  016D  300A               	movlw	10
  2177  016E  00A3               	movwf	___lwmod@divisor
  2178  016F  3000               	movlw	0
  2179  0170  00A4               	movwf	___lwmod@divisor+1
  2180  0171  0834               	movf	printf@prec,w
  2181  0172  00AF               	movwf	??_printf
  2182  0173  072F               	addwf	??_printf,w
  2183  0174  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2184  0175  0084               	movwf	4
  2185  0176  118A  202B  118A   	fcall	stringdir
  2186  0179  00F4               	movwf	___lwdiv@divisor
  2187  017A  118A  202B  118A   	fcall	stringdir
  2188  017D  00F5               	movwf	___lwdiv@divisor+1
  2189  017E  0837               	movf	printf@val+1,w
  2190  017F  00F7               	movwf	___lwdiv@dividend+1
  2191  0180  0836               	movf	printf@val,w
  2192  0181  00F6               	movwf	___lwdiv@dividend
  2193  0182  118A  23DF  118A   	fcall	___lwdiv
  2194  0185  0875               	movf	?___lwdiv+1,w
  2195  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0188  00A6               	movwf	___lwmod@dividend+1
  2198  0189  0874               	movf	?___lwdiv,w
  2199  018A  00A5               	movwf	___lwmod@dividend
  2200  018B  118A  24C7  118A   	fcall	___lwmod
  2201  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2202  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0190  0823               	movf	?___lwmod,w
  2204  0191  3E30               	addlw	48
  2205  0192  00B0               	movwf	??_printf+1
  2206  0193  0830               	movf	??_printf+1,w
  2207  0194  00B8               	movwf	printf@c
  2208                           
  2209                           ;doprnt.c: 1523: }
  2210                           ;doprnt.c: 1524: (putch(c) );
  2211  0195  0838               	movf	printf@c,w
  2212  0196  118A  25E2  118A   	fcall	_putch
  2213  0199  2964               	goto	l1659
  2214  019A                     l226:	
  2215                           ;doprnt.c: 1540: return 0;
  2216                           ;	Return value of _printf is never used
  2217                           
  2218                           ;doprnt.c: 1525: }
  2219                           ;doprnt.c: 1533: }
  2220                           ;doprnt.c: 1535: alldone:
  2221                           
  2222  019A  0008               	return
  2223  019B                     __end_of_printf:	
  2224                           
  2225                           	psect	text10
  2226  05E2                     __ptext10:	
  2227 ;; *************** function _putch *****************
  2228 ;; Defined at:
  2229 ;;		line 26 in file "main.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  data            1    wreg     unsigned char 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  data            1    4[COMMON] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2243 ;;      Params:         0       0       0       0
  2244 ;;      Locals:         1       0       0       0
  2245 ;;      Temps:          0       0       0       0
  2246 ;;      Totals:         1       0       0       0
  2247 ;;Total ram usage:        1 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_printf
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _putch
  2259  05E2                     _putch:	
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _putch: [wreg]
  2263                           ;putch@data stored from wreg
  2264  05E2  00F4               	movwf	putch@data
  2265  05E3                     l34:	
  2266                           ;main.c: 28: continue;
  2267                           
  2268                           ;main.c: 27: while( ! TXIF)
  2269                           
  2270  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2271  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2272  05E5  1E0C               	btfss	12,4	;volatile
  2273  05E6  2DE3               	goto	l34
  2274                           
  2275                           ;main.c: 29: TXREG = data;
  2276  05E7  0874               	movf	putch@data,w
  2277  05E8  0099               	movwf	25	;volatile
  2278  05E9  0008               	return
  2279  05EA                     __end_of_putch:	
  2280                           
  2281                           	psect	text11
  2282  04C7                     __ptext11:	
  2283 ;; *************** function ___lwmod *****************
  2284 ;; Defined at:
  2285 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwmod.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  divisor         2    3[BANK0 ] unsigned int 
  2288 ;;  dividend        2    5[BANK0 ] unsigned int 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  counter         1    8[BANK0 ] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2    3[BANK0 ] unsigned int 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2300 ;;      Params:         0       4       0       0
  2301 ;;      Locals:         0       1       0       0
  2302 ;;      Temps:          0       1       0       0
  2303 ;;      Totals:         0       6       0       0
  2304 ;;Total ram usage:        6 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_printf
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function ___lwmod
  2316  04C7                     ___lwmod:	
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2320  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2321  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2322  04C9  0823               	movf	___lwmod@divisor,w
  2323  04CA  0424               	iorwf	___lwmod@divisor+1,w
  2324  04CB  1903               	btfsc	3,2
  2325  04CC  2CF6               	goto	l1597
  2326  04CD  01A8               	clrf	___lwmod@counter
  2327  04CE  0AA8               	incf	___lwmod@counter,f
  2328  04CF                     l1587:	
  2329  04CF  1BA4               	btfsc	___lwmod@divisor+1,7
  2330  04D0  2CDD               	goto	l1589
  2331  04D1  3001               	movlw	1
  2332  04D2                     u1445:	
  2333  04D2  1003               	clrc
  2334  04D3  0DA3               	rlf	___lwmod@divisor,f
  2335  04D4  0DA4               	rlf	___lwmod@divisor+1,f
  2336  04D5  3EFF               	addlw	-1
  2337  04D6  1D03               	skipz
  2338  04D7  2CD2               	goto	u1445
  2339  04D8  3001               	movlw	1
  2340  04D9  00A7               	movwf	??___lwmod
  2341  04DA  0827               	movf	??___lwmod,w
  2342  04DB  07A8               	addwf	___lwmod@counter,f
  2343  04DC  2CCF               	goto	l1587
  2344  04DD                     l1589:	
  2345  04DD  0824               	movf	___lwmod@divisor+1,w
  2346  04DE  0226               	subwf	___lwmod@dividend+1,w
  2347  04DF  1D03               	skipz
  2348  04E0  2CE3               	goto	u1465
  2349  04E1  0823               	movf	___lwmod@divisor,w
  2350  04E2  0225               	subwf	___lwmod@dividend,w
  2351  04E3                     u1465:	
  2352  04E3  1C03               	skipc
  2353  04E4  2CEB               	goto	l1593
  2354  04E5  0823               	movf	___lwmod@divisor,w
  2355  04E6  02A5               	subwf	___lwmod@dividend,f
  2356  04E7  0824               	movf	___lwmod@divisor+1,w
  2357  04E8  1C03               	skipc
  2358  04E9  03A6               	decf	___lwmod@dividend+1,f
  2359  04EA  02A6               	subwf	___lwmod@dividend+1,f
  2360  04EB                     l1593:	
  2361  04EB  3001               	movlw	1
  2362  04EC                     u1475:	
  2363  04EC  1003               	clrc
  2364  04ED  0CA4               	rrf	___lwmod@divisor+1,f
  2365  04EE  0CA3               	rrf	___lwmod@divisor,f
  2366  04EF  3EFF               	addlw	-1
  2367  04F0  1D03               	skipz
  2368  04F1  2CEC               	goto	u1475
  2369  04F2  3001               	movlw	1
  2370  04F3  02A8               	subwf	___lwmod@counter,f
  2371  04F4  1D03               	btfss	3,2
  2372  04F5  2CDD               	goto	l1589
  2373  04F6                     l1597:	
  2374  04F6  0826               	movf	___lwmod@dividend+1,w
  2375  04F7  00A4               	movwf	?___lwmod+1
  2376  04F8  0825               	movf	___lwmod@dividend,w
  2377  04F9  00A3               	movwf	?___lwmod
  2378  04FA  0008               	return
  2379  04FB                     __end_of___lwmod:	
  2380                           
  2381                           	psect	text12
  2382  03DF                     __ptext12:	
  2383 ;; *************** function ___lwdiv *****************
  2384 ;; Defined at:
  2385 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  divisor         2    4[COMMON] unsigned int 
  2388 ;;  dividend        2    6[COMMON] unsigned int 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  quotient        2    0[BANK0 ] unsigned int 
  2391 ;;  counter         1    2[BANK0 ] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2    4[COMMON] unsigned int 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2401 ;;      Params:         4       0       0       0
  2402 ;;      Locals:         0       3       0       0
  2403 ;;      Temps:          1       0       0       0
  2404 ;;      Totals:         5       3       0       0
  2405 ;;Total ram usage:        8 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_printf
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function ___lwdiv
  2417  03DF                     ___lwdiv:	
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2421  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2422  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2423  03E1  01A0               	clrf	___lwdiv@quotient
  2424  03E2  01A1               	clrf	___lwdiv@quotient+1
  2425  03E3  0874               	movf	___lwdiv@divisor,w
  2426  03E4  0475               	iorwf	___lwdiv@divisor+1,w
  2427  03E5  1903               	btfsc	3,2
  2428  03E6  2C18               	goto	l1213
  2429  03E7  01A2               	clrf	___lwdiv@counter
  2430  03E8  0AA2               	incf	___lwdiv@counter,f
  2431  03E9                     l1201:	
  2432  03E9  1BF5               	btfsc	___lwdiv@divisor+1,7
  2433  03EA  2BF7               	goto	l1203
  2434  03EB  3001               	movlw	1
  2435  03EC                     u845:	
  2436  03EC  1003               	clrc
  2437  03ED  0DF4               	rlf	___lwdiv@divisor,f
  2438  03EE  0DF5               	rlf	___lwdiv@divisor+1,f
  2439  03EF  3EFF               	addlw	-1
  2440  03F0  1D03               	skipz
  2441  03F1  2BEC               	goto	u845
  2442  03F2  3001               	movlw	1
  2443  03F3  00F8               	movwf	??___lwdiv
  2444  03F4  0878               	movf	??___lwdiv,w
  2445  03F5  07A2               	addwf	___lwdiv@counter,f
  2446  03F6  2BE9               	goto	l1201
  2447  03F7                     l1203:	
  2448  03F7  3001               	movlw	1
  2449  03F8                     u865:	
  2450  03F8  1003               	clrc
  2451  03F9  0DA0               	rlf	___lwdiv@quotient,f
  2452  03FA  0DA1               	rlf	___lwdiv@quotient+1,f
  2453  03FB  3EFF               	addlw	-1
  2454  03FC  1D03               	skipz
  2455  03FD  2BF8               	goto	u865
  2456  03FE  0875               	movf	___lwdiv@divisor+1,w
  2457  03FF  0277               	subwf	___lwdiv@dividend+1,w
  2458  0400  1D03               	skipz
  2459  0401  2C04               	goto	u875
  2460  0402  0874               	movf	___lwdiv@divisor,w
  2461  0403  0276               	subwf	___lwdiv@dividend,w
  2462  0404                     u875:	
  2463  0404  1C03               	skipc
  2464  0405  2C0D               	goto	l1209
  2465  0406  0874               	movf	___lwdiv@divisor,w
  2466  0407  02F6               	subwf	___lwdiv@dividend,f
  2467  0408  0875               	movf	___lwdiv@divisor+1,w
  2468  0409  1C03               	skipc
  2469  040A  03F7               	decf	___lwdiv@dividend+1,f
  2470  040B  02F7               	subwf	___lwdiv@dividend+1,f
  2471  040C  1420               	bsf	___lwdiv@quotient,0
  2472  040D                     l1209:	
  2473  040D  3001               	movlw	1
  2474  040E                     u885:	
  2475  040E  1003               	clrc
  2476  040F  0CF5               	rrf	___lwdiv@divisor+1,f
  2477  0410  0CF4               	rrf	___lwdiv@divisor,f
  2478  0411  3EFF               	addlw	-1
  2479  0412  1D03               	skipz
  2480  0413  2C0E               	goto	u885
  2481  0414  3001               	movlw	1
  2482  0415  02A2               	subwf	___lwdiv@counter,f
  2483  0416  1D03               	btfss	3,2
  2484  0417  2BF7               	goto	l1203
  2485  0418                     l1213:	
  2486  0418  0821               	movf	___lwdiv@quotient+1,w
  2487  0419  00F5               	movwf	?___lwdiv+1
  2488  041A  0820               	movf	___lwdiv@quotient,w
  2489  041B  00F4               	movwf	?___lwdiv
  2490  041C  0008               	return
  2491  041D                     __end_of___lwdiv:	
  2492                           
  2493                           	psect	text13
  2494  0491                     __ptext13:	
  2495 ;; *************** function _get_voltage *****************
  2496 ;; Defined at:
  2497 ;;		line 124 in file "main.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  keyCode         4   22[BANK0 ] unsigned long 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  4   22[BANK0 ] unsigned long 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2511 ;;      Params:         0       4       0       0
  2512 ;;      Locals:         0       0       0       0
  2513 ;;      Temps:          0       0       0       0
  2514 ;;      Totals:         0       4       0       0
  2515 ;;Total ram usage:        4 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    2
  2518 ;; This function calls:
  2519 ;;		___lldiv
  2520 ;;		___lmul
  2521 ;; This function is called by:
  2522 ;;		_play
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _get_voltage
  2528  0491                     _get_voltage:	
  2529                           
  2530                           ;main.c: 136: return (keyCode * 1502) / (key_count-1);
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _get_voltage: [wreg+status,2+status,0+pclath+cstack]
  2534  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0493  0847               	movf	_key_count,w
  2537  0494  3EFF               	addlw	255
  2538  0495  00A8               	movwf	___lldiv@divisor
  2539  0496  0848               	movf	_key_count+1,w
  2540  0497  1803               	skipnc
  2541  0498  3E01               	addlw	1
  2542  0499  3EFF               	addlw	255
  2543  049A  00A9               	movwf	___lldiv@divisor+1
  2544  049B  01AA               	clrf	___lldiv@divisor+2
  2545  049C  01AB               	clrf	___lldiv@divisor+3
  2546  049D  0839               	movf	get_voltage@keyCode+3,w
  2547  049E  00A3               	movwf	___lmul@multiplier+3
  2548  049F  0838               	movf	get_voltage@keyCode+2,w
  2549  04A0  00A2               	movwf	___lmul@multiplier+2
  2550  04A1  0837               	movf	get_voltage@keyCode+1,w
  2551  04A2  00A1               	movwf	___lmul@multiplier+1
  2552  04A3  0836               	movf	get_voltage@keyCode,w
  2553  04A4  00A0               	movwf	___lmul@multiplier
  2554  04A5  3000               	movlw	0
  2555  04A6  00A7               	movwf	___lmul@multiplicand+3
  2556  04A7  3000               	movlw	0
  2557  04A8  00A6               	movwf	___lmul@multiplicand+2
  2558  04A9  3005               	movlw	5
  2559  04AA  00A5               	movwf	___lmul@multiplicand+1
  2560  04AB  30DE               	movlw	222
  2561  04AC  00A4               	movwf	___lmul@multiplicand
  2562  04AD  118A  235F  118A   	fcall	___lmul
  2563  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2564  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2565  04B2  0823               	movf	?___lmul+3,w
  2566  04B3  00AF               	movwf	___lldiv@dividend+3
  2567  04B4  0822               	movf	?___lmul+2,w
  2568  04B5  00AE               	movwf	___lldiv@dividend+2
  2569  04B6  0821               	movf	?___lmul+1,w
  2570  04B7  00AD               	movwf	___lldiv@dividend+1
  2571  04B8  0820               	movf	?___lmul,w
  2572  04B9  00AC               	movwf	___lldiv@dividend
  2573  04BA  118A  22FF         	fcall	___lldiv
  2574  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2575  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2576  04BE  082B               	movf	?___lldiv+3,w
  2577  04BF  00B9               	movwf	?_get_voltage+3
  2578  04C0  082A               	movf	?___lldiv+2,w
  2579  04C1  00B8               	movwf	?_get_voltage+2
  2580  04C2  0829               	movf	?___lldiv+1,w
  2581  04C3  00B7               	movwf	?_get_voltage+1
  2582  04C4  0828               	movf	?___lldiv,w
  2583  04C5  00B6               	movwf	?_get_voltage
  2584  04C6  0008               	return
  2585  04C7                     __end_of_get_voltage:	
  2586                           
  2587                           	psect	text14
  2588  035F                     __ptext14:	
  2589 ;; *************** function ___lmul *****************
  2590 ;; Defined at:
  2591 ;;		line 15 in file "/Applications/microchip/xc8/v1.34/sources/common/Umul32.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2594 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  product         4    5[COMMON] unsigned long 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  4    0[BANK0 ] unsigned long 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2606 ;;      Params:         0       8       0       0
  2607 ;;      Locals:         4       0       0       0
  2608 ;;      Temps:          1       0       0       0
  2609 ;;      Totals:         5       8       0       0
  2610 ;;Total ram usage:       13 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_get_voltage
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function ___lmul
  2622  035F                     ___lmul:	
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2626  035F  3000               	movlw	0
  2627  0360  00F8               	movwf	___lmul@product+3
  2628  0361  3000               	movlw	0
  2629  0362  00F7               	movwf	___lmul@product+2
  2630  0363  3000               	movlw	0
  2631  0364  00F6               	movwf	___lmul@product+1
  2632  0365  3000               	movlw	0
  2633  0366  00F5               	movwf	___lmul@product
  2634  0367                     l1155:	
  2635  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0369  1C20               	btfss	___lmul@multiplier,0
  2638  036A  2B7F               	goto	l1159
  2639  036B  0824               	movf	___lmul@multiplicand,w
  2640  036C  07F5               	addwf	___lmul@product,f
  2641  036D  0825               	movf	___lmul@multiplicand+1,w
  2642  036E  1103               	clrz
  2643  036F  1803               	skipnc
  2644  0370  3E01               	addlw	1
  2645  0371  1D03               	btfss	3,2
  2646  0372  07F6               	addwf	___lmul@product+1,f
  2647  0373  0826               	movf	___lmul@multiplicand+2,w
  2648  0374  1103               	clrz
  2649  0375  1803               	skipnc
  2650  0376  3E01               	addlw	1
  2651  0377  1D03               	btfss	3,2
  2652  0378  07F7               	addwf	___lmul@product+2,f
  2653  0379  0827               	movf	___lmul@multiplicand+3,w
  2654  037A  1103               	clrz
  2655  037B  1803               	skipnc
  2656  037C  3E01               	addlw	1
  2657  037D  1D03               	btfss	3,2
  2658  037E  07F8               	addwf	___lmul@product+3,f
  2659  037F                     l1159:	
  2660  037F  3001               	movlw	1
  2661  0380  00F4               	movwf	??___lmul
  2662  0381                     u735:	
  2663  0381  1003               	clrc
  2664  0382  0DA4               	rlf	___lmul@multiplicand,f
  2665  0383  0DA5               	rlf	___lmul@multiplicand+1,f
  2666  0384  0DA6               	rlf	___lmul@multiplicand+2,f
  2667  0385  0DA7               	rlf	___lmul@multiplicand+3,f
  2668  0386  0BF4               	decfsz	??___lmul,f
  2669  0387  2B81               	goto	u735
  2670  0388  3001               	movlw	1
  2671  0389                     u745:	
  2672  0389  1003               	clrc
  2673  038A  0CA3               	rrf	___lmul@multiplier+3,f
  2674  038B  0CA2               	rrf	___lmul@multiplier+2,f
  2675  038C  0CA1               	rrf	___lmul@multiplier+1,f
  2676  038D  0CA0               	rrf	___lmul@multiplier,f
  2677  038E  3EFF               	addlw	-1
  2678  038F  1D03               	skipz
  2679  0390  2B89               	goto	u745
  2680  0391  0823               	movf	___lmul@multiplier+3,w
  2681  0392  0422               	iorwf	___lmul@multiplier+2,w
  2682  0393  0421               	iorwf	___lmul@multiplier+1,w
  2683  0394  0420               	iorwf	___lmul@multiplier,w
  2684  0395  1D03               	skipz
  2685  0396  2B67               	goto	l1155
  2686  0397  0878               	movf	___lmul@product+3,w
  2687  0398  00A3               	movwf	?___lmul+3
  2688  0399  0877               	movf	___lmul@product+2,w
  2689  039A  00A2               	movwf	?___lmul+2
  2690  039B  0876               	movf	___lmul@product+1,w
  2691  039C  00A1               	movwf	?___lmul+1
  2692  039D  0875               	movf	___lmul@product,w
  2693  039E  00A0               	movwf	?___lmul
  2694  039F  0008               	return
  2695  03A0                     __end_of___lmul:	
  2696                           
  2697                           	psect	text15
  2698  02FF                     __ptext15:	
  2699 ;; *************** function ___lldiv *****************
  2700 ;; Defined at:
  2701 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lldiv.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  divisor         4    8[BANK0 ] unsigned long 
  2704 ;;  dividend        4   12[BANK0 ] unsigned long 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  quotient        4   17[BANK0 ] unsigned long 
  2707 ;;  counter         1   21[BANK0 ] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  4    8[BANK0 ] unsigned long 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2717 ;;      Params:         0       8       0       0
  2718 ;;      Locals:         0       5       0       0
  2719 ;;      Temps:          0       1       0       0
  2720 ;;      Totals:         0      14       0       0
  2721 ;;Total ram usage:       14 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_get_voltage
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function ___lldiv
  2733  02FF                     ___lldiv:	
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2737  02FF  3000               	movlw	0
  2738  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0302  00B4               	movwf	___lldiv@quotient+3
  2741  0303  3000               	movlw	0
  2742  0304  00B3               	movwf	___lldiv@quotient+2
  2743  0305  3000               	movlw	0
  2744  0306  00B2               	movwf	___lldiv@quotient+1
  2745  0307  3000               	movlw	0
  2746  0308  00B1               	movwf	___lldiv@quotient
  2747  0309  082B               	movf	___lldiv@divisor+3,w
  2748  030A  042A               	iorwf	___lldiv@divisor+2,w
  2749  030B  0429               	iorwf	___lldiv@divisor+1,w
  2750  030C  0428               	iorwf	___lldiv@divisor,w
  2751  030D  1903               	skipnz
  2752  030E  2B56               	goto	l1575
  2753  030F  01B5               	clrf	___lldiv@counter
  2754  0310  0AB5               	incf	___lldiv@counter,f
  2755  0311                     l1561:	
  2756  0311  1BAB               	btfsc	___lldiv@divisor+3,7
  2757  0312  2B21               	goto	l1563
  2758  0313  3001               	movlw	1
  2759  0314  00B0               	movwf	??___lldiv
  2760  0315                     u1375:	
  2761  0315  1003               	clrc
  2762  0316  0DA8               	rlf	___lldiv@divisor,f
  2763  0317  0DA9               	rlf	___lldiv@divisor+1,f
  2764  0318  0DAA               	rlf	___lldiv@divisor+2,f
  2765  0319  0DAB               	rlf	___lldiv@divisor+3,f
  2766  031A  0BB0               	decfsz	??___lldiv,f
  2767  031B  2B15               	goto	u1375
  2768  031C  3001               	movlw	1
  2769  031D  00B0               	movwf	??___lldiv
  2770  031E  0830               	movf	??___lldiv,w
  2771  031F  07B5               	addwf	___lldiv@counter,f
  2772  0320  2B11               	goto	l1561
  2773  0321                     l1563:	
  2774  0321  3001               	movlw	1
  2775  0322  00B0               	movwf	??___lldiv
  2776  0323                     u1395:	
  2777  0323  1003               	clrc
  2778  0324  0DB1               	rlf	___lldiv@quotient,f
  2779  0325  0DB2               	rlf	___lldiv@quotient+1,f
  2780  0326  0DB3               	rlf	___lldiv@quotient+2,f
  2781  0327  0DB4               	rlf	___lldiv@quotient+3,f
  2782  0328  0BB0               	decfsz	??___lldiv,f
  2783  0329  2B23               	goto	u1395
  2784  032A  082B               	movf	___lldiv@divisor+3,w
  2785  032B  022F               	subwf	___lldiv@dividend+3,w
  2786  032C  1D03               	skipz
  2787  032D  2B38               	goto	u1405
  2788  032E  082A               	movf	___lldiv@divisor+2,w
  2789  032F  022E               	subwf	___lldiv@dividend+2,w
  2790  0330  1D03               	skipz
  2791  0331  2B38               	goto	u1405
  2792  0332  0829               	movf	___lldiv@divisor+1,w
  2793  0333  022D               	subwf	___lldiv@dividend+1,w
  2794  0334  1D03               	skipz
  2795  0335  2B38               	goto	u1405
  2796  0336  0828               	movf	___lldiv@divisor,w
  2797  0337  022C               	subwf	___lldiv@dividend,w
  2798  0338                     u1405:	
  2799  0338  1C03               	skipc
  2800  0339  2B49               	goto	l1571
  2801  033A  0828               	movf	___lldiv@divisor,w
  2802  033B  02AC               	subwf	___lldiv@dividend,f
  2803  033C  0829               	movf	___lldiv@divisor+1,w
  2804  033D  1C03               	skipc
  2805  033E  0F29               	incfsz	___lldiv@divisor+1,w
  2806  033F  02AD               	subwf	___lldiv@dividend+1,f
  2807  0340  082A               	movf	___lldiv@divisor+2,w
  2808  0341  1C03               	skipc
  2809  0342  0F2A               	incfsz	___lldiv@divisor+2,w
  2810  0343  02AE               	subwf	___lldiv@dividend+2,f
  2811  0344  082B               	movf	___lldiv@divisor+3,w
  2812  0345  1C03               	skipc
  2813  0346  0F2B               	incfsz	___lldiv@divisor+3,w
  2814  0347  02AF               	subwf	___lldiv@dividend+3,f
  2815  0348  1431               	bsf	___lldiv@quotient,0
  2816  0349                     l1571:	
  2817  0349  3001               	movlw	1
  2818  034A                     u1415:	
  2819  034A  1003               	clrc
  2820  034B  0CAB               	rrf	___lldiv@divisor+3,f
  2821  034C  0CAA               	rrf	___lldiv@divisor+2,f
  2822  034D  0CA9               	rrf	___lldiv@divisor+1,f
  2823  034E  0CA8               	rrf	___lldiv@divisor,f
  2824  034F  3EFF               	addlw	-1
  2825  0350  1D03               	skipz
  2826  0351  2B4A               	goto	u1415
  2827  0352  3001               	movlw	1
  2828  0353  02B5               	subwf	___lldiv@counter,f
  2829  0354  1D03               	btfss	3,2
  2830  0355  2B21               	goto	l1563
  2831  0356                     l1575:	
  2832  0356  0834               	movf	___lldiv@quotient+3,w
  2833  0357  00AB               	movwf	?___lldiv+3
  2834  0358  0833               	movf	___lldiv@quotient+2,w
  2835  0359  00AA               	movwf	?___lldiv+2
  2836  035A  0832               	movf	___lldiv@quotient+1,w
  2837  035B  00A9               	movwf	?___lldiv+1
  2838  035C  0831               	movf	___lldiv@quotient,w
  2839  035D  00A8               	movwf	?___lldiv
  2840  035E  0008               	return
  2841  035F                     __end_of___lldiv:	
  2842                           
  2843                           	psect	text16
  2844  019B                     __ptext16:	
  2845 ;; *************** function _checkKey *****************
  2846 ;; Defined at:
  2847 ;;		line 96 in file "main.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  keyVal          1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  keyVal          1    6[COMMON] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      unsigned char 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2861 ;;      Params:         0       0       0       0
  2862 ;;      Locals:         1       0       0       0
  2863 ;;      Temps:          2       0       0       0
  2864 ;;      Totals:         3       0       0       0
  2865 ;;Total ram usage:        3 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_tuningCheck
  2872 ;;		_tune
  2873 ;;		_play
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _checkKey
  2879  019B                     _checkKey:	
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in _checkKey: [wreg+status,2+status,0]
  2883                           ;checkKey@keyVal stored from wreg
  2884  019B  00F6               	movwf	checkKey@keyVal
  2885                           
  2886                           ;main.c: 97: keyVal = (key_count - keyVal - 1);
  2887  019C  0876               	movf	checkKey@keyVal,w
  2888  019D  3E01               	addlw	1
  2889  019E  3AFF               	xorlw	255
  2890  019F  3E01               	addlw	1
  2891  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2892  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2893  01A2  0747               	addwf	_key_count,w
  2894  01A3  00F4               	movwf	??_checkKey
  2895  01A4  0874               	movf	??_checkKey,w
  2896  01A5  00F6               	movwf	checkKey@keyVal
  2897                           
  2898                           ;main.c: 98: if (keyVal <= 15) {
  2899  01A6  3010               	movlw	16
  2900  01A7  0276               	subwf	checkKey@keyVal,w
  2901  01A8  1803               	skipnc
  2902  01A9  29F6               	goto	l1263
  2903                           
  2904                           ;main.c: 99: PORTAbits.RA2 = (keyVal >> 0) & 1;
  2905  01AA  0876               	movf	checkKey@keyVal,w
  2906  01AB  3901               	andlw	1
  2907  01AC  00F4               	movwf	??_checkKey
  2908  01AD  0DF4               	rlf	??_checkKey,f
  2909  01AE  0DF4               	rlf	??_checkKey,f
  2910  01AF  0805               	movf	5,w	;volatile
  2911  01B0  0674               	xorwf	??_checkKey,w
  2912  01B1  39FB               	andlw	-5
  2913  01B2  0674               	xorwf	??_checkKey,w
  2914  01B3  0085               	movwf	5	;volatile
  2915                           
  2916                           ;main.c: 100: PORTCbits.RC0 = (keyVal >> 1) & 1;
  2917  01B4  0876               	movf	checkKey@keyVal,w
  2918  01B5  00F4               	movwf	??_checkKey
  2919  01B6  3001               	movlw	1
  2920  01B7                     u995:	
  2921  01B7  1003               	clrc
  2922  01B8  0CF4               	rrf	??_checkKey,f
  2923  01B9  3EFF               	addlw	-1
  2924  01BA  1D03               	skipz
  2925  01BB  29B7               	goto	u995
  2926  01BC  3001               	movlw	1
  2927  01BD  0574               	andwf	??_checkKey,w
  2928  01BE  00F5               	movwf	??_checkKey+1
  2929  01BF  0807               	movf	7,w	;volatile
  2930  01C0  0675               	xorwf	??_checkKey+1,w
  2931  01C1  39FE               	andlw	-2
  2932  01C2  0675               	xorwf	??_checkKey+1,w
  2933  01C3  0087               	movwf	7	;volatile
  2934                           
  2935                           ;main.c: 101: PORTCbits.RC1 = (keyVal >> 2) & 1;
  2936  01C4  0876               	movf	checkKey@keyVal,w
  2937  01C5  00F4               	movwf	??_checkKey
  2938  01C6  3002               	movlw	2
  2939  01C7                     u1005:	
  2940  01C7  1003               	clrc
  2941  01C8  0CF4               	rrf	??_checkKey,f
  2942  01C9  3EFF               	addlw	-1
  2943  01CA  1D03               	skipz
  2944  01CB  29C7               	goto	u1005
  2945  01CC  0874               	movf	??_checkKey,w
  2946  01CD  3901               	andlw	1
  2947  01CE  00F5               	movwf	??_checkKey+1
  2948  01CF  0DF5               	rlf	??_checkKey+1,f
  2949  01D0  0807               	movf	7,w	;volatile
  2950  01D1  0675               	xorwf	??_checkKey+1,w
  2951  01D2  39FD               	andlw	-3
  2952  01D3  0675               	xorwf	??_checkKey+1,w
  2953  01D4  0087               	movwf	7	;volatile
  2954                           
  2955                           ;main.c: 102: PORTCbits.RC2 = (keyVal >> 3) & 1;
  2956  01D5  0876               	movf	checkKey@keyVal,w
  2957  01D6  00F4               	movwf	??_checkKey
  2958  01D7  3003               	movlw	3
  2959  01D8                     u1015:	
  2960  01D8  1003               	clrc
  2961  01D9  0CF4               	rrf	??_checkKey,f
  2962  01DA  3EFF               	addlw	-1
  2963  01DB  1D03               	skipz
  2964  01DC  29D8               	goto	u1015
  2965  01DD  0874               	movf	??_checkKey,w
  2966  01DE  3901               	andlw	1
  2967  01DF  00F5               	movwf	??_checkKey+1
  2968  01E0  0DF5               	rlf	??_checkKey+1,f
  2969  01E1  0DF5               	rlf	??_checkKey+1,f
  2970  01E2  0807               	movf	7,w	;volatile
  2971  01E3  0675               	xorwf	??_checkKey+1,w
  2972  01E4  39FB               	andlw	-5
  2973  01E5  0675               	xorwf	??_checkKey+1,w
  2974  01E6  0087               	movwf	7	;volatile
  2975                           
  2976                           ;main.c: 104: _delay((unsigned long)((1)*(8000000L/4000.0)));
  2977  01E7  3003               	movlw	3
  2978  01E8  00F5               	movwf	??_checkKey+1
  2979  01E9  3097               	movlw	151
  2980  01EA  00F4               	movwf	??_checkKey
  2981  01EB                     u1707:	
  2982  01EB  0BF4               	decfsz	??_checkKey,f
  2983  01EC  29EB               	goto	u1707
  2984  01ED  0BF5               	decfsz	??_checkKey+1,f
  2985  01EE  29EB               	goto	u1707
  2986  01EF  29F0               	nop2
  2987                           
  2988                           ;main.c: 106: if (PORTAbits.RA4 == 0) {
  2989  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2990  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2991  01F2  1A05               	btfsc	5,4	;volatile
  2992  01F3  2A2D               	goto	l1273
  2993                           
  2994                           ;main.c: 107: return 1;
  2995  01F4  3001               	movlw	1
  2996  01F5  0008               	return
  2997  01F6                     l1263:	
  2998                           ;main.c: 108: }
  2999                           ;main.c: 109: } else {
  3000                           
  3001                           
  3002                           ;main.c: 110: PORTBbits.RB4 = (keyVal >> 0) & 1;
  3003  01F6  0876               	movf	checkKey@keyVal,w
  3004  01F7  3901               	andlw	1
  3005  01F8  00F4               	movwf	??_checkKey
  3006  01F9  0EF4               	swapf	??_checkKey,f
  3007  01FA  0806               	movf	6,w	;volatile
  3008  01FB  0674               	xorwf	??_checkKey,w
  3009  01FC  39EF               	andlw	-17
  3010  01FD  0674               	xorwf	??_checkKey,w
  3011  01FE  0086               	movwf	6	;volatile
  3012                           
  3013                           ;main.c: 111: PORTCbits.RC3 = (keyVal >> 1) & 1;
  3014  01FF  0876               	movf	checkKey@keyVal,w
  3015  0200  00F4               	movwf	??_checkKey
  3016  0201  1003               	clrc
  3017  0202  0C74               	rrf	??_checkKey,w
  3018  0203  3901               	andlw	1
  3019  0204  00F5               	movwf	??_checkKey+1
  3020  0205  0DF5               	rlf	??_checkKey+1,f
  3021  0206  0DF5               	rlf	??_checkKey+1,f
  3022  0207  0DF5               	rlf	??_checkKey+1,f
  3023  0208  0807               	movf	7,w	;volatile
  3024  0209  0675               	xorwf	??_checkKey+1,w
  3025  020A  39F7               	andlw	-9
  3026  020B  0675               	xorwf	??_checkKey+1,w
  3027  020C  0087               	movwf	7	;volatile
  3028                           
  3029                           ;main.c: 112: PORTCbits.RC4 = (keyVal >> 2) & 1;
  3030  020D  0876               	movf	checkKey@keyVal,w
  3031  020E  00F4               	movwf	??_checkKey
  3032  020F  3002               	movlw	2
  3033  0210                     u1035:	
  3034  0210  1003               	clrc
  3035  0211  0CF4               	rrf	??_checkKey,f
  3036  0212  3EFF               	addlw	-1
  3037  0213  1D03               	skipz
  3038  0214  2A10               	goto	u1035
  3039  0215  0874               	movf	??_checkKey,w
  3040  0216  3901               	andlw	1
  3041  0217  00F5               	movwf	??_checkKey+1
  3042  0218  0EF5               	swapf	??_checkKey+1,f
  3043  0219  0807               	movf	7,w	;volatile
  3044  021A  0675               	xorwf	??_checkKey+1,w
  3045  021B  39EF               	andlw	-17
  3046  021C  0675               	xorwf	??_checkKey+1,w
  3047  021D  0087               	movwf	7	;volatile
  3048                           
  3049                           ;main.c: 114: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3050  021E  3003               	movlw	3
  3051  021F  00F5               	movwf	??_checkKey+1
  3052  0220  3097               	movlw	151
  3053  0221  00F4               	movwf	??_checkKey
  3054  0222                     u1717:	
  3055  0222  0BF4               	decfsz	??_checkKey,f
  3056  0223  2A22               	goto	u1717
  3057  0224  0BF5               	decfsz	??_checkKey+1,f
  3058  0225  2A22               	goto	u1717
  3059  0226  2A27               	nop2
  3060                           
  3061                           ;main.c: 116: if (PORTAbits.RA5 == 0) {
  3062  0227  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0228  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0229  1A85               	btfsc	5,5	;volatile
  3065  022A  2A2D               	goto	l1273
  3066                           
  3067                           ;main.c: 117: return 1;
  3068  022B  3001               	movlw	1
  3069  022C  0008               	return
  3070  022D                     l1273:	
  3071                           
  3072                           ;main.c: 118: }
  3073                           ;main.c: 119: }
  3074                           ;main.c: 120: return 0;
  3075  022D  3000               	movlw	0
  3076  022E  0008               	return
  3077  022F                     __end_of_checkKey:	
  3078                           
  3079                           	psect	text17
  3080  04FB                     __ptext17:	
  3081 ;; *************** function _SPI_Write *****************
  3082 ;; Defined at:
  3083 ;;		line 33 in file "main.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  data            2    4[COMMON] unsigned int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  config          2    0[BANK0 ] unsigned int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3097 ;;      Params:         2       0       0       0
  3098 ;;      Locals:         0       2       0       0
  3099 ;;      Temps:          2       0       0       0
  3100 ;;      Totals:         4       2       0       0
  3101 ;;Total ram usage:        6 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_play
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _SPI_Write
  3113  04FB                     _SPI_Write:	
  3114                           
  3115                           ;main.c: 35: PORTCbits.RC6 = 0;
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _SPI_Write: [wreg+status,2+status,0]
  3119  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3120  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3121  04FD  1307               	bcf	7,6	;volatile
  3122                           
  3123                           ;main.c: 38: uint16_t config = 0x3 << 12;
  3124  04FE  3000               	movlw	0
  3125  04FF  00A0               	movwf	SPI_Write@config
  3126  0500  3030               	movlw	48
  3127  0501  00A1               	movwf	SPI_Write@config+1
  3128                           
  3129                           ;main.c: 39: data = data & 0x0FFF;
  3130  0502  30FF               	movlw	255
  3131  0503  0574               	andwf	SPI_Write@data,w
  3132  0504  00F4               	movwf	SPI_Write@data
  3133  0505  300F               	movlw	15
  3134  0506  0575               	andwf	SPI_Write@data+1,w
  3135  0507  00F5               	movwf	SPI_Write@data+1
  3136                           
  3137                           ;main.c: 41: config = (config | data) >> 8;
  3138  0508  0874               	movf	SPI_Write@data,w
  3139  0509  0420               	iorwf	SPI_Write@config,w
  3140  050A  00F6               	movwf	??_SPI_Write
  3141  050B  0875               	movf	SPI_Write@data+1,w
  3142  050C  0421               	iorwf	SPI_Write@config+1,w
  3143  050D  00F7               	movwf	??_SPI_Write+1
  3144  050E  0877               	movf	??_SPI_Write+1,w
  3145  050F  00F6               	movwf	??_SPI_Write
  3146  0510  01F7               	clrf	??_SPI_Write+1
  3147  0511  0876               	movf	??_SPI_Write,w
  3148  0512  00A0               	movwf	SPI_Write@config
  3149  0513  0877               	movf	??_SPI_Write+1,w
  3150  0514  00A1               	movwf	SPI_Write@config+1
  3151                           
  3152                           ;main.c: 43: SSPBUF = config;
  3153  0515  0820               	movf	SPI_Write@config,w
  3154  0516  0093               	movwf	19	;volatile
  3155  0517                     l40:	
  3156                           ;main.c: 44: while( ! SSPSTATbits.BF);
  3157                           
  3158  0517  1683               	bsf	3,5	;RP0=1, select bank1
  3159  0518  1303               	bcf	3,6	;RP1=0, select bank1
  3160  0519  1C14               	btfss	20,0	;volatile
  3161  051A  2D17               	goto	l40
  3162                           
  3163                           ;main.c: 46: SSPBUF = data;
  3164  051B  0874               	movf	SPI_Write@data,w
  3165  051C  1283               	bcf	3,5	;RP0=0, select bank0
  3166  051D  1303               	bcf	3,6	;RP1=0, select bank0
  3167  051E  0093               	movwf	19	;volatile
  3168  051F                     l43:	
  3169                           ;main.c: 47: while( ! SSPSTATbits.BF);
  3170                           
  3171  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0520  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0521  1C14               	btfss	20,0	;volatile
  3174  0522  2D1F               	goto	l43
  3175                           
  3176                           ;main.c: 50: PORTCbits.RC6 = 1;
  3177  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0525  1707               	bsf	7,6	;volatile
  3180  0526  0008               	return
  3181  0527                     __end_of_SPI_Write:	
  3182                           
  3183                           	psect	text18
  3184  0578                     __ptext18:	
  3185 ;; *************** function _load_tuning *****************
  3186 ;; Defined at:
  3187 ;;		line 152 in file "main.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;		None               void
  3194 ;; Registers used:
  3195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3201 ;;      Params:         0       0       0       0
  3202 ;;      Locals:         0       0       0       0
  3203 ;;      Temps:          3       0       0       0
  3204 ;;      Totals:         3       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    2
  3208 ;; This function calls:
  3209 ;;		_eeprom_read
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _load_tuning
  3217  0578                     _load_tuning:	
  3218                           
  3219                           ;main.c: 153: for (current_key = 0; current_key < key_count; current_key += 1) {
  3220                           
  3221                           ;incstack = 0
  3222                           ; Regs used in _load_tuning: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3223  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0579  1303               	bcf	3,6	;RP1=0, select bank0
  3225  057A  01C5               	clrf	_current_key
  3226  057B                     l1367:	
  3227  057B  0845               	movf	_current_key,w
  3228  057C  00F6               	movwf	??_load_tuning
  3229  057D  01F7               	clrf	??_load_tuning+1
  3230  057E  0848               	movf	_key_count+1,w
  3231  057F  0277               	subwf	??_load_tuning+1,w
  3232  0580  1D03               	skipz
  3233  0581  2D84               	goto	u1195
  3234  0582  0847               	movf	_key_count,w
  3235  0583  0276               	subwf	??_load_tuning,w
  3236  0584                     u1195:	
  3237  0584  1803               	btfsc	3,0
  3238  0585  0008               	return
  3239                           
  3240                           ;main.c: 154: tuning[current_key] = eeprom_read(current_key);
  3241  0586  0845               	movf	_current_key,w
  3242  0587  118A  259E  118A   	fcall	_eeprom_read
  3243  058A  00F6               	movwf	??_load_tuning
  3244  058B  01F7               	clrf	??_load_tuning+1
  3245  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3246  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3247  058E  0845               	movf	_current_key,w
  3248  058F  00F8               	movwf	??_load_tuning+2
  3249  0590  0778               	addwf	??_load_tuning+2,w
  3250  0591  3EA0               	addlw	(low (_tuning| 0))& (0+255)
  3251  0592  0084               	movwf	4
  3252  0593  0876               	movf	??_load_tuning,w
  3253  0594  1383               	bcf	3,7	;select IRP bank1
  3254  0595  0080               	movwf	0
  3255  0596  0A84               	incf	4,f
  3256  0597  0877               	movf	??_load_tuning+1,w
  3257  0598  0080               	movwf	0
  3258  0599  3001               	movlw	1
  3259  059A  00F6               	movwf	??_load_tuning
  3260  059B  0876               	movf	??_load_tuning,w
  3261  059C  07C5               	addwf	_current_key,f
  3262  059D  2D7B               	goto	l1367
  3263  059E                     __end_of_load_tuning:	
  3264                           
  3265                           	psect	text19
  3266  059E                     __ptext19:	
  3267 ;; *************** function _eeprom_read *****************
  3268 ;; Defined at:
  3269 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/pic/eeread.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  addr            1    wreg     unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  addr            1    5[COMMON] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3283 ;;      Params:         0       0       0       0
  3284 ;;      Locals:         1       0       0       0
  3285 ;;      Temps:          1       0       0       0
  3286 ;;      Totals:         2       0       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_load_tuning
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _eeprom_read
  3299  059E                     _eeprom_read:	
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3303                           ;eeprom_read@addr stored from wreg
  3304  059E  00F5               	movwf	eeprom_read@addr
  3305  059F                     l239:	
  3306  059F  0064               	clrwdt	;# 
  3307  05A0  1683               	bsf	3,5	;RP0=1, select bank3
  3308  05A1  1703               	bsf	3,6	;RP1=1, select bank3
  3309  05A2  188C               	btfsc	12,1	;volsfr
  3310  05A3  2D9F               	goto	l239
  3311  05A4  0875               	movf	eeprom_read@addr,w
  3312  05A5  1283               	bcf	3,5	;RP0=0, select bank2
  3313  05A6  1703               	bsf	3,6	;RP1=1, select bank2
  3314  05A7  008D               	movwf	13	;volatile
  3315  05A8  303F               	movlw	63
  3316  05A9  00F4               	movwf	??_eeprom_read
  3317  05AA  0874               	movf	??_eeprom_read,w
  3318  05AB  1683               	bsf	3,5	;RP0=1, select bank3
  3319  05AC  1703               	bsf	3,6	;RP1=1, select bank3
  3320  05AD  058C               	andwf	12,f	;volsfr
  3321  05AE  140C               	bsf	12,0	;volsfr
  3322  05AF  1003               	clrc
  3323  05B0  180C               	btfsc	12,0	;volsfr
  3324  05B1  1403               	setc
  3325  05B2  3000               	movlw	0
  3326  05B3  1803               	skipnc
  3327  05B4  3001               	movlw	1
  3328  05B5  1283               	bcf	3,5	;RP0=0, select bank2
  3329  05B6  1703               	bsf	3,6	;RP1=1, select bank2
  3330  05B7  080C               	movf	12,w	;volatile
  3331  05B8  0008               	return
  3332  05B9                     __end_of_eeprom_read:	
  3333                           
  3334                           	psect	text20
  3335  041D                     __ptext20:	
  3336 ;; *************** function _InitApp *****************
  3337 ;; Defined at:
  3338 ;;		line 22 in file "user.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3352 ;;      Params:         0       0       0       0
  3353 ;;      Locals:         0       0       0       0
  3354 ;;      Temps:          0       0       0       0
  3355 ;;      Totals:         0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _InitApp
  3368  041D                     _InitApp:	
  3369                           
  3370                           ;user.c: 24: OSCCON = 0x70;
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  3374  041D  3070               	movlw	112
  3375  041E  1683               	bsf	3,5	;RP0=1, select bank1
  3376  041F  1303               	bcf	3,6	;RP1=0, select bank1
  3377  0420  008F               	movwf	15	;volatile
  3378                           
  3379                           ;user.c: 27: ANSEL = 0;
  3380  0421  1283               	bcf	3,5	;RP0=0, select bank2
  3381  0422  1703               	bsf	3,6	;RP1=1, select bank2
  3382  0423  019E               	clrf	30	;volatile
  3383                           
  3384                           ;user.c: 28: ANSELH = 0;
  3385  0424  019F               	clrf	31	;volatile
  3386                           
  3387                           ;user.c: 31: TRISA = 0;
  3388  0425  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0426  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0427  0185               	clrf	5	;volatile
  3391                           
  3392                           ;user.c: 32: TRISB = 0;
  3393  0428  0186               	clrf	6	;volatile
  3394                           
  3395                           ;user.c: 33: TRISC = 0;
  3396  0429  0187               	clrf	7	;volatile
  3397                           
  3398                           ;user.c: 39: TRISBbits.TRISB5 = 1;
  3399  042A  1686               	bsf	6,5	;volatile
  3400                           
  3401                           ;user.c: 40: TRISBbits.TRISB7 = 1;
  3402  042B  1786               	bsf	6,7	;volatile
  3403                           
  3404                           ;user.c: 42: BAUDCTLbits.BRG16 = 0;
  3405  042C  119B               	bcf	27,3	;volatile
  3406                           
  3407                           ;user.c: 44: SPBRG = 51;
  3408  042D  3033               	movlw	51
  3409  042E  0099               	movwf	25	;volatile
  3410                           
  3411                           ;user.c: 47: BRGH = 1;
  3412  042F  1518               	bsf	24,2	;volatile
  3413                           
  3414                           ;user.c: 48: SYNC = 0;
  3415  0430  1218               	bcf	24,4	;volatile
  3416                           
  3417                           ;user.c: 49: SPEN = 1;
  3418  0431  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0432  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0433  1798               	bsf	24,7	;volatile
  3421                           
  3422                           ;user.c: 50: CREN = 0;
  3423  0434  1218               	bcf	24,4	;volatile
  3424                           
  3425                           ;user.c: 51: TXEN = 1;
  3426  0435  1683               	bsf	3,5	;RP0=1, select bank1
  3427  0436  1303               	bcf	3,6	;RP1=0, select bank1
  3428  0437  1698               	bsf	24,5	;volatile
  3429                           
  3430                           ;user.c: 60: TRISCbits.TRISC7 = 0;
  3431  0438  1387               	bcf	7,7	;volatile
  3432                           
  3433                           ;user.c: 61: TRISBbits.TRISB4 = 1;
  3434  0439  1606               	bsf	6,4	;volatile
  3435                           
  3436                           ;user.c: 62: TRISBbits.TRISB6 = 0;
  3437  043A  1306               	bcf	6,6	;volatile
  3438                           
  3439                           ;user.c: 63: TRISCbits.TRISC6 = 0;
  3440  043B  1307               	bcf	7,6	;volatile
  3441                           
  3442                           ;user.c: 64: PORTCbits.RC6 = 1;
  3443  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3444  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3445  043E  1707               	bsf	7,6	;volatile
  3446                           
  3447                           ;user.c: 66: SSPCONbits.SSPEN = 0;
  3448  043F  1294               	bcf	20,5	;volatile
  3449                           
  3450                           ;user.c: 67: SSPCONbits.SSPM = 0b0000;
  3451  0440  30F0               	movlw	-16
  3452  0441  0594               	andwf	20,f	;volatile
  3453                           
  3454                           ;user.c: 68: SSPSTATbits.SMP = 1;
  3455  0442  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0443  1303               	bcf	3,6	;RP1=0, select bank1
  3457  0444  1794               	bsf	20,7	;volatile
  3458                           
  3459                           ;user.c: 69: SSPSTATbits.CKE = 1;
  3460  0445  1714               	bsf	20,6	;volatile
  3461                           
  3462                           ;user.c: 70: SSPCONbits.CKP = 0;
  3463  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0448  1214               	bcf	20,4	;volatile
  3466                           
  3467                           ;user.c: 72: SSPCONbits.SSPEN = 1;
  3468  0449  1694               	bsf	20,5	;volatile
  3469                           
  3470                           ;user.c: 77: TRISCbits.TRISC5 = 0;
  3471  044A  1683               	bsf	3,5	;RP0=1, select bank1
  3472  044B  1303               	bcf	3,6	;RP1=0, select bank1
  3473  044C  1287               	bcf	7,5	;volatile
  3474                           
  3475                           ;user.c: 80: TRISAbits.TRISA4 = 1;
  3476  044D  1605               	bsf	5,4	;volatile
  3477                           
  3478                           ;user.c: 81: nRABPU = 0;
  3479  044E  1381               	bcf	1,7	;volatile
  3480                           
  3481                           ;user.c: 82: WPUAbits.WPUA4 = 1;
  3482  044F  1615               	bsf	21,4	;volatile
  3483                           
  3484                           ;user.c: 83: TRISAbits.TRISA2 = 0;
  3485  0450  1105               	bcf	5,2	;volatile
  3486                           
  3487                           ;user.c: 84: TRISCbits.TRISC0 = 0;
  3488  0451  1007               	bcf	7,0	;volatile
  3489                           
  3490                           ;user.c: 85: TRISCbits.TRISC1 = 0;
  3491  0452  1087               	bcf	7,1	;volatile
  3492                           
  3493                           ;user.c: 86: TRISCbits.TRISC2 = 0;
  3494  0453  1107               	bcf	7,2	;volatile
  3495                           
  3496                           ;user.c: 89: TRISAbits.TRISA5 = 1;
  3497  0454  1685               	bsf	5,5	;volatile
  3498                           
  3499                           ;user.c: 90: nRABPU = 0;
  3500  0455  1381               	bcf	1,7	;volatile
  3501                           
  3502                           ;user.c: 91: WPUAbits.WPUA5 = 1;
  3503  0456  1695               	bsf	21,5	;volatile
  3504                           
  3505                           ;user.c: 92: TRISBbits.TRISB4 = 0;
  3506  0457  1206               	bcf	6,4	;volatile
  3507                           
  3508                           ;user.c: 93: TRISCbits.TRISC3 = 0;
  3509  0458  1187               	bcf	7,3	;volatile
  3510                           
  3511                           ;user.c: 94: TRISCbits.TRISC4 = 0;
  3512  0459  1207               	bcf	7,4	;volatile
  3513  045A  0008               	return
  3514  045B                     __end_of_InitApp:	
  3515                           
  3516                           	psect	text21
  3517  05EA                     __ptext21:	
  3518 ;; *************** function _ConfigureOscillator *****************
  3519 ;; Defined at:
  3520 ;;		line 18 in file "system.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;		None               void
  3527 ;; Registers used:
  3528 ;;		wreg
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3534 ;;      Params:         0       0       0       0
  3535 ;;      Locals:         0       0       0       0
  3536 ;;      Temps:          0       0       0       0
  3537 ;;      Totals:         0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _ConfigureOscillator
  3550  05EA                     _ConfigureOscillator:	
  3551                           
  3552                           ;system.c: 21: OSCCON = 0x70;
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _ConfigureOscillator: [wreg]
  3556  05EA  3070               	movlw	112
  3557  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3558  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3559  05ED  008F               	movwf	15	;volatile
  3560  05EE  0008               	return
  3561  05EF                     __end_of_ConfigureOscillator:	
  3562                           
  3563                           	psect	text22
  3564  05CF                     __ptext22:	
  3565 ;; *************** function _isr *****************
  3566 ;; Defined at:
  3567 ;;		line 23 in file "interrupts.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		None
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3581 ;;      Params:         0       0       0       0
  3582 ;;      Locals:         0       0       0       0
  3583 ;;      Temps:          4       0       0       0
  3584 ;;      Totals:         4       0       0       0
  3585 ;;Total ram usage:        4 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		Interrupt level 1
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _isr
  3596  05CF                     _isr:	
  3597  05CF  0873               	movf	??_isr+3,w
  3598  05D0  00FF               	movwf	127
  3599  05D1  0872               	movf	??_isr+2,w
  3600  05D2  008A               	movwf	10
  3601  05D3  0871               	movf	??_isr+1,w
  3602  05D4  0084               	movwf	4
  3603  05D5  0E70               	swapf	??_isr^(0+-128),w
  3604  05D6  0083               	movwf	3
  3605  05D7  0EFE               	swapf	126,f
  3606  05D8  0E7E               	swapf	126,w
  3607  05D9  0009               	retfie
  3608  05DA                     __end_of_isr:	
  3609  007E                     btemp	set	126	;btemp
  3610  007E                     wtemp	set	126
  3611  007E                     wtemp0	set	126
  3612  0080                     wtemp1	set	128
  3613  0082                     wtemp2	set	130
  3614  0084                     wtemp3	set	132
  3615  0086                     wtemp4	set	134
  3616  0088                     wtemp5	set	136
  3617  007F                     wtemp6	set	127
  3618  007E                     ttemp	set	126
  3619  007E                     ttemp0	set	126
  3620  0081                     ttemp1	set	129
  3621  0084                     ttemp2	set	132
  3622  0087                     ttemp3	set	135
  3623  007F                     ttemp4	set	127
  3624  007E                     ltemp	set	126
  3625  007E                     ltemp0	set	126
  3626  0082                     ltemp1	set	130
  3627  0086                     ltemp2	set	134
  3628  0080                     ltemp3	set	128
  3629                           
  3630                           	psect	intentry
  3631  0004                     __pintentry:	
  3632                           ;incstack = 0
  3633                           ; Regs used in _isr: []
  3634                           
  3635  0004                     interrupt_function:	
  3636  007E                     saved_w	set	btemp
  3637  0004  00FE               	movwf	btemp
  3638  0005  0E03               	swapf	3,w
  3639  0006  00F0               	movwf	??_isr
  3640  0007  0804               	movf	4,w
  3641  0008  00F1               	movwf	??_isr+1
  3642  0009  080A               	movf	10,w
  3643  000A  00F2               	movwf	??_isr+2
  3644  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3645  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3646  000D  087F               	movf	btemp+1,w
  3647  000E  00F3               	movwf	??_isr+3
  3648  000F  118A  2DCF         	ljmp	_isr


Data Sizes:
    Strings     171
    Constant    10
    Data        2
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     33      41
    BANK1            80      0      46
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 53
		 -> STR_7(CODE[40]), STR_6(CODE[53]), STR_5(CODE[8]), STR_4(CODE[2]), 
		 -> STR_3(CODE[18]), STR_2(CODE[22]), STR_1(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_load_tuning
    _tune->_checkKey
    _printf->___lwdiv
    ___lwmod->___lwdiv
    _get_voltage->___lmul
    ___lldiv->___lmul
    _load_tuning->_eeprom_read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_play
    _tuningCheck->_printf
    _save_tuning->_printf
    _print_tuning->_printf
    _play->_get_voltage
    _printf->___lwmod
    ___lwmod->___lwdiv
    _get_voltage->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9281
                                             30 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
                        _load_tuning
                               _play
                       _print_tuning
                             _printf
                        _save_tuning
                               _tune
                        _tuningCheck
 ---------------------------------------------------------------------------------
 (1) _tuningCheck                                          0     0      0    1691
                           _checkKey
                             _printf
 ---------------------------------------------------------------------------------
 (1) _tune                                                 4     4      0     199
                                              0 BANK0      4     4      0
                           _checkKey
                          _tune_down
                            _tune_up
 ---------------------------------------------------------------------------------
 (2) _tune_up                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tune_down                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _save_tuning                                          4     4      0    1665
                                             25 BANK0      4     4      0
                       _eeprom_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     108
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _print_tuning                                         3     3      0    1492
                                             25 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _play                                                 4     4      0    2720
                                             26 BANK0      4     4      0
                          _SPI_Write
                           _checkKey
                        _get_voltage
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    1492
                                              9 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_voltage                                          4     0      4     723
                                             22 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     220
                                              4 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              8 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _checkKey                                             3     3      0     199
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Write                                            6     4      2     241
                                              4 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _load_tuning                                          3     3      0      22
                                              6 COMMON     3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _load_tuning
     _eeprom_read
   _play
     _SPI_Write
     _checkKey
     _get_voltage
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _print_tuning
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _save_tuning
     _eeprom_write
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _tune
     _checkKey
     _tune_down
     _tune_up
   _tuningCheck
     _checkKey
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      2E       5       57.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      29       3       51.2%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      10        0.0%
ABS                  0      0      61       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May  7 09:46:34 2015

                           pc 0002                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          l40 0517                            l34 05E3                            l43 051F  
                          _RD 0C60                            _WR 0C61                  ?_get_voltage 0036  
                          fsr 0004                           l120 0280                           l121 024A  
                         l122 0252                           l135 02FD                           l226 019A  
                         l261 0553                           l239 059F                           _GIE 005F  
                __CFG_CPD$OFF 0000                           u735 0381                           u745 0389  
                         u845 03EC                           u865 03F8                           u875 0404  
                         u885 040E                           u995 01B7                           _isr 05CF  
                         fsr0 0004                           indf 0000                          l1201 03E9  
                        l1203 03F7                          l1213 0418                          l1209 040D  
                        l1155 0367                          l1413 0259                          l1405 0242  
                        l1263 01F6                          l1159 037F                          l1423 0284  
                        l1273 022D                          l1417 0262                          l1419 0268  
                        l1621 0106                          l1367 057B                          l1711 02D0  
                        l1561 0311                          l1571 0349                          l1563 0321  
                        l1643 0139                          l1627 011C                          l1707 02C9  
                        l1653 015E                          l1637 0133                          l1661 00ED  
                        l1709 02A8                          l1741 048D                          l1575 0356  
                        l1593 04EB                          l1649 0156                          l1737 0477  
                        l1587 04CF                          l1659 0164                          l1739 0480  
                        l1589 04DD                          l1597 04F6                          l1677 052A  
                        l1687 03CC                          l1695 03A3                          l1689 03D0  
                        ?_isr 0070                          STR_1 0098                          STR_2 00B4  
                        STR_3 00CA                          STR_4 00E4                          STR_5 00DC  
                        STR_6 003B                          STR_7 0070                          _BRGH 04C2  
                        _CREN 00C4                          u1005 01C7                          u1015 01D8  
                        u1035 0210                          u1315 0297                          u1405 0338  
                        u1415 034A                          u1195 0584                          u1445 04D2  
                        u1375 0315                          u1615 0533                          u1295 0271  
                        u1465 04E3                          u1545 014C                          u1707 01EB  
                        u1395 0323                          u1475 04EC                          u1635 03AC  
                        u1717 0222                          u1655 02B1                          u1687 0486  
                        u1697 0237                          _SPEN 00C7                          _WREN 0C62  
                        _TXEN 04C5                          _TXIF 0064                          _SYNC 04C4  
              ??_eeprom_write 0075                          _main 045B                          _play 029F  
                        btemp 007E                          _tune 022F                          ltemp 007E  
                        start 0011                          ttemp 007E                          wtemp 007E  
               __CFG_IESO$OFF 0000                 __CFG_MCLRE$ON 0000               __end_of_InitApp 045B  
                 _tuningCheck 05B9                         ??_isr 0070                         ?_main 0070  
                       _EEADR 010D                         ?_play 0070                 __CFG_WDTE$OFF 0000  
                       _CARRY 0018                         _ANSEL 011E               __end_of___lldiv 035F  
                       ?_tune 0070               __end_of___lwdiv 041D               __end_of___lwmod 04FB  
                       _SPBRG 0099                  ?_load_tuning 0070                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TXREG 0019  
         _ConfigureOscillator 05EA           ___lmul@multiplicand 0024                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000               __end_of_dpowers 003B                         _putch 05E2  
              __CFG_BOREN$OFF 0000                         pclath 000A                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_tune_up 05F2            __size_of_SPI_Write 002C  
        ?_ConfigureOscillator 0070               __initialization 0013                  __end_of_main 0491  
                __end_of_play 02FF                  __end_of_tune 029F                        ??_main 003E  
                      ??_play 003A                        ??_tune 0020                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D                        ?_putch 0070  
                      _ANSELH 011F                        _OSCCON 008F                  ?_save_tuning 0070  
                      _SSPBUF 0013              __end_of_checkKey 022F                     ??_InitApp 0074  
       ??_ConfigureOscillator 0074                        _nRABPU 040F          __size_of_eeprom_read 001B  
                      ___lmul 035F                     ??___lldiv 0030                     ??___lwdiv 0078  
                   ??___lwmod 0027          __end_of_eeprom_write 0578                        _printf 00E6  
                      _tuning 00A0          __size_of_get_voltage 0036             __end_of_SPI_Write 0527  
                      saved_w 007E                     ??_tune_up 0074       __end_of__initialization 0028  
             eeprom_read@addr 0075                __pcstackCOMMON 0070                  __pidataBANK0 05EF  
               __end_of_putch 05EA             eeprom_write@value 0074          __size_of_load_tuning 0026  
                     ??_putch 0074                    __pbssBANK0 0041                    __pbssBANK1 00A0  
                  __pmaintext 045B                       ?___lmul 0020                  ?_tuningCheck 0070  
                  __pintentry 0004                ___lmul@product 0075                       ?_printf 0029  
                   ?_checkKey 0070                    __stringtab 002B            __size_of_tune_down 0001  
                     _InitApp 041D          __size_of_save_tuning 003F                checkKey@keyVal 0076  
               SPI_Write@data 0074         __size_of_eeprom_write 0026               __size_of___lmul 0041  
                     ___lldiv 02FF                       ___lwdiv 03DF                       ___lwmod 04C7  
                     __ptext1 05B9                       __ptext2 022F                       __ptext3 05F1  
                     __ptext4 05F2                       __ptext5 03A0                       __ptext6 0552  
                     __ptext7 0527                       __ptext8 029F                       __ptext9 00E6  
             __size_of_printf 00B5                       _dpowers 0031                    ??_checkKey 0074  
                __size_of_isr 000B                       clrloop0 05DB                       _tune_up 05F1  
        end_of_initialization 0028                  _eeprom_write 0552               ___lldiv@divisor 0028  
             ___lldiv@counter 0035                       printf@c 0038                       printf@f 0035  
              _in_tuning_mode 0046                     _PORTAbits 0005                     _PORTBbits 0006  
                   _PORTCbits 0007             __end_of_tune_down 05F3                     _TRISAbits 0085  
                   _TRISBbits 0086                     _TRISCbits 0087                     _SPI_Write 04FB  
               ?_print_tuning 0070   __end_of_ConfigureOscillator 05EF                 ??_eeprom_read 0074  
              play@real_value 003C                 ??_get_voltage 0079                __end_of___lmul 03A0  
        __size_of_tuningCheck 0016                   _BAUDCTLbits 009B                __end_of_printf 019B  
         start_initialization 0013                   __end_of_isr 05DA                ??_print_tuning 0039  
                  ?_SPI_Write 0074              _currently_tuning 0079               SPI_Write@config 0020  
                    ??___lmul 0074           __end_of_eeprom_read 05B9                   __pdataBANK0 0047  
                    ??_printf 002F                 ??_load_tuning 0076                   __pbssCOMMON 0079  
         __end_of_get_voltage 04C7                     ___latbits 0001                 __pcstackBANK0 0020  
           __size_of_checkKey 0094              eeprom_write@addr 0076                      ?_InitApp 0070  
            ___lwdiv@dividend 0076                      ?___lldiv 0028                      ?___lwdiv 0074  
                    ?___lwmod 0023                     __pstrings 002B                   ??_SPI_Write 0076  
                   _key_count 0047              ___lwdiv@quotient 0020                      ?_tune_up 0070  
         __end_of_load_tuning 059E                __size_of_putch 0008                 ??_save_tuning 0039  
           interrupt_function 0004                     clear_ram0 05DA                   _eeprom_read 059E  
        __end_of_print_tuning 0552                   _get_voltage 0491                   __stringbase 0030  
                  printf@flag 0033                      _WPUAbits 0095                    printf@prec 0034  
                   _tune_down 05F2             ___lmul@multiplier 0020              __size_of_InitApp 003E  
         __end_of_save_tuning 03DF              __size_of___lldiv 0060              __size_of___lwdiv 003E  
            __size_of___lwmod 0034            __end_of__stringtab 0031                      _checkKey 019B  
                 _load_tuning 0578                   _current_key 0045                    ?_tune_down 0070  
             ___lwdiv@divisor 0074               ___lwdiv@counter 0022                      __ptext10 05E2  
                    __ptext11 04C7                      __ptext20 041D                      __ptext12 03DF  
                    __ptext21 05EA                      __ptext13 0491                      __ptext22 05CF  
                    __ptext14 035F                      __ptext15 02FF                      __ptext16 019B  
                    __ptext17 04FB                      __ptext18 0578                      __ptext19 059E  
          get_voltage@keyCode 0036              __size_of_tune_up 0001                      _last_key 0041  
               __size_of_main 0036                 __size_of_play 0060                 __size_of_tune 0070  
__size_of_ConfigureOscillator 0005                 ??_tuningCheck 0079                     printf@val 0036  
                   putch@data 0074                      intlevel1 0000              save_tuning@value 003B  
                 _save_tuning 03A0              ___lwmod@dividend 0025              ___lldiv@dividend 002C  
       __size_of_print_tuning 002B                     stringcode 002B                      printf@ap 0032  
                _pressed_keys 0043           __end_of_tuningCheck 05CF              ___lldiv@quotient 0031  
             ___lwmod@divisor 0023               ___lwmod@counter 0028                      stringdir 002B  
                 ??_tune_down 0074                      stringtab 002B                  _print_tuning 0527  
               ?_eeprom_write 0074             __CFG_FOSC$INTRCIO 0000                  ?_eeprom_read 0070  
                  _SSPCONbits 0014  
