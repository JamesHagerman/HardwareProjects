

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May  7 00:22:20 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001C                     	;# 
    55  001D                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0087                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  008F                     	;# 
    66  0090                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0093                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  0095                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  010C                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011E                     	;# 
    95  011F                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  019D                     	;# 
    99  019E                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  0086                     	;# 
   134  0087                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011A                     	;# 
   166  011B                     	;# 
   167  011E                     	;# 
   168  011F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0115                     	;# 
   235  0116                     	;# 
   236  0118                     	;# 
   237  0119                     	;# 
   238  011A                     	;# 
   239  011B                     	;# 
   240  011E                     	;# 
   241  011F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  019D                     	;# 
   245  019E                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0115                     	;# 
   308  0116                     	;# 
   309  0118                     	;# 
   310  0119                     	;# 
   311  011A                     	;# 
   312  011B                     	;# 
   313  011E                     	;# 
   314  011F                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0115                     	;# 
   381  0116                     	;# 
   382  0118                     	;# 
   383  0119                     	;# 
   384  011A                     	;# 
   385  011B                     	;# 
   386  011E                     	;# 
   387  011F                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  019D                     	;# 
   391  019E                     	;# 
   392                           
   393                           	psect	idataBANK0
   394  0427                     __pidataBANK0:	
   395                           
   396                           ;initializer for _key_count
   397  0427  3417               	retlw	23
   398  0428  3400               	retlw	0
   399                           
   400                           	psect	strings
   401  0253                     __pstrings:	
   402  0253                     stringtab:	
   403  0253                     __stringtab:	
   404  0253                     stringcode:	
   405                           ;	String table - string pointers are 1 byte each
   406                           
   407  0253                     stringdir:	
   408  0253  3002               	movlw	high stringdir
   409  0254  008A               	movwf	10
   410  0255  0804               	movf	4,w
   411  0256  0A84               	incf	4,f
   412  0257  0782               	addwf	2,f
   413  0258                     __stringbase:	
   414  0258  3400               	retlw	0
   415  0259                     __end_of__stringtab:	
   416  0259                     _dpowers:	
   417  0259  3401               	retlw	1
   418  025A  3400               	retlw	0
   419  025B  340A               	retlw	10
   420  025C  3400               	retlw	0
   421  025D  3464               	retlw	100
   422  025E  3400               	retlw	0
   423  025F  34E8               	retlw	232
   424  0260  3403               	retlw	3
   425  0261  3410               	retlw	16
   426  0262  3427               	retlw	39
   427  0263                     __end_of_dpowers:	
   428  0005                     _PORTAbits	set	5
   429  0006                     _PORTBbits	set	6
   430  0007                     _PORTCbits	set	7
   431  0013                     _SSPBUF	set	19
   432  0014                     _SSPCONbits	set	20
   433  0019                     _TXREG	set	25
   434  00C4                     _CREN	set	196
   435  00C7                     _SPEN	set	199
   436  0064                     _TXIF	set	100
   437  009B                     _BAUDCTLbits	set	155
   438  008F                     _OSCCON	set	143
   439  0099                     _SPBRG	set	153
   440  0094                     _SSPSTATbits	set	148
   441  0085                     _TRISA	set	133
   442  0085                     _TRISAbits	set	133
   443  0086                     _TRISB	set	134
   444  0086                     _TRISBbits	set	134
   445  0087                     _TRISC	set	135
   446  0087                     _TRISCbits	set	135
   447  0095                     _WPUAbits	set	149
   448  04C2                     _BRGH	set	1218
   449  04C4                     _SYNC	set	1220
   450  04C5                     _TXEN	set	1221
   451  040F                     _nRABPU	set	1039
   452  011E                     _ANSEL	set	286
   453  011F                     _ANSELH	set	287
   454  0263                     STR_2:	
   455  0263  344C               	retlw	76	;'L'
   456  0264  3461               	retlw	97	;'a'
   457  0265  3473               	retlw	115	;'s'
   458  0266  3474               	retlw	116	;'t'
   459  0267  3420               	retlw	32	;' '
   460  0268  344B               	retlw	75	;'K'
   461  0269  3465               	retlw	101	;'e'
   462  026A  3479               	retlw	121	;'y'
   463  026B  343A               	retlw	58	;':'
   464  026C  3420               	retlw	32	;' '
   465  026D  3425               	retlw	37	;'%'
   466  026E  3469               	retlw	105	;'i'
   467  026F  3420               	retlw	32	;' '
   468  0270  3409               	retlw	9
   469  0271  3420               	retlw	32	;' '
   470  0272  3452               	retlw	82	;'R'
   471  0273  3465               	retlw	101	;'e'
   472  0274  3461               	retlw	97	;'a'
   473  0275  346C               	retlw	108	;'l'
   474  0276  3420               	retlw	32	;' '
   475  0277  3456               	retlw	86	;'V'
   476  0278  3461               	retlw	97	;'a'
   477  0279  346C               	retlw	108	;'l'
   478  027A  3475               	retlw	117	;'u'
   479  027B  3465               	retlw	101	;'e'
   480  027C  343A               	retlw	58	;':'
   481  027D  3420               	retlw	32	;' '
   482  027E  3425               	retlw	37	;'%'
   483  027F  3469               	retlw	105	;'i'
   484  0280  3420               	retlw	32	;' '
   485  0281  3420               	retlw	32	;' '
   486  0282  3409               	retlw	9
   487  0283  3420               	retlw	32	;' '
   488  0284  3450               	retlw	80	;'P'
   489  0285  3472               	retlw	114	;'r'
   490  0286  3465               	retlw	101	;'e'
   491  0287  3473               	retlw	115	;'s'
   492  0288  3473               	retlw	115	;'s'
   493  0289  3465               	retlw	101	;'e'
   494  028A  3464               	retlw	100	;'d'
   495  028B  3420               	retlw	32	;' '
   496  028C  344B               	retlw	75	;'K'
   497  028D  3465               	retlw	101	;'e'
   498  028E  3479               	retlw	121	;'y'
   499  028F  3473               	retlw	115	;'s'
   500  0290  343A               	retlw	58	;':'
   501  0291  3420               	retlw	32	;' '
   502  0292  3425               	retlw	37	;'%'
   503  0293  3469               	retlw	105	;'i'
   504  0294  3420               	retlw	32	;' '
   505  0295  340A               	retlw	10
   506  0296  340D               	retlw	13
   507  0297  3400               	retlw	0
   508  0298                     STR_1:	
   509  0298  3449               	retlw	73	;'I'
   510  0299  346E               	retlw	110	;'n'
   511  029A  3420               	retlw	32	;' '
   512  029B  3474               	retlw	116	;'t'
   513  029C  3475               	retlw	117	;'u'
   514  029D  346E               	retlw	110	;'n'
   515  029E  3469               	retlw	105	;'i'
   516  029F  346E               	retlw	110	;'n'
   517  02A0  3467               	retlw	103	;'g'
   518  02A1  3420               	retlw	32	;' '
   519  02A2  346D               	retlw	109	;'m'
   520  02A3  346F               	retlw	111	;'o'
   521  02A4  3464               	retlw	100	;'d'
   522  02A5  3465               	retlw	101	;'e'
   523  02A6  340A               	retlw	10
   524  02A7  340D               	retlw	13
   525  02A8  3400               	retlw	0
   526                           
   527                           ; #config settings
   528  0000                     
   529                           	psect	cinit
   530  0013                     start_initialization:	
   531  0013                     __initialization:	
   532                           
   533                           ; Clear objects allocated to BANK0
   534  0013  01C0               	clrf	__pbssBANK0& (0+127)
   535  0014  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   536  0015  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   537  0016  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   538  0017  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   539                           
   540                           ; Initialize objects allocated to BANK0
   541  0018  118A  2427  118A   	fcall	__pidataBANK0	;fetch initializer
   542  001B  00C5               	movwf	__pdataBANK0& (0+127)
   543  001C  118A  2428         	fcall	__pidataBANK0+1	;fetch initializer
   544  001E  00C6               	movwf	(__pdataBANK0+1)& (0+127)
   545  001F                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548  001F                     __end_of__initialization:	
   549  001F  0183               	clrf	3
   550  0020  118A  296B         	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssBANK0
   553  0040                     __pbssBANK0:	
   554  0040                     _last_key:	
   555  0040                     	ds	2
   556  0042                     _pressed_keys:	
   557  0042                     	ds	2
   558  0044                     _in_tuning_mode:	
   559  0044                     	ds	1
   560                           
   561                           	psect	dataBANK0
   562  0045                     __pdataBANK0:	
   563  0045                     _key_count:	
   564  0045                     	ds	2
   565                           
   566                           	psect	cstackCOMMON
   567  0070                     __pcstackCOMMON:	
   568  0070                     ?_ConfigureOscillator:	
   569  0070                     ?_InitApp:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_isr:	
   573                           ; 0 bytes @ 0x0
   574                           
   575  0070                     ??_isr:	
   576                           ; 0 bytes @ 0x0
   577                           
   578  0070                     ?_putch:	
   579                           ; 0 bytes @ 0x0
   580                           
   581  0070                     ?_main:	
   582                           ; 0 bytes @ 0x0
   583                           
   584  0070                     ?_checkKey:	
   585                           ; 0 bytes @ 0x0
   586                           
   587  0070                     ?_tuningCheck:	
   588                           ; 1 bytes @ 0x0
   589                           
   590                           
   591                           ; 1 bytes @ 0x0
   592  0070                     	ds	4
   593  0074                     ??_ConfigureOscillator:	
   594  0074                     ??_InitApp:	
   595                           ; 0 bytes @ 0x4
   596                           
   597  0074                     ??_putch:	
   598                           ; 0 bytes @ 0x4
   599                           
   600  0074                     ?_SPI_Write:	
   601                           ; 0 bytes @ 0x4
   602                           
   603  0074                     ??_checkKey:	
   604                           ; 0 bytes @ 0x4
   605                           
   606  0074                     ??___lmul:	
   607                           ; 0 bytes @ 0x4
   608                           
   609  0074                     ?___lwdiv:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0074                     putch@data:	
   613                           ; 2 bytes @ 0x4
   614                           
   615  0074                     SPI_Write@data:	
   616                           ; 1 bytes @ 0x4
   617                           
   618  0074                     ___lwdiv@divisor:	
   619                           ; 2 bytes @ 0x4
   620                           
   621                           
   622                           ; 2 bytes @ 0x4
   623  0074                     	ds	1
   624  0075                     ___lmul@product:	
   625                           
   626                           ; 4 bytes @ 0x5
   627  0075                     	ds	1
   628  0076                     ??_SPI_Write:	
   629  0076                     checkKey@keyVal:	
   630                           ; 0 bytes @ 0x6
   631                           
   632  0076                     ___lwdiv@dividend:	
   633                           ; 1 bytes @ 0x6
   634                           
   635                           
   636                           ; 2 bytes @ 0x6
   637  0076                     	ds	1
   638  0077                     ??_tuningCheck:	
   639                           
   640                           ; 0 bytes @ 0x7
   641  0077                     	ds	1
   642  0078                     ??___lwdiv:	
   643  0078                     SPI_Write@config:	
   644                           ; 0 bytes @ 0x8
   645                           
   646                           
   647                           ; 2 bytes @ 0x8
   648  0078                     	ds	1
   649  0079                     ??___lldiv:	
   650  0079                     ??___lwmod:	
   651                           ; 0 bytes @ 0x9
   652                           
   653                           
   654                           ; 0 bytes @ 0x9
   655  0079                     	ds	1
   656  007A                     ??_get_voltage:	
   657                           
   658                           	psect	cstackBANK0
   659  0020                     __pcstackBANK0:	
   660                           ; 0 bytes @ 0xA
   661                           
   662  0020                     ?___lmul:	
   663  0020                     ___lwdiv@quotient:	
   664                           ; 4 bytes @ 0x0
   665                           
   666  0020                     ___lmul@multiplier:	
   667                           ; 2 bytes @ 0x0
   668                           
   669                           
   670                           ; 4 bytes @ 0x0
   671  0020                     	ds	2
   672  0022                     ___lwdiv@counter:	
   673                           
   674                           ; 1 bytes @ 0x2
   675  0022                     	ds	1
   676  0023                     ?___lwmod:	
   677  0023                     ___lwmod@divisor:	
   678                           ; 2 bytes @ 0x3
   679                           
   680                           
   681                           ; 2 bytes @ 0x3
   682  0023                     	ds	1
   683  0024                     ___lmul@multiplicand:	
   684                           
   685                           ; 4 bytes @ 0x4
   686  0024                     	ds	1
   687  0025                     ___lwmod@dividend:	
   688                           
   689                           ; 2 bytes @ 0x5
   690  0025                     	ds	2
   691  0027                     ___lwmod@counter:	
   692                           
   693                           ; 1 bytes @ 0x7
   694  0027                     	ds	1
   695  0028                     ?_printf:	
   696  0028                     ?___lldiv:	
   697                           ; 2 bytes @ 0x8
   698                           
   699  0028                     ___lldiv@divisor:	
   700                           ; 4 bytes @ 0x8
   701                           
   702                           
   703                           ; 4 bytes @ 0x8
   704  0028                     	ds	4
   705  002C                     ___lldiv@dividend:	
   706                           
   707                           ; 4 bytes @ 0xC
   708  002C                     	ds	2
   709  002E                     ??_printf:	
   710                           
   711                           ; 0 bytes @ 0xE
   712  002E                     	ds	2
   713  0030                     ___lldiv@quotient:	
   714                           
   715                           ; 4 bytes @ 0x10
   716  0030                     	ds	1
   717  0031                     printf@ap:	
   718                           
   719                           ; 1 bytes @ 0x11
   720  0031                     	ds	1
   721  0032                     printf@flag:	
   722                           
   723                           ; 1 bytes @ 0x12
   724  0032                     	ds	1
   725  0033                     printf@prec:	
   726                           
   727                           ; 1 bytes @ 0x13
   728  0033                     	ds	1
   729  0034                     printf@f:	
   730  0034                     ___lldiv@counter:	
   731                           ; 1 bytes @ 0x14
   732                           
   733                           
   734                           ; 1 bytes @ 0x14
   735  0034                     	ds	1
   736  0035                     ?_get_voltage:	
   737  0035                     printf@val:	
   738                           ; 4 bytes @ 0x15
   739                           
   740  0035                     get_voltage@keyCode:	
   741                           ; 2 bytes @ 0x15
   742                           
   743                           
   744                           ; 4 bytes @ 0x15
   745  0035                     	ds	2
   746  0037                     printf@c:	
   747                           
   748                           ; 1 bytes @ 0x17
   749  0037                     	ds	2
   750  0039                     ??_main:	
   751                           
   752                           ; 0 bytes @ 0x19
   753  0039                     	ds	3
   754  003C                     main@real_value:	
   755                           
   756                           ; 2 bytes @ 0x1C
   757  003C                     	ds	2
   758  003E                     main@current_key:	
   759                           
   760                           ; 2 bytes @ 0x1E
   761  003E                     	ds	2
   762                           
   763                           	psect	maintext
   764  016B                     __pmaintext:	
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 154 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  real_value      2   28[BANK0 ] unsigned int 
   775 ;;  current_key     2   30[BANK0 ] unsigned int 
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : B00/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   785 ;;      Params:         0       0       0       0
   786 ;;      Locals:         0       4       0       0
   787 ;;      Temps:          0       3       0       0
   788 ;;      Totals:         0       7       0       0
   789 ;;Total ram usage:        7 bytes
   790 ;; Hardware stack levels required when called:    3
   791 ;; This function calls:
   792 ;;		_ConfigureOscillator
   793 ;;		_InitApp
   794 ;;		_SPI_Write
   795 ;;		_checkKey
   796 ;;		_get_voltage
   797 ;;		_printf
   798 ;;		_tuningCheck
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _main
   806  016B                     _main:	
   807                           
   808                           ;main.c: 157: ConfigureOscillator();
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   812  016B  118A  2422  118A   	fcall	_ConfigureOscillator
   813                           
   814                           ;main.c: 160: InitApp();
   815  016E  118A  2328  118A   	fcall	_InitApp
   816                           
   817                           ;main.c: 163: tuningCheck();
   818  0171  118A  23FC  118A   	fcall	_tuningCheck
   819  0174                     l1220:	
   820                           ;main.c: 164: while(in_tuning_mode) {
   821                           
   822  0174  1283               	bcf	3,5	;RP0=0, select bank0
   823  0175  1303               	bcf	3,6	;RP1=0, select bank0
   824  0176  0844               	movf	_in_tuning_mode,w
   825  0177  1903               	btfsc	3,2
   826  0178  2988               	goto	l1222
   827                           
   828                           ;main.c: 165: printf("In tuning mode\n\r");
   829  0179  3040               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   830  017A  118A  2022  118A   	fcall	_printf
   831                           
   832                           ;main.c: 168: if (checkKey(10)) {
   833  017D  300A               	movlw	10
   834  017E  118A  20D7  118A   	fcall	_checkKey
   835  0181  3A00               	xorlw	0
   836  0182  1903               	skipnz
   837  0183  2974               	goto	l1220
   838                           
   839                           ;main.c: 169: in_tuning_mode = 0;
   840  0184  1283               	bcf	3,5	;RP0=0, select bank0
   841  0185  1303               	bcf	3,6	;RP1=0, select bank0
   842  0186  01C4               	clrf	_in_tuning_mode
   843  0187  2974               	goto	l1220
   844  0188                     l1222:	
   845                           
   846                           ;main.c: 170: }
   847                           ;main.c: 171: }
   848                           ;main.c: 173: _delay((unsigned long)((1000)*(8000000L/4000.0)));
   849  0188  300B               	movlw	11
   850  0189  00BB               	movwf	??_main+2
   851  018A  3026               	movlw	38
   852  018B  00BA               	movwf	??_main+1
   853  018C  3066               	movlw	102
   854  018D  00B9               	movwf	??_main
   855  018E                     u1047:	
   856  018E  0BB9               	decfsz	??_main,f
   857  018F  298E               	goto	u1047
   858  0190  0BBA               	decfsz	??_main+1,f
   859  0191  298E               	goto	u1047
   860  0192  0BBB               	decfsz	??_main+2,f
   861  0193  298E               	goto	u1047
   862  0194  2995               	nop2
   863  0195                     l1224:	
   864                           ;main.c: 174: while(1)
   865                           
   866                           
   867                           ;main.c: 175: {
   868                           ;main.c: 215: pressed_keys = 0;
   869  0195  1283               	bcf	3,5	;RP0=0, select bank0
   870  0196  1303               	bcf	3,6	;RP1=0, select bank0
   871  0197  01C2               	clrf	_pressed_keys
   872  0198  01C3               	clrf	_pressed_keys+1
   873                           
   874                           ;main.c: 216: last_key = 100;
   875  0199  3064               	movlw	100
   876  019A  00C0               	movwf	_last_key
   877  019B  3000               	movlw	0
   878  019C  00C1               	movwf	_last_key+1
   879                           
   880                           ;main.c: 217: for (uint16_t current_key = 0; current_key < key_count; current_key += 1) 
      +                          {
   881  019D  01BE               	clrf	main@current_key
   882  019E  01BF               	clrf	main@current_key+1
   883  019F                     l82:	
   884  019F  0846               	movf	_key_count+1,w
   885  01A0  023F               	subwf	main@current_key+1,w
   886  01A1  1D03               	skipz
   887  01A2  29A5               	goto	u1025
   888  01A3  0845               	movf	_key_count,w
   889  01A4  023E               	subwf	main@current_key,w
   890  01A5                     u1025:	
   891  01A5  1803               	btfsc	3,0
   892  01A6  29C3               	goto	l1232
   893                           
   894                           ;main.c: 219: if (checkKey(current_key)) {
   895  01A7  083E               	movf	main@current_key,w
   896  01A8  118A  20D7  118A   	fcall	_checkKey
   897  01AB  3A00               	xorlw	0
   898  01AC  1903               	skipnz
   899  01AD  29BA               	goto	l84
   900                           
   901                           ;main.c: 220: pressed_keys += 1;
   902  01AE  3001               	movlw	1
   903  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   904  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   905  01B1  07C2               	addwf	_pressed_keys,f
   906  01B2  1803               	skipnc
   907  01B3  0AC3               	incf	_pressed_keys+1,f
   908  01B4  3000               	movlw	0
   909  01B5  07C3               	addwf	_pressed_keys+1,f
   910                           
   911                           ;main.c: 221: last_key = current_key;
   912  01B6  083F               	movf	main@current_key+1,w
   913  01B7  00C1               	movwf	_last_key+1
   914  01B8  083E               	movf	main@current_key,w
   915  01B9  00C0               	movwf	_last_key
   916  01BA                     l84:	
   917  01BA  3001               	movlw	1
   918  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   919  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   920  01BD  07BE               	addwf	main@current_key,f
   921  01BE  1803               	skipnc
   922  01BF  0ABF               	incf	main@current_key+1,f
   923  01C0  3000               	movlw	0
   924  01C1  07BF               	addwf	main@current_key+1,f
   925  01C2  299F               	goto	l82
   926  01C3                     l1232:	
   927                           
   928                           ;main.c: 222: }
   929                           ;main.c: 224: }
   930                           ;main.c: 226: if (pressed_keys > 0) {
   931  01C3  0842               	movf	_pressed_keys,w
   932  01C4  0443               	iorwf	_pressed_keys+1,w
   933  01C5  1903               	btfsc	3,2
   934  01C6  29F1               	goto	l86
   935                           
   936                           ;main.c: 227: PORTCbits.RC5 = 1;
   937  01C7  1687               	bsf	7,5	;volatile
   938                           
   939                           ;main.c: 229: uint16_t real_value = get_voltage(last_key);
   940  01C8  0840               	movf	_last_key,w
   941  01C9  00B5               	movwf	get_voltage@keyCode
   942  01CA  0841               	movf	_last_key+1,w
   943  01CB  00B6               	movwf	get_voltage@keyCode+1
   944  01CC  01B7               	clrf	get_voltage@keyCode+2
   945  01CD  01B8               	clrf	get_voltage@keyCode+3
   946  01CE  118A  2366  118A   	fcall	_get_voltage
   947  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   948  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   949  01D3  0836               	movf	?_get_voltage+1,w
   950  01D4  00BD               	movwf	main@real_value+1
   951  01D5  0835               	movf	?_get_voltage,w
   952  01D6  00BC               	movwf	main@real_value
   953                           
   954                           ;main.c: 230: printf("Last Key: %i \t Real Value: %i  \t Pressed Keys: %i \n\r", last_ke
      +                          y, real_value, pressed_keys);
   955  01D7  0841               	movf	_last_key+1,w
   956  01D8  00A9               	movwf	?_printf+1
   957  01D9  0840               	movf	_last_key,w
   958  01DA  00A8               	movwf	?_printf
   959  01DB  083D               	movf	main@real_value+1,w
   960  01DC  00AB               	movwf	?_printf+3
   961  01DD  083C               	movf	main@real_value,w
   962  01DE  00AA               	movwf	?_printf+2
   963  01DF  0843               	movf	_pressed_keys+1,w
   964  01E0  00AD               	movwf	?_printf+5
   965  01E1  0842               	movf	_pressed_keys,w
   966  01E2  00AC               	movwf	?_printf+4
   967  01E3  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   968  01E4  118A  2022  118A   	fcall	_printf
   969                           
   970                           ;main.c: 231: SPI_Write(real_value);
   971  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   972  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   973  01E9  083D               	movf	main@real_value+1,w
   974  01EA  00F5               	movwf	SPI_Write@data+1
   975  01EB  083C               	movf	main@real_value,w
   976  01EC  00F4               	movwf	SPI_Write@data
   977  01ED  118A  23D0  118A   	fcall	_SPI_Write
   978                           
   979                           ;main.c: 232: } else {
   980  01F0  2995               	goto	l1224
   981  01F1                     l86:	
   982                           
   983                           ;main.c: 233: PORTCbits.RC5 = 0;
   984  01F1  1287               	bcf	7,5	;volatile
   985  01F2  2995               	goto	l1224
   986  01F3                     __end_of_main:	
   987                           
   988                           	psect	text1
   989  03FC                     __ptext1:	
   990 ;; *************** function _tuningCheck *****************
   991 ;; Defined at:
   992 ;;		line 124 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1006 ;;      Params:         0       0       0       0
  1007 ;;      Locals:         0       0       0       0
  1008 ;;      Temps:          0       0       0       0
  1009 ;;      Totals:         0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		_checkKey
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function _tuningCheck
  1022  03FC                     _tuningCheck:	
  1023                           
  1024                           ;main.c: 128: if (checkKey(0) && checkKey(22)) {
  1025                           
  1026                           ;incstack = 0
  1027                           ; Regs used in _tuningCheck: [wreg+status,2+status,0+pclath+cstack]
  1028  03FC  3000               	movlw	0
  1029  03FD  118A  20D7  118A   	fcall	_checkKey
  1030  0400  3A00               	xorlw	0
  1031  0401  1903               	skipnz
  1032  0402  0008               	return
  1033  0403  3016               	movlw	22
  1034  0404  118A  20D7  118A   	fcall	_checkKey
  1035  0407  3A00               	xorlw	0
  1036  0408  1903               	skipnz
  1037  0409  0008               	return
  1038                           
  1039                           ;main.c: 129: in_tuning_mode = 1;
  1040  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1041  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1042  040C  01C4               	clrf	_in_tuning_mode
  1043  040D  0AC4               	incf	_in_tuning_mode,f
  1044  040E  0008               	return
  1045  040F                     __end_of_tuningCheck:	
  1046                           
  1047                           	psect	text2
  1048  00D7                     __ptext2:	
  1049 ;; *************** function _checkKey *****************
  1050 ;; Defined at:
  1051 ;;		line 97 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  keyVal          1    wreg     unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  keyVal          1    6[COMMON] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      unsigned char 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1065 ;;      Params:         0       0       0       0
  1066 ;;      Locals:         1       0       0       0
  1067 ;;      Temps:          2       0       0       0
  1068 ;;      Totals:         3       0       0       0
  1069 ;;Total ram usage:        3 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_tuningCheck
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _checkKey
  1082  00D7                     _checkKey:	
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _checkKey: [wreg+status,2+status,0]
  1086                           ;checkKey@keyVal stored from wreg
  1087  00D7  00F6               	movwf	checkKey@keyVal
  1088                           
  1089                           ;main.c: 98: keyVal = (key_count - keyVal - 1);
  1090  00D8  0876               	movf	checkKey@keyVal,w
  1091  00D9  3E01               	addlw	1
  1092  00DA  3AFF               	xorlw	255
  1093  00DB  3E01               	addlw	1
  1094  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00DE  0745               	addwf	_key_count,w
  1097  00DF  00F4               	movwf	??_checkKey
  1098  00E0  0874               	movf	??_checkKey,w
  1099  00E1  00F6               	movwf	checkKey@keyVal
  1100                           
  1101                           ;main.c: 99: if (keyVal <= 15) {
  1102  00E2  3010               	movlw	16
  1103  00E3  0276               	subwf	checkKey@keyVal,w
  1104  00E4  1803               	skipnc
  1105  00E5  2932               	goto	l962
  1106                           
  1107                           ;main.c: 100: PORTAbits.RA2 = (keyVal >> 0) & 1;
  1108  00E6  0876               	movf	checkKey@keyVal,w
  1109  00E7  3901               	andlw	1
  1110  00E8  00F4               	movwf	??_checkKey
  1111  00E9  0DF4               	rlf	??_checkKey,f
  1112  00EA  0DF4               	rlf	??_checkKey,f
  1113  00EB  0805               	movf	5,w	;volatile
  1114  00EC  0674               	xorwf	??_checkKey,w
  1115  00ED  39FB               	andlw	-5
  1116  00EE  0674               	xorwf	??_checkKey,w
  1117  00EF  0085               	movwf	5	;volatile
  1118                           
  1119                           ;main.c: 101: PORTCbits.RC0 = (keyVal >> 1) & 1;
  1120  00F0  0876               	movf	checkKey@keyVal,w
  1121  00F1  00F4               	movwf	??_checkKey
  1122  00F2  3001               	movlw	1
  1123  00F3                     u565:	
  1124  00F3  1003               	clrc
  1125  00F4  0CF4               	rrf	??_checkKey,f
  1126  00F5  3EFF               	addlw	-1
  1127  00F6  1D03               	skipz
  1128  00F7  28F3               	goto	u565
  1129  00F8  3001               	movlw	1
  1130  00F9  0574               	andwf	??_checkKey,w
  1131  00FA  00F5               	movwf	??_checkKey+1
  1132  00FB  0807               	movf	7,w	;volatile
  1133  00FC  0675               	xorwf	??_checkKey+1,w
  1134  00FD  39FE               	andlw	-2
  1135  00FE  0675               	xorwf	??_checkKey+1,w
  1136  00FF  0087               	movwf	7	;volatile
  1137                           
  1138                           ;main.c: 102: PORTCbits.RC1 = (keyVal >> 2) & 1;
  1139  0100  0876               	movf	checkKey@keyVal,w
  1140  0101  00F4               	movwf	??_checkKey
  1141  0102  3002               	movlw	2
  1142  0103                     u575:	
  1143  0103  1003               	clrc
  1144  0104  0CF4               	rrf	??_checkKey,f
  1145  0105  3EFF               	addlw	-1
  1146  0106  1D03               	skipz
  1147  0107  2903               	goto	u575
  1148  0108  0874               	movf	??_checkKey,w
  1149  0109  3901               	andlw	1
  1150  010A  00F5               	movwf	??_checkKey+1
  1151  010B  0DF5               	rlf	??_checkKey+1,f
  1152  010C  0807               	movf	7,w	;volatile
  1153  010D  0675               	xorwf	??_checkKey+1,w
  1154  010E  39FD               	andlw	-3
  1155  010F  0675               	xorwf	??_checkKey+1,w
  1156  0110  0087               	movwf	7	;volatile
  1157                           
  1158                           ;main.c: 103: PORTCbits.RC2 = (keyVal >> 3) & 1;
  1159  0111  0876               	movf	checkKey@keyVal,w
  1160  0112  00F4               	movwf	??_checkKey
  1161  0113  3003               	movlw	3
  1162  0114                     u585:	
  1163  0114  1003               	clrc
  1164  0115  0CF4               	rrf	??_checkKey,f
  1165  0116  3EFF               	addlw	-1
  1166  0117  1D03               	skipz
  1167  0118  2914               	goto	u585
  1168  0119  0874               	movf	??_checkKey,w
  1169  011A  3901               	andlw	1
  1170  011B  00F5               	movwf	??_checkKey+1
  1171  011C  0DF5               	rlf	??_checkKey+1,f
  1172  011D  0DF5               	rlf	??_checkKey+1,f
  1173  011E  0807               	movf	7,w	;volatile
  1174  011F  0675               	xorwf	??_checkKey+1,w
  1175  0120  39FB               	andlw	-5
  1176  0121  0675               	xorwf	??_checkKey+1,w
  1177  0122  0087               	movwf	7	;volatile
  1178                           
  1179                           ;main.c: 105: _delay((unsigned long)((1)*(8000000L/4000.0)));
  1180  0123  3003               	movlw	3
  1181  0124  00F5               	movwf	??_checkKey+1
  1182  0125  3097               	movlw	151
  1183  0126  00F4               	movwf	??_checkKey
  1184  0127                     u1057:	
  1185  0127  0BF4               	decfsz	??_checkKey,f
  1186  0128  2927               	goto	u1057
  1187  0129  0BF5               	decfsz	??_checkKey+1,f
  1188  012A  2927               	goto	u1057
  1189  012B  292C               	nop2
  1190                           
  1191                           ;main.c: 107: if (PORTAbits.RA4 == 0) {
  1192  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1193  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1194  012E  1A05               	btfsc	5,4	;volatile
  1195  012F  2969               	goto	l972
  1196                           
  1197                           ;main.c: 108: return 1;
  1198  0130  3001               	movlw	1
  1199  0131  0008               	return
  1200  0132                     l962:	
  1201                           ;main.c: 109: }
  1202                           ;main.c: 110: } else {
  1203                           
  1204                           
  1205                           ;main.c: 111: PORTBbits.RB4 = (keyVal >> 0) & 1;
  1206  0132  0876               	movf	checkKey@keyVal,w
  1207  0133  3901               	andlw	1
  1208  0134  00F4               	movwf	??_checkKey
  1209  0135  0EF4               	swapf	??_checkKey,f
  1210  0136  0806               	movf	6,w	;volatile
  1211  0137  0674               	xorwf	??_checkKey,w
  1212  0138  39EF               	andlw	-17
  1213  0139  0674               	xorwf	??_checkKey,w
  1214  013A  0086               	movwf	6	;volatile
  1215                           
  1216                           ;main.c: 112: PORTCbits.RC3 = (keyVal >> 1) & 1;
  1217  013B  0876               	movf	checkKey@keyVal,w
  1218  013C  00F4               	movwf	??_checkKey
  1219  013D  1003               	clrc
  1220  013E  0C74               	rrf	??_checkKey,w
  1221  013F  3901               	andlw	1
  1222  0140  00F5               	movwf	??_checkKey+1
  1223  0141  0DF5               	rlf	??_checkKey+1,f
  1224  0142  0DF5               	rlf	??_checkKey+1,f
  1225  0143  0DF5               	rlf	??_checkKey+1,f
  1226  0144  0807               	movf	7,w	;volatile
  1227  0145  0675               	xorwf	??_checkKey+1,w
  1228  0146  39F7               	andlw	-9
  1229  0147  0675               	xorwf	??_checkKey+1,w
  1230  0148  0087               	movwf	7	;volatile
  1231                           
  1232                           ;main.c: 113: PORTCbits.RC4 = (keyVal >> 2) & 1;
  1233  0149  0876               	movf	checkKey@keyVal,w
  1234  014A  00F4               	movwf	??_checkKey
  1235  014B  3002               	movlw	2
  1236  014C                     u605:	
  1237  014C  1003               	clrc
  1238  014D  0CF4               	rrf	??_checkKey,f
  1239  014E  3EFF               	addlw	-1
  1240  014F  1D03               	skipz
  1241  0150  294C               	goto	u605
  1242  0151  0874               	movf	??_checkKey,w
  1243  0152  3901               	andlw	1
  1244  0153  00F5               	movwf	??_checkKey+1
  1245  0154  0EF5               	swapf	??_checkKey+1,f
  1246  0155  0807               	movf	7,w	;volatile
  1247  0156  0675               	xorwf	??_checkKey+1,w
  1248  0157  39EF               	andlw	-17
  1249  0158  0675               	xorwf	??_checkKey+1,w
  1250  0159  0087               	movwf	7	;volatile
  1251                           
  1252                           ;main.c: 115: _delay((unsigned long)((1)*(8000000L/4000.0)));
  1253  015A  3003               	movlw	3
  1254  015B  00F5               	movwf	??_checkKey+1
  1255  015C  3097               	movlw	151
  1256  015D  00F4               	movwf	??_checkKey
  1257  015E                     u1067:	
  1258  015E  0BF4               	decfsz	??_checkKey,f
  1259  015F  295E               	goto	u1067
  1260  0160  0BF5               	decfsz	??_checkKey+1,f
  1261  0161  295E               	goto	u1067
  1262  0162  2963               	nop2
  1263                           
  1264                           ;main.c: 117: if (PORTAbits.RA5 == 0) {
  1265  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0165  1A85               	btfsc	5,5	;volatile
  1268  0166  2969               	goto	l972
  1269                           
  1270                           ;main.c: 118: return 1;
  1271  0167  3001               	movlw	1
  1272  0168  0008               	return
  1273  0169                     l972:	
  1274                           
  1275                           ;main.c: 119: }
  1276                           ;main.c: 120: }
  1277                           ;main.c: 121: return 0;
  1278  0169  3000               	movlw	0
  1279  016A  0008               	return
  1280  016B                     __end_of_checkKey:	
  1281                           
  1282                           	psect	text3
  1283  0022                     __ptext3:	
  1284 ;; *************** function _printf *****************
  1285 ;; Defined at:
  1286 ;;		line 464 in file "/Applications/microchip/xc8/v1.34/sources/common/doprnt.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  f               1    wreg     PTR const unsigned char 
  1289 ;;		 -> STR_2(53), STR_1(17), 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  1292 ;;		 -> STR_2(53), STR_1(17), 
  1293 ;;  tmpval          4    0        struct .
  1294 ;;  val             2   21[BANK0 ] unsigned int 
  1295 ;;  cp              2    0        PTR const unsigned char 
  1296 ;;  len             2    0        unsigned int 
  1297 ;;  c               1   23[BANK0 ] char 
  1298 ;;  prec            1   19[BANK0 ] char 
  1299 ;;  flag            1   18[BANK0 ] unsigned char 
  1300 ;;  ap              1   17[BANK0 ] PTR void [1]
  1301 ;;		 -> ?_printf(2), 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2    8[BANK0 ] int 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1311 ;;      Params:         0       6       0       0
  1312 ;;      Locals:         0       7       0       0
  1313 ;;      Temps:          0       3       0       0
  1314 ;;      Totals:         0      16       0       0
  1315 ;;Total ram usage:       16 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    2
  1318 ;; This function calls:
  1319 ;;		___lwdiv
  1320 ;;		___lwmod
  1321 ;;		_putch
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _printf
  1329  0022                     _printf:	
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1333                           ;printf@f stored from wreg
  1334  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0024  00B4               	movwf	printf@f
  1337                           
  1338                           ;doprnt.c: 466: va_list ap;
  1339                           ;doprnt.c: 499: signed char c;
  1340                           ;doprnt.c: 506: signed char prec;
  1341                           ;doprnt.c: 508: unsigned char flag;
  1342                           ;doprnt.c: 523: union {
  1343                           ;doprnt.c: 524: unsigned long vd;
  1344                           ;doprnt.c: 525: double integ;
  1345                           ;doprnt.c: 526: } tmpval;
  1346                           ;doprnt.c: 528: unsigned int val;
  1347                           ;doprnt.c: 529: unsigned len;
  1348                           ;doprnt.c: 530: const char * cp;
  1349                           ;doprnt.c: 533: *ap = __va_start();
  1350  0025  3028               	movlw	(low (?_printf| 0))& (0+255)
  1351  0026  00AE               	movwf	??_printf
  1352  0027  082E               	movf	??_printf,w
  1353  0028  00B1               	movwf	printf@ap
  1354  0029                     l1210:	
  1355                           ;doprnt.c: 536: while(c = *f++) {
  1356                           
  1357  0029  3001               	movlw	1
  1358  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1359  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1360  002C  07B4               	addwf	printf@f,f
  1361  002D  30FF               	movlw	-1
  1362  002E  0734               	addwf	printf@f,w
  1363  002F  0084               	movwf	4
  1364  0030  118A  2253  118A   	fcall	stringdir
  1365  0033  00AE               	movwf	??_printf
  1366  0034  082E               	movf	??_printf,w
  1367  0035  00B7               	movwf	printf@c
  1368  0036  0837               	movf	printf@c,w
  1369  0037  1903               	btfsc	3,2
  1370  0038  0008               	return
  1371                           
  1372                           ;doprnt.c: 538: if(c != '%')
  1373  0039  3025               	movlw	37
  1374  003A  0637               	xorwf	printf@c,w
  1375  003B  1903               	btfsc	3,2
  1376  003C  2842               	goto	l1170
  1377                           
  1378                           ;doprnt.c: 540: {
  1379                           ;doprnt.c: 541: (putch(c) );
  1380  003D  0837               	movf	printf@c,w
  1381  003E  118A  241A  118A   	fcall	_putch
  1382                           
  1383                           ;doprnt.c: 542: continue;
  1384  0041  2829               	goto	l1210
  1385  0042                     l1170:	
  1386                           
  1387                           ;doprnt.c: 543: }
  1388                           ;doprnt.c: 548: flag = 0;
  1389  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0044  01B2               	clrf	printf@flag
  1392                           
  1393                           ;doprnt.c: 822: }
  1394                           
  1395                           ;doprnt.c: 813: continue;
  1396                           
  1397                           ;doprnt.c: 802: default:
  1398                           
  1399                           ;doprnt.c: 698: case 'i':
  1400                           ;doprnt.c: 699: break;
  1401                           
  1402                           ;doprnt.c: 697: case 'd':
  1403                           
  1404                           ;doprnt.c: 638: goto alldone;
  1405                           
  1406                           ;doprnt.c: 637: case 0:
  1407                           
  1408                           ;doprnt.c: 635: switch(c = *f++) {
  1409  0045  3001               	movlw	1
  1410  0046  07B4               	addwf	printf@f,f
  1411  0047  30FF               	movlw	-1
  1412  0048  0734               	addwf	printf@f,w
  1413  0049  0084               	movwf	4
  1414  004A  118A  2253  118A   	fcall	stringdir
  1415  004D  00B7               	movwf	printf@c
  1416                           
  1417                           ; Switch size 1, requested type "space"
  1418                           ; Number of cases is 3, Range of values is 0 to 105
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; simple_byte           10     6 (average)
  1422                           ; direct_byte          219     7 (fixed)
  1423                           ; jumptable            260     6 (fixed)
  1424                           ;	Chosen strategy is simple_byte
  1425  004E  3A00               	xorlw	0	; case 0
  1426  004F  1903               	skipnz
  1427  0050  28D6               	goto	l170
  1428  0051  3A64               	xorlw	100	; case 100
  1429  0052  1903               	skipnz
  1430  0053  2858               	goto	l1176
  1431  0054  3A0D               	xorlw	13	; case 105
  1432  0055  1903               	skipnz
  1433  0056  2858               	goto	l1176
  1434  0057  2829               	goto	l1210
  1435  0058                     l1176:	
  1436                           
  1437                           ;doprnt.c: 1253: {
  1438                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1439  0058  0831               	movf	printf@ap,w
  1440  0059  0084               	movwf	4
  1441  005A  1383               	bcf	3,7	;select IRP bank0
  1442  005B  0800               	movf	0,w
  1443  005C  00B5               	movwf	printf@val
  1444  005D  0A84               	incf	4,f
  1445  005E  0800               	movf	0,w
  1446  005F  00B6               	movwf	printf@val+1
  1447  0060  3002               	movlw	2
  1448  0061  00AE               	movwf	??_printf
  1449  0062  082E               	movf	??_printf,w
  1450  0063  07B1               	addwf	printf@ap,f
  1451                           
  1452                           ;doprnt.c: 1261: if((int)val < 0) {
  1453  0064  1FB6               	btfss	printf@val+1,7
  1454  0065  286F               	goto	l1186
  1455                           
  1456                           ;doprnt.c: 1262: flag |= 0x03;
  1457  0066  3003               	movlw	3
  1458  0067  00AE               	movwf	??_printf
  1459  0068  082E               	movf	??_printf,w
  1460  0069  04B2               	iorwf	printf@flag,f
  1461                           
  1462                           ;doprnt.c: 1263: val = -val;
  1463  006A  09B5               	comf	printf@val,f
  1464  006B  09B6               	comf	printf@val+1,f
  1465  006C  0AB5               	incf	printf@val,f
  1466  006D  1903               	skipnz
  1467  006E  0AB6               	incf	printf@val+1,f
  1468  006F                     l1186:	
  1469                           
  1470                           ;doprnt.c: 1264: }
  1471                           ;doprnt.c: 1266: }
  1472                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1473  006F  01B7               	clrf	printf@c
  1474  0070  0AB7               	incf	printf@c,f
  1475  0071  3005               	movlw	5
  1476  0072  0637               	xorwf	printf@c,w
  1477  0073  1903               	btfsc	3,2
  1478  0074  2892               	goto	l1198
  1479  0075                     l1192:	
  1480                           
  1481                           ;doprnt.c: 1306: if(val < dpowers[c])
  1482  0075  0837               	movf	printf@c,w
  1483  0076  00AE               	movwf	??_printf
  1484  0077  072E               	addwf	??_printf,w
  1485  0078  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1486  0079  0084               	movwf	4
  1487  007A  118A  2253  118A   	fcall	stringdir
  1488  007D  00AF               	movwf	??_printf+1
  1489  007E  118A  2253  118A   	fcall	stringdir
  1490  0081  00B0               	movwf	??_printf+2
  1491  0082  0830               	movf	??_printf+2,w
  1492  0083  0236               	subwf	printf@val+1,w
  1493  0084  1D03               	skipz
  1494  0085  2888               	goto	u945
  1495  0086  082F               	movf	??_printf+1,w
  1496  0087  0235               	subwf	printf@val,w
  1497  0088                     u945:	
  1498  0088  1C03               	btfss	3,0
  1499  0089  2892               	goto	l1198
  1500                           
  1501                           ;doprnt.c: 1307: break;
  1502  008A  3001               	movlw	1
  1503  008B  00AE               	movwf	??_printf
  1504  008C  082E               	movf	??_printf,w
  1505  008D  07B7               	addwf	printf@c,f
  1506  008E  3005               	movlw	5
  1507  008F  0637               	xorwf	printf@c,w
  1508  0090  1D03               	btfss	3,2
  1509  0091  2875               	goto	l1192
  1510  0092                     l1198:	
  1511                           
  1512                           ;doprnt.c: 1422: {
  1513                           ;doprnt.c: 1438: if(flag & 0x03)
  1514  0092  0832               	movf	printf@flag,w
  1515  0093  3903               	andlw	3
  1516  0094  1903               	btfsc	3,2
  1517  0095  289A               	goto	l1202
  1518                           
  1519                           ;doprnt.c: 1439: (putch('-') );
  1520  0096  302D               	movlw	45
  1521  0097  118A  241A  118A   	fcall	_putch
  1522  009A                     l1202:	
  1523                           
  1524                           ;doprnt.c: 1469: }
  1525                           ;doprnt.c: 1472: prec = c;
  1526  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1527  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1528  009C  0837               	movf	printf@c,w
  1529  009D  00AE               	movwf	??_printf
  1530  009E  082E               	movf	??_printf,w
  1531  009F  00B3               	movwf	printf@prec
  1532  00A0                     l1208:	
  1533                           ;doprnt.c: 1474: while(prec--) {
  1534                           
  1535  00A0  30FF               	movlw	255
  1536  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1537  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1538  00A3  00AE               	movwf	??_printf
  1539  00A4  082E               	movf	??_printf,w
  1540  00A5  07B3               	addwf	printf@prec,f
  1541  00A6  0A33               	incf	printf@prec,w
  1542  00A7  1903               	btfsc	3,2
  1543  00A8  2829               	goto	l1210
  1544                           
  1545                           ;doprnt.c: 1478: {
  1546                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1547  00A9  300A               	movlw	10
  1548  00AA  00A3               	movwf	___lwmod@divisor
  1549  00AB  3000               	movlw	0
  1550  00AC  00A4               	movwf	___lwmod@divisor+1
  1551  00AD  0833               	movf	printf@prec,w
  1552  00AE  00AE               	movwf	??_printf
  1553  00AF  072E               	addwf	??_printf,w
  1554  00B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1555  00B1  0084               	movwf	4
  1556  00B2  118A  2253  118A   	fcall	stringdir
  1557  00B5  00F4               	movwf	___lwdiv@divisor
  1558  00B6  118A  2253  118A   	fcall	stringdir
  1559  00B9  00F5               	movwf	___lwdiv@divisor+1
  1560  00BA  0836               	movf	printf@val+1,w
  1561  00BB  00F7               	movwf	___lwdiv@dividend+1
  1562  00BC  0835               	movf	printf@val,w
  1563  00BD  00F6               	movwf	___lwdiv@dividend
  1564  00BE  118A  22EA  118A   	fcall	___lwdiv
  1565  00C1  0875               	movf	?___lwdiv+1,w
  1566  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1567  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1568  00C4  00A6               	movwf	___lwmod@dividend+1
  1569  00C5  0874               	movf	?___lwdiv,w
  1570  00C6  00A5               	movwf	___lwmod@dividend
  1571  00C7  118A  239C  118A   	fcall	___lwmod
  1572  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1573  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1574  00CC  0823               	movf	?___lwmod,w
  1575  00CD  3E30               	addlw	48
  1576  00CE  00AF               	movwf	??_printf+1
  1577  00CF  082F               	movf	??_printf+1,w
  1578  00D0  00B7               	movwf	printf@c
  1579                           
  1580                           ;doprnt.c: 1523: }
  1581                           ;doprnt.c: 1524: (putch(c) );
  1582  00D1  0837               	movf	printf@c,w
  1583  00D2  118A  241A  118A   	fcall	_putch
  1584  00D5  28A0               	goto	l1208
  1585  00D6                     l170:	
  1586                           ;doprnt.c: 1540: return 0;
  1587                           ;	Return value of _printf is never used
  1588                           
  1589                           ;doprnt.c: 1525: }
  1590                           ;doprnt.c: 1533: }
  1591                           ;doprnt.c: 1535: alldone:
  1592                           
  1593  00D6  0008               	return
  1594  00D7                     __end_of_printf:	
  1595                           
  1596                           	psect	text4
  1597  041A                     __ptext4:	
  1598 ;; *************** function _putch *****************
  1599 ;; Defined at:
  1600 ;;		line 26 in file "main.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  data            1    wreg     unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  data            1    4[COMMON] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;		None               void
  1607 ;; Registers used:
  1608 ;;		wreg
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1614 ;;      Params:         0       0       0       0
  1615 ;;      Locals:         1       0       0       0
  1616 ;;      Temps:          0       0       0       0
  1617 ;;      Totals:         1       0       0       0
  1618 ;;Total ram usage:        1 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_printf
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _putch
  1630  041A                     _putch:	
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _putch: [wreg]
  1634                           ;putch@data stored from wreg
  1635  041A  00F4               	movwf	putch@data
  1636  041B                     l28:	
  1637                           ;main.c: 28: continue;
  1638                           
  1639                           ;main.c: 27: while( ! TXIF)
  1640                           
  1641  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1642  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1643  041D  1E0C               	btfss	12,4	;volatile
  1644  041E  2C1B               	goto	l28
  1645                           
  1646                           ;main.c: 29: TXREG = data;
  1647  041F  0874               	movf	putch@data,w
  1648  0420  0099               	movwf	25	;volatile
  1649  0421  0008               	return
  1650  0422                     __end_of_putch:	
  1651                           
  1652                           	psect	text5
  1653  039C                     __ptext5:	
  1654 ;; *************** function ___lwmod *****************
  1655 ;; Defined at:
  1656 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwmod.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  divisor         2    3[BANK0 ] unsigned int 
  1659 ;;  dividend        2    5[BANK0 ] unsigned int 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  counter         1    7[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2    3[BANK0 ] unsigned int 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       4       0       0
  1672 ;;      Locals:         0       1       0       0
  1673 ;;      Temps:          1       0       0       0
  1674 ;;      Totals:         1       5       0       0
  1675 ;;Total ram usage:        6 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_printf
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function ___lwmod
  1687  039C                     ___lwmod:	
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1691  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1692  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1693  039E  0823               	movf	___lwmod@divisor,w
  1694  039F  0424               	iorwf	___lwmod@divisor+1,w
  1695  03A0  1903               	btfsc	3,2
  1696  03A1  2BCB               	goto	l1058
  1697  03A2  01A7               	clrf	___lwmod@counter
  1698  03A3  0AA7               	incf	___lwmod@counter,f
  1699  03A4                     l1048:	
  1700  03A4  1BA4               	btfsc	___lwmod@divisor+1,7
  1701  03A5  2BB2               	goto	l1050
  1702  03A6  3001               	movlw	1
  1703  03A7                     u825:	
  1704  03A7  1003               	clrc
  1705  03A8  0DA3               	rlf	___lwmod@divisor,f
  1706  03A9  0DA4               	rlf	___lwmod@divisor+1,f
  1707  03AA  3EFF               	addlw	-1
  1708  03AB  1D03               	skipz
  1709  03AC  2BA7               	goto	u825
  1710  03AD  3001               	movlw	1
  1711  03AE  00F9               	movwf	??___lwmod
  1712  03AF  0879               	movf	??___lwmod,w
  1713  03B0  07A7               	addwf	___lwmod@counter,f
  1714  03B1  2BA4               	goto	l1048
  1715  03B2                     l1050:	
  1716  03B2  0824               	movf	___lwmod@divisor+1,w
  1717  03B3  0226               	subwf	___lwmod@dividend+1,w
  1718  03B4  1D03               	skipz
  1719  03B5  2BB8               	goto	u845
  1720  03B6  0823               	movf	___lwmod@divisor,w
  1721  03B7  0225               	subwf	___lwmod@dividend,w
  1722  03B8                     u845:	
  1723  03B8  1C03               	skipc
  1724  03B9  2BC0               	goto	l1054
  1725  03BA  0823               	movf	___lwmod@divisor,w
  1726  03BB  02A5               	subwf	___lwmod@dividend,f
  1727  03BC  0824               	movf	___lwmod@divisor+1,w
  1728  03BD  1C03               	skipc
  1729  03BE  03A6               	decf	___lwmod@dividend+1,f
  1730  03BF  02A6               	subwf	___lwmod@dividend+1,f
  1731  03C0                     l1054:	
  1732  03C0  3001               	movlw	1
  1733  03C1                     u855:	
  1734  03C1  1003               	clrc
  1735  03C2  0CA4               	rrf	___lwmod@divisor+1,f
  1736  03C3  0CA3               	rrf	___lwmod@divisor,f
  1737  03C4  3EFF               	addlw	-1
  1738  03C5  1D03               	skipz
  1739  03C6  2BC1               	goto	u855
  1740  03C7  3001               	movlw	1
  1741  03C8  02A7               	subwf	___lwmod@counter,f
  1742  03C9  1D03               	btfss	3,2
  1743  03CA  2BB2               	goto	l1050
  1744  03CB                     l1058:	
  1745  03CB  0826               	movf	___lwmod@dividend+1,w
  1746  03CC  00A4               	movwf	?___lwmod+1
  1747  03CD  0825               	movf	___lwmod@dividend,w
  1748  03CE  00A3               	movwf	?___lwmod
  1749  03CF  0008               	return
  1750  03D0                     __end_of___lwmod:	
  1751                           
  1752                           	psect	text6
  1753  02EA                     __ptext6:	
  1754 ;; *************** function ___lwdiv *****************
  1755 ;; Defined at:
  1756 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  divisor         2    4[COMMON] unsigned int 
  1759 ;;  dividend        2    6[COMMON] unsigned int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  quotient        2    0[BANK0 ] unsigned int 
  1762 ;;  counter         1    2[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2    4[COMMON] unsigned int 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1772 ;;      Params:         4       0       0       0
  1773 ;;      Locals:         0       3       0       0
  1774 ;;      Temps:          1       0       0       0
  1775 ;;      Totals:         5       3       0       0
  1776 ;;Total ram usage:        8 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_printf
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function ___lwdiv
  1788  02EA                     ___lwdiv:	
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1792  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1793  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1794  02EC  01A0               	clrf	___lwdiv@quotient
  1795  02ED  01A1               	clrf	___lwdiv@quotient+1
  1796  02EE  0874               	movf	___lwdiv@divisor,w
  1797  02EF  0475               	iorwf	___lwdiv@divisor+1,w
  1798  02F0  1903               	btfsc	3,2
  1799  02F1  2B23               	goto	l1036
  1800  02F2  01A2               	clrf	___lwdiv@counter
  1801  02F3  0AA2               	incf	___lwdiv@counter,f
  1802  02F4                     l1024:	
  1803  02F4  1BF5               	btfsc	___lwdiv@divisor+1,7
  1804  02F5  2B02               	goto	l1026
  1805  02F6  3001               	movlw	1
  1806  02F7                     u755:	
  1807  02F7  1003               	clrc
  1808  02F8  0DF4               	rlf	___lwdiv@divisor,f
  1809  02F9  0DF5               	rlf	___lwdiv@divisor+1,f
  1810  02FA  3EFF               	addlw	-1
  1811  02FB  1D03               	skipz
  1812  02FC  2AF7               	goto	u755
  1813  02FD  3001               	movlw	1
  1814  02FE  00F8               	movwf	??___lwdiv
  1815  02FF  0878               	movf	??___lwdiv,w
  1816  0300  07A2               	addwf	___lwdiv@counter,f
  1817  0301  2AF4               	goto	l1024
  1818  0302                     l1026:	
  1819  0302  3001               	movlw	1
  1820  0303                     u775:	
  1821  0303  1003               	clrc
  1822  0304  0DA0               	rlf	___lwdiv@quotient,f
  1823  0305  0DA1               	rlf	___lwdiv@quotient+1,f
  1824  0306  3EFF               	addlw	-1
  1825  0307  1D03               	skipz
  1826  0308  2B03               	goto	u775
  1827  0309  0875               	movf	___lwdiv@divisor+1,w
  1828  030A  0277               	subwf	___lwdiv@dividend+1,w
  1829  030B  1D03               	skipz
  1830  030C  2B0F               	goto	u785
  1831  030D  0874               	movf	___lwdiv@divisor,w
  1832  030E  0276               	subwf	___lwdiv@dividend,w
  1833  030F                     u785:	
  1834  030F  1C03               	skipc
  1835  0310  2B18               	goto	l1032
  1836  0311  0874               	movf	___lwdiv@divisor,w
  1837  0312  02F6               	subwf	___lwdiv@dividend,f
  1838  0313  0875               	movf	___lwdiv@divisor+1,w
  1839  0314  1C03               	skipc
  1840  0315  03F7               	decf	___lwdiv@dividend+1,f
  1841  0316  02F7               	subwf	___lwdiv@dividend+1,f
  1842  0317  1420               	bsf	___lwdiv@quotient,0
  1843  0318                     l1032:	
  1844  0318  3001               	movlw	1
  1845  0319                     u795:	
  1846  0319  1003               	clrc
  1847  031A  0CF5               	rrf	___lwdiv@divisor+1,f
  1848  031B  0CF4               	rrf	___lwdiv@divisor,f
  1849  031C  3EFF               	addlw	-1
  1850  031D  1D03               	skipz
  1851  031E  2B19               	goto	u795
  1852  031F  3001               	movlw	1
  1853  0320  02A2               	subwf	___lwdiv@counter,f
  1854  0321  1D03               	btfss	3,2
  1855  0322  2B02               	goto	l1026
  1856  0323                     l1036:	
  1857  0323  0821               	movf	___lwdiv@quotient+1,w
  1858  0324  00F5               	movwf	?___lwdiv+1
  1859  0325  0820               	movf	___lwdiv@quotient,w
  1860  0326  00F4               	movwf	?___lwdiv
  1861  0327  0008               	return
  1862  0328                     __end_of___lwdiv:	
  1863                           
  1864                           	psect	text7
  1865  0366                     __ptext7:	
  1866 ;; *************** function _get_voltage *****************
  1867 ;; Defined at:
  1868 ;;		line 136 in file "main.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  keyCode         4   21[BANK0 ] unsigned long 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  4   21[BANK0 ] unsigned long 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1882 ;;      Params:         0       4       0       0
  1883 ;;      Locals:         0       0       0       0
  1884 ;;      Temps:          0       0       0       0
  1885 ;;      Totals:         0       4       0       0
  1886 ;;Total ram usage:        4 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		___lldiv
  1891 ;;		___lmul
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _get_voltage
  1899  0366                     _get_voltage:	
  1900                           
  1901                           ;main.c: 148: return (keyCode * 1502) / (key_count-1);
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _get_voltage: [wreg+status,2+status,0+pclath+cstack]
  1905  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0368  0845               	movf	_key_count,w
  1908  0369  3EFF               	addlw	255
  1909  036A  00A8               	movwf	___lldiv@divisor
  1910  036B  0846               	movf	_key_count+1,w
  1911  036C  1803               	skipnc
  1912  036D  3E01               	addlw	1
  1913  036E  3EFF               	addlw	255
  1914  036F  00A9               	movwf	___lldiv@divisor+1
  1915  0370  01AA               	clrf	___lldiv@divisor+2
  1916  0371  01AB               	clrf	___lldiv@divisor+3
  1917  0372  0838               	movf	get_voltage@keyCode+3,w
  1918  0373  00A3               	movwf	___lmul@multiplier+3
  1919  0374  0837               	movf	get_voltage@keyCode+2,w
  1920  0375  00A2               	movwf	___lmul@multiplier+2
  1921  0376  0836               	movf	get_voltage@keyCode+1,w
  1922  0377  00A1               	movwf	___lmul@multiplier+1
  1923  0378  0835               	movf	get_voltage@keyCode,w
  1924  0379  00A0               	movwf	___lmul@multiplier
  1925  037A  3000               	movlw	0
  1926  037B  00A7               	movwf	___lmul@multiplicand+3
  1927  037C  3000               	movlw	0
  1928  037D  00A6               	movwf	___lmul@multiplicand+2
  1929  037E  3005               	movlw	5
  1930  037F  00A5               	movwf	___lmul@multiplicand+1
  1931  0380  30DE               	movlw	222
  1932  0381  00A4               	movwf	___lmul@multiplicand
  1933  0382  118A  22A9  118A   	fcall	___lmul
  1934  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0387  0823               	movf	?___lmul+3,w
  1937  0388  00AF               	movwf	___lldiv@dividend+3
  1938  0389  0822               	movf	?___lmul+2,w
  1939  038A  00AE               	movwf	___lldiv@dividend+2
  1940  038B  0821               	movf	?___lmul+1,w
  1941  038C  00AD               	movwf	___lldiv@dividend+1
  1942  038D  0820               	movf	?___lmul,w
  1943  038E  00AC               	movwf	___lldiv@dividend
  1944  038F  118A  21F3         	fcall	___lldiv
  1945  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0393  082B               	movf	?___lldiv+3,w
  1948  0394  00B8               	movwf	?_get_voltage+3
  1949  0395  082A               	movf	?___lldiv+2,w
  1950  0396  00B7               	movwf	?_get_voltage+2
  1951  0397  0829               	movf	?___lldiv+1,w
  1952  0398  00B6               	movwf	?_get_voltage+1
  1953  0399  0828               	movf	?___lldiv,w
  1954  039A  00B5               	movwf	?_get_voltage
  1955  039B  0008               	return
  1956  039C                     __end_of_get_voltage:	
  1957                           
  1958                           	psect	text8
  1959  02A9                     __ptext8:	
  1960 ;; *************** function ___lmul *****************
  1961 ;; Defined at:
  1962 ;;		line 15 in file "/Applications/microchip/xc8/v1.34/sources/common/Umul32.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1965 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  product         4    5[COMMON] unsigned long 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  4    0[BANK0 ] unsigned long 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1977 ;;      Params:         0       8       0       0
  1978 ;;      Locals:         4       0       0       0
  1979 ;;      Temps:          1       0       0       0
  1980 ;;      Totals:         5       8       0       0
  1981 ;;Total ram usage:       13 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_get_voltage
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function ___lmul
  1993  02A9                     ___lmul:	
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1997  02A9  3000               	movlw	0
  1998  02AA  00F8               	movwf	___lmul@product+3
  1999  02AB  3000               	movlw	0
  2000  02AC  00F7               	movwf	___lmul@product+2
  2001  02AD  3000               	movlw	0
  2002  02AE  00F6               	movwf	___lmul@product+1
  2003  02AF  3000               	movlw	0
  2004  02B0  00F5               	movwf	___lmul@product
  2005  02B1                     l978:	
  2006  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2007  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2008  02B3  1C20               	btfss	___lmul@multiplier,0
  2009  02B4  2AC9               	goto	l982
  2010  02B5  0824               	movf	___lmul@multiplicand,w
  2011  02B6  07F5               	addwf	___lmul@product,f
  2012  02B7  0825               	movf	___lmul@multiplicand+1,w
  2013  02B8  1103               	clrz
  2014  02B9  1803               	skipnc
  2015  02BA  3E01               	addlw	1
  2016  02BB  1D03               	btfss	3,2
  2017  02BC  07F6               	addwf	___lmul@product+1,f
  2018  02BD  0826               	movf	___lmul@multiplicand+2,w
  2019  02BE  1103               	clrz
  2020  02BF  1803               	skipnc
  2021  02C0  3E01               	addlw	1
  2022  02C1  1D03               	btfss	3,2
  2023  02C2  07F7               	addwf	___lmul@product+2,f
  2024  02C3  0827               	movf	___lmul@multiplicand+3,w
  2025  02C4  1103               	clrz
  2026  02C5  1803               	skipnc
  2027  02C6  3E01               	addlw	1
  2028  02C7  1D03               	btfss	3,2
  2029  02C8  07F8               	addwf	___lmul@product+3,f
  2030  02C9                     l982:	
  2031  02C9  3001               	movlw	1
  2032  02CA  00F4               	movwf	??___lmul
  2033  02CB                     u645:	
  2034  02CB  1003               	clrc
  2035  02CC  0DA4               	rlf	___lmul@multiplicand,f
  2036  02CD  0DA5               	rlf	___lmul@multiplicand+1,f
  2037  02CE  0DA6               	rlf	___lmul@multiplicand+2,f
  2038  02CF  0DA7               	rlf	___lmul@multiplicand+3,f
  2039  02D0  0BF4               	decfsz	??___lmul,f
  2040  02D1  2ACB               	goto	u645
  2041  02D2  3001               	movlw	1
  2042  02D3                     u655:	
  2043  02D3  1003               	clrc
  2044  02D4  0CA3               	rrf	___lmul@multiplier+3,f
  2045  02D5  0CA2               	rrf	___lmul@multiplier+2,f
  2046  02D6  0CA1               	rrf	___lmul@multiplier+1,f
  2047  02D7  0CA0               	rrf	___lmul@multiplier,f
  2048  02D8  3EFF               	addlw	-1
  2049  02D9  1D03               	skipz
  2050  02DA  2AD3               	goto	u655
  2051  02DB  0823               	movf	___lmul@multiplier+3,w
  2052  02DC  0422               	iorwf	___lmul@multiplier+2,w
  2053  02DD  0421               	iorwf	___lmul@multiplier+1,w
  2054  02DE  0420               	iorwf	___lmul@multiplier,w
  2055  02DF  1D03               	skipz
  2056  02E0  2AB1               	goto	l978
  2057  02E1  0878               	movf	___lmul@product+3,w
  2058  02E2  00A3               	movwf	?___lmul+3
  2059  02E3  0877               	movf	___lmul@product+2,w
  2060  02E4  00A2               	movwf	?___lmul+2
  2061  02E5  0876               	movf	___lmul@product+1,w
  2062  02E6  00A1               	movwf	?___lmul+1
  2063  02E7  0875               	movf	___lmul@product,w
  2064  02E8  00A0               	movwf	?___lmul
  2065  02E9  0008               	return
  2066  02EA                     __end_of___lmul:	
  2067                           
  2068                           	psect	text9
  2069  01F3                     __ptext9:	
  2070 ;; *************** function ___lldiv *****************
  2071 ;; Defined at:
  2072 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lldiv.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  divisor         4    8[BANK0 ] unsigned long 
  2075 ;;  dividend        4   12[BANK0 ] unsigned long 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  quotient        4   16[BANK0 ] unsigned long 
  2078 ;;  counter         1   20[BANK0 ] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  4    8[BANK0 ] unsigned long 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2088 ;;      Params:         0       8       0       0
  2089 ;;      Locals:         0       5       0       0
  2090 ;;      Temps:          1       0       0       0
  2091 ;;      Totals:         1      13       0       0
  2092 ;;Total ram usage:       14 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_get_voltage
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___lldiv
  2104  01F3                     ___lldiv:	
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2108  01F3  3000               	movlw	0
  2109  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2110  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2111  01F6  00B3               	movwf	___lldiv@quotient+3
  2112  01F7  3000               	movlw	0
  2113  01F8  00B2               	movwf	___lldiv@quotient+2
  2114  01F9  3000               	movlw	0
  2115  01FA  00B1               	movwf	___lldiv@quotient+1
  2116  01FB  3000               	movlw	0
  2117  01FC  00B0               	movwf	___lldiv@quotient
  2118  01FD  082B               	movf	___lldiv@divisor+3,w
  2119  01FE  042A               	iorwf	___lldiv@divisor+2,w
  2120  01FF  0429               	iorwf	___lldiv@divisor+1,w
  2121  0200  0428               	iorwf	___lldiv@divisor,w
  2122  0201  1903               	skipnz
  2123  0202  2A4A               	goto	l1010
  2124  0203  01B4               	clrf	___lldiv@counter
  2125  0204  0AB4               	incf	___lldiv@counter,f
  2126  0205                     l996:	
  2127  0205  1BAB               	btfsc	___lldiv@divisor+3,7
  2128  0206  2A15               	goto	l998
  2129  0207  3001               	movlw	1
  2130  0208  00F9               	movwf	??___lldiv
  2131  0209                     u685:	
  2132  0209  1003               	clrc
  2133  020A  0DA8               	rlf	___lldiv@divisor,f
  2134  020B  0DA9               	rlf	___lldiv@divisor+1,f
  2135  020C  0DAA               	rlf	___lldiv@divisor+2,f
  2136  020D  0DAB               	rlf	___lldiv@divisor+3,f
  2137  020E  0BF9               	decfsz	??___lldiv,f
  2138  020F  2A09               	goto	u685
  2139  0210  3001               	movlw	1
  2140  0211  00F9               	movwf	??___lldiv
  2141  0212  0879               	movf	??___lldiv,w
  2142  0213  07B4               	addwf	___lldiv@counter,f
  2143  0214  2A05               	goto	l996
  2144  0215                     l998:	
  2145  0215  3001               	movlw	1
  2146  0216  00F9               	movwf	??___lldiv
  2147  0217                     u705:	
  2148  0217  1003               	clrc
  2149  0218  0DB0               	rlf	___lldiv@quotient,f
  2150  0219  0DB1               	rlf	___lldiv@quotient+1,f
  2151  021A  0DB2               	rlf	___lldiv@quotient+2,f
  2152  021B  0DB3               	rlf	___lldiv@quotient+3,f
  2153  021C  0BF9               	decfsz	??___lldiv,f
  2154  021D  2A17               	goto	u705
  2155  021E  082B               	movf	___lldiv@divisor+3,w
  2156  021F  022F               	subwf	___lldiv@dividend+3,w
  2157  0220  1D03               	skipz
  2158  0221  2A2C               	goto	u715
  2159  0222  082A               	movf	___lldiv@divisor+2,w
  2160  0223  022E               	subwf	___lldiv@dividend+2,w
  2161  0224  1D03               	skipz
  2162  0225  2A2C               	goto	u715
  2163  0226  0829               	movf	___lldiv@divisor+1,w
  2164  0227  022D               	subwf	___lldiv@dividend+1,w
  2165  0228  1D03               	skipz
  2166  0229  2A2C               	goto	u715
  2167  022A  0828               	movf	___lldiv@divisor,w
  2168  022B  022C               	subwf	___lldiv@dividend,w
  2169  022C                     u715:	
  2170  022C  1C03               	skipc
  2171  022D  2A3D               	goto	l1006
  2172  022E  0828               	movf	___lldiv@divisor,w
  2173  022F  02AC               	subwf	___lldiv@dividend,f
  2174  0230  0829               	movf	___lldiv@divisor+1,w
  2175  0231  1C03               	skipc
  2176  0232  0F29               	incfsz	___lldiv@divisor+1,w
  2177  0233  02AD               	subwf	___lldiv@dividend+1,f
  2178  0234  082A               	movf	___lldiv@divisor+2,w
  2179  0235  1C03               	skipc
  2180  0236  0F2A               	incfsz	___lldiv@divisor+2,w
  2181  0237  02AE               	subwf	___lldiv@dividend+2,f
  2182  0238  082B               	movf	___lldiv@divisor+3,w
  2183  0239  1C03               	skipc
  2184  023A  0F2B               	incfsz	___lldiv@divisor+3,w
  2185  023B  02AF               	subwf	___lldiv@dividend+3,f
  2186  023C  1430               	bsf	___lldiv@quotient,0
  2187  023D                     l1006:	
  2188  023D  3001               	movlw	1
  2189  023E                     u725:	
  2190  023E  1003               	clrc
  2191  023F  0CAB               	rrf	___lldiv@divisor+3,f
  2192  0240  0CAA               	rrf	___lldiv@divisor+2,f
  2193  0241  0CA9               	rrf	___lldiv@divisor+1,f
  2194  0242  0CA8               	rrf	___lldiv@divisor,f
  2195  0243  3EFF               	addlw	-1
  2196  0244  1D03               	skipz
  2197  0245  2A3E               	goto	u725
  2198  0246  3001               	movlw	1
  2199  0247  02B4               	subwf	___lldiv@counter,f
  2200  0248  1D03               	btfss	3,2
  2201  0249  2A15               	goto	l998
  2202  024A                     l1010:	
  2203  024A  0833               	movf	___lldiv@quotient+3,w
  2204  024B  00AB               	movwf	?___lldiv+3
  2205  024C  0832               	movf	___lldiv@quotient+2,w
  2206  024D  00AA               	movwf	?___lldiv+2
  2207  024E  0831               	movf	___lldiv@quotient+1,w
  2208  024F  00A9               	movwf	?___lldiv+1
  2209  0250  0830               	movf	___lldiv@quotient,w
  2210  0251  00A8               	movwf	?___lldiv
  2211  0252  0008               	return
  2212  0253                     __end_of___lldiv:	
  2213                           
  2214                           	psect	text10
  2215  03D0                     __ptext10:	
  2216 ;; *************** function _SPI_Write *****************
  2217 ;; Defined at:
  2218 ;;		line 33 in file "main.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  data            2    4[COMMON] unsigned int 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  config          2    8[COMMON] unsigned int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;		None               void
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2232 ;;      Params:         2       0       0       0
  2233 ;;      Locals:         2       0       0       0
  2234 ;;      Temps:          2       0       0       0
  2235 ;;      Totals:         6       0       0       0
  2236 ;;Total ram usage:        6 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    1
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _SPI_Write
  2248  03D0                     _SPI_Write:	
  2249                           
  2250                           ;main.c: 35: PORTCbits.RC6 = 0;
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in _SPI_Write: [wreg+status,2+status,0]
  2254  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2255  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2256  03D2  1307               	bcf	7,6	;volatile
  2257                           
  2258                           ;main.c: 38: uint16_t config = 0x3 << 12;
  2259  03D3  3000               	movlw	0
  2260  03D4  00F8               	movwf	SPI_Write@config
  2261  03D5  3030               	movlw	48
  2262  03D6  00F9               	movwf	SPI_Write@config+1
  2263                           
  2264                           ;main.c: 39: data = data & 0x0FFF;
  2265  03D7  30FF               	movlw	255
  2266  03D8  0574               	andwf	SPI_Write@data,w
  2267  03D9  00F4               	movwf	SPI_Write@data
  2268  03DA  300F               	movlw	15
  2269  03DB  0575               	andwf	SPI_Write@data+1,w
  2270  03DC  00F5               	movwf	SPI_Write@data+1
  2271                           
  2272                           ;main.c: 41: config = (config | data) >> 8;
  2273  03DD  0874               	movf	SPI_Write@data,w
  2274  03DE  0478               	iorwf	SPI_Write@config,w
  2275  03DF  00F6               	movwf	??_SPI_Write
  2276  03E0  0875               	movf	SPI_Write@data+1,w
  2277  03E1  0479               	iorwf	SPI_Write@config+1,w
  2278  03E2  00F7               	movwf	??_SPI_Write+1
  2279  03E3  0877               	movf	??_SPI_Write+1,w
  2280  03E4  00F6               	movwf	??_SPI_Write
  2281  03E5  01F7               	clrf	??_SPI_Write+1
  2282  03E6  0876               	movf	??_SPI_Write,w
  2283  03E7  00F8               	movwf	SPI_Write@config
  2284  03E8  0877               	movf	??_SPI_Write+1,w
  2285  03E9  00F9               	movwf	SPI_Write@config+1
  2286                           
  2287                           ;main.c: 43: SSPBUF = config;
  2288  03EA  0878               	movf	SPI_Write@config,w
  2289  03EB  0093               	movwf	19	;volatile
  2290  03EC                     l34:	
  2291                           ;main.c: 44: while( ! SSPSTATbits.BF);
  2292                           
  2293  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2294  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2295  03EE  1C14               	btfss	20,0	;volatile
  2296  03EF  2BEC               	goto	l34
  2297                           
  2298                           ;main.c: 46: SSPBUF = data;
  2299  03F0  0874               	movf	SPI_Write@data,w
  2300  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2301  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2302  03F3  0093               	movwf	19	;volatile
  2303  03F4                     l37:	
  2304                           ;main.c: 47: while( ! SSPSTATbits.BF);
  2305                           
  2306  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2307  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2308  03F6  1C14               	btfss	20,0	;volatile
  2309  03F7  2BF4               	goto	l37
  2310                           
  2311                           ;main.c: 50: PORTCbits.RC6 = 1;
  2312  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2313  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2314  03FA  1707               	bsf	7,6	;volatile
  2315  03FB  0008               	return
  2316  03FC                     __end_of_SPI_Write:	
  2317                           
  2318                           	psect	text11
  2319  0328                     __ptext11:	
  2320 ;; *************** function _InitApp *****************
  2321 ;; Defined at:
  2322 ;;		line 22 in file "user.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2336 ;;      Params:         0       0       0       0
  2337 ;;      Locals:         0       0       0       0
  2338 ;;      Temps:          0       0       0       0
  2339 ;;      Totals:         0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _InitApp
  2352  0328                     _InitApp:	
  2353                           
  2354                           ;user.c: 24: OSCCON = 0x70;
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  2358  0328  3070               	movlw	112
  2359  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2360  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2361  032B  008F               	movwf	15	;volatile
  2362                           
  2363                           ;user.c: 27: ANSEL = 0;
  2364  032C  1283               	bcf	3,5	;RP0=0, select bank2
  2365  032D  1703               	bsf	3,6	;RP1=1, select bank2
  2366  032E  019E               	clrf	30	;volatile
  2367                           
  2368                           ;user.c: 28: ANSELH = 0;
  2369  032F  019F               	clrf	31	;volatile
  2370                           
  2371                           ;user.c: 31: TRISA = 0;
  2372  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0332  0185               	clrf	5	;volatile
  2375                           
  2376                           ;user.c: 32: TRISB = 0;
  2377  0333  0186               	clrf	6	;volatile
  2378                           
  2379                           ;user.c: 33: TRISC = 0;
  2380  0334  0187               	clrf	7	;volatile
  2381                           
  2382                           ;user.c: 39: TRISBbits.TRISB5 = 1;
  2383  0335  1686               	bsf	6,5	;volatile
  2384                           
  2385                           ;user.c: 40: TRISBbits.TRISB7 = 1;
  2386  0336  1786               	bsf	6,7	;volatile
  2387                           
  2388                           ;user.c: 42: BAUDCTLbits.BRG16 = 0;
  2389  0337  119B               	bcf	27,3	;volatile
  2390                           
  2391                           ;user.c: 44: SPBRG = 51;
  2392  0338  3033               	movlw	51
  2393  0339  0099               	movwf	25	;volatile
  2394                           
  2395                           ;user.c: 47: BRGH = 1;
  2396  033A  1518               	bsf	24,2	;volatile
  2397                           
  2398                           ;user.c: 48: SYNC = 0;
  2399  033B  1218               	bcf	24,4	;volatile
  2400                           
  2401                           ;user.c: 49: SPEN = 1;
  2402  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2403  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2404  033E  1798               	bsf	24,7	;volatile
  2405                           
  2406                           ;user.c: 50: CREN = 0;
  2407  033F  1218               	bcf	24,4	;volatile
  2408                           
  2409                           ;user.c: 51: TXEN = 1;
  2410  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2411  0341  1303               	bcf	3,6	;RP1=0, select bank1
  2412  0342  1698               	bsf	24,5	;volatile
  2413                           
  2414                           ;user.c: 60: TRISCbits.TRISC7 = 0;
  2415  0343  1387               	bcf	7,7	;volatile
  2416                           
  2417                           ;user.c: 61: TRISBbits.TRISB4 = 1;
  2418  0344  1606               	bsf	6,4	;volatile
  2419                           
  2420                           ;user.c: 62: TRISBbits.TRISB6 = 0;
  2421  0345  1306               	bcf	6,6	;volatile
  2422                           
  2423                           ;user.c: 63: TRISCbits.TRISC6 = 0;
  2424  0346  1307               	bcf	7,6	;volatile
  2425                           
  2426                           ;user.c: 64: PORTCbits.RC6 = 1;
  2427  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0349  1707               	bsf	7,6	;volatile
  2430                           
  2431                           ;user.c: 66: SSPCONbits.SSPEN = 0;
  2432  034A  1294               	bcf	20,5	;volatile
  2433                           
  2434                           ;user.c: 67: SSPCONbits.SSPM = 0b0000;
  2435  034B  30F0               	movlw	-16
  2436  034C  0594               	andwf	20,f	;volatile
  2437                           
  2438                           ;user.c: 68: SSPSTATbits.SMP = 1;
  2439  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2440  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2441  034F  1794               	bsf	20,7	;volatile
  2442                           
  2443                           ;user.c: 69: SSPSTATbits.CKE = 1;
  2444  0350  1714               	bsf	20,6	;volatile
  2445                           
  2446                           ;user.c: 70: SSPCONbits.CKP = 0;
  2447  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0353  1214               	bcf	20,4	;volatile
  2450                           
  2451                           ;user.c: 72: SSPCONbits.SSPEN = 1;
  2452  0354  1694               	bsf	20,5	;volatile
  2453                           
  2454                           ;user.c: 77: TRISCbits.TRISC5 = 0;
  2455  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0356  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0357  1287               	bcf	7,5	;volatile
  2458                           
  2459                           ;user.c: 80: TRISAbits.TRISA4 = 1;
  2460  0358  1605               	bsf	5,4	;volatile
  2461                           
  2462                           ;user.c: 81: nRABPU = 0;
  2463  0359  1381               	bcf	1,7	;volatile
  2464                           
  2465                           ;user.c: 82: WPUAbits.WPUA4 = 1;
  2466  035A  1615               	bsf	21,4	;volatile
  2467                           
  2468                           ;user.c: 83: TRISAbits.TRISA2 = 0;
  2469  035B  1105               	bcf	5,2	;volatile
  2470                           
  2471                           ;user.c: 84: TRISCbits.TRISC0 = 0;
  2472  035C  1007               	bcf	7,0	;volatile
  2473                           
  2474                           ;user.c: 85: TRISCbits.TRISC1 = 0;
  2475  035D  1087               	bcf	7,1	;volatile
  2476                           
  2477                           ;user.c: 86: TRISCbits.TRISC2 = 0;
  2478  035E  1107               	bcf	7,2	;volatile
  2479                           
  2480                           ;user.c: 89: TRISAbits.TRISA5 = 1;
  2481  035F  1685               	bsf	5,5	;volatile
  2482                           
  2483                           ;user.c: 90: nRABPU = 0;
  2484  0360  1381               	bcf	1,7	;volatile
  2485                           
  2486                           ;user.c: 91: WPUAbits.WPUA5 = 1;
  2487  0361  1695               	bsf	21,5	;volatile
  2488                           
  2489                           ;user.c: 92: TRISBbits.TRISB4 = 0;
  2490  0362  1206               	bcf	6,4	;volatile
  2491                           
  2492                           ;user.c: 93: TRISCbits.TRISC3 = 0;
  2493  0363  1187               	bcf	7,3	;volatile
  2494                           
  2495                           ;user.c: 94: TRISCbits.TRISC4 = 0;
  2496  0364  1207               	bcf	7,4	;volatile
  2497  0365  0008               	return
  2498  0366                     __end_of_InitApp:	
  2499                           
  2500                           	psect	text12
  2501  0422                     __ptext12:	
  2502 ;; *************** function _ConfigureOscillator *****************
  2503 ;; Defined at:
  2504 ;;		line 18 in file "system.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2518 ;;      Params:         0       0       0       0
  2519 ;;      Locals:         0       0       0       0
  2520 ;;      Temps:          0       0       0       0
  2521 ;;      Totals:         0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _ConfigureOscillator
  2534  0422                     _ConfigureOscillator:	
  2535                           
  2536                           ;system.c: 21: OSCCON = 0x70;
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _ConfigureOscillator: [wreg]
  2540  0422  3070               	movlw	112
  2541  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2542  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2543  0425  008F               	movwf	15	;volatile
  2544  0426  0008               	return
  2545  0427                     __end_of_ConfigureOscillator:	
  2546                           
  2547                           	psect	text13
  2548  040F                     __ptext13:	
  2549 ;; *************** function _isr *****************
  2550 ;; Defined at:
  2551 ;;		line 23 in file "interrupts.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		None
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2565 ;;      Params:         0       0       0       0
  2566 ;;      Locals:         0       0       0       0
  2567 ;;      Temps:          4       0       0       0
  2568 ;;      Totals:         4       0       0       0
  2569 ;;Total ram usage:        4 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		Interrupt level 1
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _isr
  2580  040F                     _isr:	
  2581  040F  0873               	movf	??_isr+3,w
  2582  0410  00FF               	movwf	127
  2583  0411  0872               	movf	??_isr+2,w
  2584  0412  008A               	movwf	10
  2585  0413  0871               	movf	??_isr+1,w
  2586  0414  0084               	movwf	4
  2587  0415  0E70               	swapf	??_isr^(0+-128),w
  2588  0416  0083               	movwf	3
  2589  0417  0EFE               	swapf	126,f
  2590  0418  0E7E               	swapf	126,w
  2591  0419  0009               	retfie
  2592  041A                     __end_of_isr:	
  2593  007E                     btemp	set	126	;btemp
  2594  007E                     wtemp	set	126
  2595  007E                     wtemp0	set	126
  2596  0080                     wtemp1	set	128
  2597  0082                     wtemp2	set	130
  2598  0084                     wtemp3	set	132
  2599  0086                     wtemp4	set	134
  2600  0088                     wtemp5	set	136
  2601  007F                     wtemp6	set	127
  2602  007E                     ttemp	set	126
  2603  007E                     ttemp0	set	126
  2604  0081                     ttemp1	set	129
  2605  0084                     ttemp2	set	132
  2606  0087                     ttemp3	set	135
  2607  007F                     ttemp4	set	127
  2608  007E                     ltemp	set	126
  2609  007E                     ltemp0	set	126
  2610  0082                     ltemp1	set	130
  2611  0086                     ltemp2	set	134
  2612  0080                     ltemp3	set	128
  2613                           
  2614                           	psect	intentry
  2615  0004                     __pintentry:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _isr: []
  2618                           
  2619  0004                     interrupt_function:	
  2620  007E                     saved_w	set	btemp
  2621  0004  00FE               	movwf	btemp
  2622  0005  0E03               	swapf	3,w
  2623  0006  00F0               	movwf	??_isr
  2624  0007  0804               	movf	4,w
  2625  0008  00F1               	movwf	??_isr+1
  2626  0009  080A               	movf	10,w
  2627  000A  00F2               	movwf	??_isr+2
  2628  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2629  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2630  000D  087F               	movf	btemp+1,w
  2631  000E  00F3               	movwf	??_isr+3
  2632  000F  118A  2C0F         	ljmp	_isr


Data Sizes:
    Strings     70
    Constant    10
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     32      39
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 53
		 -> STR_2(CODE[53]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_SPI_Write
    _tuningCheck->_checkKey
    _printf->___lwmod
    ___lwmod->___lwdiv
    _get_voltage->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_voltage
    _printf->___lwmod
    ___lwmod->___lwdiv
    _get_voltage->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2329
                                             25 BANK0      7     7      0
                _ConfigureOscillator
                            _InitApp
                          _SPI_Write
                           _checkKey
                        _get_voltage
                             _printf
                        _tuningCheck
 ---------------------------------------------------------------------------------
 (1) _tuningCheck                                          0     0      0     199
                           _checkKey
 ---------------------------------------------------------------------------------
 (2) _checkKey                                             3     3      0     199
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1045
                                              8 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              9 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     0      4     596
                                             21 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     220
                                              4 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     290
                                              9 COMMON     1     1      0
                                              8 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            6     4      2     177
                                              4 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _SPI_Write
   _checkKey
   _get_voltage
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _tuningCheck
     _checkKey

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      27       3       48.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      10        0.0%
ABS                  0      0      31       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May  7 00:22:20 2015

                           pc 0002                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          l34 03EC                            l28 041B                            l37 03F4  
                          l82 019F                            l84 01BA                            l86 01F1  
                ?_get_voltage 0035                            fsr 0004                           l170 00D6  
                         l962 0132                           l972 0169                           l982 02C9  
                         l978 02B1                           l996 0205                           l998 0215  
                __CFG_CPD$OFF 0000                           u605 014C                           u705 0217  
                         u715 022C                           u725 023E                           u645 02CB  
                         u565 00F3                           u655 02D3                           u575 0103  
                         u825 03A7                           u585 0114                           u755 02F7  
                         u685 0209                           u845 03B8                           u775 0303  
                         u855 03C1                           u785 030F                           u945 0088  
                         u795 0319                           _isr 040F                           fsr0 0004  
                         indf 0000                          l1010 024A                          l1006 023D  
                        l1032 0318                          l1024 02F4                          l1026 0302  
                        l1050 03B2                          l1202 009A                          l1210 0029  
                        l1036 0323                          l1220 0174                          l1054 03C0  
                        l1222 0188                          l1048 03A4                          l1208 00A0  
                        l1232 01C3                          l1224 0195                          l1058 03CB  
                        l1170 0042                          l1192 0075                          l1176 0058  
                        l1186 006F                          l1198 0092                          ?_isr 0070  
                        STR_1 0298                          STR_2 0263                          _BRGH 04C2  
                        _CREN 00C4                          u1025 01A5                          u1047 018E  
                        u1057 0127                          u1067 015E                          _SPEN 00C7  
                        _TXEN 04C5                          _TXIF 0064                          _SYNC 04C4  
                        _main 016B                          btemp 007E                          ltemp 007E  
                        start 0011                          ttemp 007E                          wtemp 007E  
               __CFG_IESO$OFF 0000                 __CFG_MCLRE$ON 0000               __end_of_InitApp 0366  
                 _tuningCheck 03FC                         ??_isr 0070                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _ANSEL 011E               __end_of___lldiv 0253  
             __end_of___lwdiv 0328               __end_of___lwmod 03D0                         _SPBRG 0099  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TXREG 0019           _ConfigureOscillator 0422           ___lmul@multiplicand 0024  
               __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000               __end_of_dpowers 0263  
                       _putch 041A                __CFG_BOREN$OFF 0000                         pclath 000A  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F            __size_of_SPI_Write 002C  
        ?_ConfigureOscillator 0070               __initialization 0013                  __end_of_main 01F3  
                      ??_main 0039                        ?_putch 0070                        _ANSELH 011F  
                      _OSCCON 008F                        _SSPBUF 0013              __end_of_checkKey 016B  
                   ??_InitApp 0074         ??_ConfigureOscillator 0074                        _nRABPU 040F  
                      ___lmul 02A9                     ??___lldiv 0079                     ??___lwdiv 0078  
                   ??___lwmod 0079                        _printf 0022          __size_of_get_voltage 0036  
           __end_of_SPI_Write 03FC                        saved_w 007E       __end_of__initialization 001F  
              __pcstackCOMMON 0070                  __pidataBANK0 0427                 __end_of_putch 0422  
                     ??_putch 0074                    __pbssBANK0 0040                    __pmaintext 016B  
                     ?___lmul 0020                  ?_tuningCheck 0070                    __pintentry 0004  
              ___lmul@product 0075                       ?_printf 0028                     ?_checkKey 0070  
                  __stringtab 0253                       _InitApp 0328                main@real_value 003C  
              checkKey@keyVal 0076                 SPI_Write@data 0074               __size_of___lmul 0041  
                     ___lldiv 01F3                       ___lwdiv 02EA                       ___lwmod 039C  
                     __ptext1 03FC                       __ptext2 00D7                       __ptext3 0022  
                     __ptext4 041A                       __ptext5 039C                       __ptext6 02EA  
                     __ptext7 0366                       __ptext8 02A9                       __ptext9 01F3  
             __size_of_printf 00B5                       _dpowers 0259                    ??_checkKey 0074  
                __size_of_isr 000B          end_of_initialization 001F               ___lldiv@divisor 0028  
             ___lldiv@counter 0034                       printf@c 0037                       printf@f 0034  
              _in_tuning_mode 0044                     _PORTAbits 0005                     _PORTBbits 0006  
                   _PORTCbits 0007                     _TRISAbits 0085                     _TRISBbits 0086  
                   _TRISCbits 0087                     _SPI_Write 03D0   __end_of_ConfigureOscillator 0427  
               ??_get_voltage 007A                __end_of___lmul 02EA          __size_of_tuningCheck 0013  
                 _BAUDCTLbits 009B                __end_of_printf 00D7           start_initialization 0013  
                 __end_of_isr 041A                    ?_SPI_Write 0074               SPI_Write@config 0078  
                    ??___lmul 0074                   __pdataBANK0 0045                      ??_printf 002E  
         __end_of_get_voltage 039C                     ___latbits 0001                 __pcstackBANK0 0020  
           __size_of_checkKey 0094                      ?_InitApp 0070              ___lwdiv@dividend 0076  
                    ?___lldiv 0028                      ?___lwdiv 0074                      ?___lwmod 0023  
                   __pstrings 0253                   ??_SPI_Write 0076                     _key_count 0045  
            ___lwdiv@quotient 0020                __size_of_putch 0008             interrupt_function 0004  
                 _get_voltage 0366                   __stringbase 0258                    printf@flag 0032  
                    _WPUAbits 0095                    printf@prec 0033               main@current_key 003E  
           ___lmul@multiplier 0020              __size_of_InitApp 003E              __size_of___lldiv 0060  
            __size_of___lwdiv 003E              __size_of___lwmod 0034            __end_of__stringtab 0259  
                    _checkKey 00D7               ___lwdiv@divisor 0074               ___lwdiv@counter 0022  
                    __ptext10 03D0                      __ptext11 0328                      __ptext12 0422  
                    __ptext13 040F            get_voltage@keyCode 0035                      _last_key 0040  
               __size_of_main 0088  __size_of_ConfigureOscillator 0005                 ??_tuningCheck 0077  
                   printf@val 0035                     putch@data 0074                      intlevel1 0000  
            ___lwmod@dividend 0025              ___lldiv@dividend 002C                     stringcode 0253  
                    printf@ap 0031                  _pressed_keys 0042           __end_of_tuningCheck 040F  
            ___lldiv@quotient 0030               ___lwmod@divisor 0023               ___lwmod@counter 0027  
                    stringdir 0253                      stringtab 0253             __CFG_FOSC$INTRCIO 0000  
                  _SSPCONbits 0014  
