

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri May  8 02:04:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  008C                     	;# 
    48  008E                     	;# 
    49  008F                     	;# 
    50  0090                     	;# 
    51  0092                     	;# 
    52  0095                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0096                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0096                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0092                     	;# 
   138  0095                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0096                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  008C                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0092                     	;# 
   181  0095                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0096                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000E                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  008C                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0092                     	;# 
   224  0095                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0096                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236                           
   237                           	psect	strings
   238  0159                     __pstrings:	
   239  0159                     stringtab:	
   240  0159                     __stringtab:	
   241  0159                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  0159                     stringdir:	
   245  0159  3001               	movlw	high stringdir
   246  015A  008A               	movwf	10
   247  015B  0804               	movf	4,w
   248  015C  0A84               	incf	4,f
   249  015D  0782               	addwf	2,f
   250  015E                     __stringbase:	
   251  015E  3400               	retlw	0
   252  015F                     __end_of__stringtab:	
   253  015F                     _dpowers:	
   254  015F  3401               	retlw	1
   255  0160  3400               	retlw	0
   256  0161  340A               	retlw	10
   257  0162  3400               	retlw	0
   258  0163  3464               	retlw	100
   259  0164  3400               	retlw	0
   260  0165  34E8               	retlw	232
   261  0166  3403               	retlw	3
   262  0167  3410               	retlw	16
   263  0168  3427               	retlw	39
   264  0169                     __end_of_dpowers:	
   265  001F                     _ADCON0bits	set	31
   266  001E                     _ADRESH	set	30
   267  0005                     _GPIO	set	5
   268  0005                     _GPIObits	set	5
   269  009E                     _ADRESL	set	158
   270  009F                     _ANSELbits	set	159
   271  0085                     _TRISIObits	set	133
   272  0169                     STR_1:	
   273  0169  3454               	retlw	84	;'T'
   274  016A  3468               	retlw	104	;'h'
   275  016B  3469               	retlw	105	;'i'
   276  016C  3473               	retlw	115	;'s'
   277  016D  3420               	retlw	32	;' '
   278  016E  3469               	retlw	105	;'i'
   279  016F  3473               	retlw	115	;'s'
   280  0170  3420               	retlw	32	;' '
   281  0171  3461               	retlw	97	;'a'
   282  0172  3420               	retlw	32	;' '
   283  0173  3474               	retlw	116	;'t'
   284  0174  3465               	retlw	101	;'e'
   285  0175  3473               	retlw	115	;'s'
   286  0176  3474               	retlw	116	;'t'
   287  0177  340A               	retlw	10
   288  0178  340D               	retlw	13
   289  0179  3400               	retlw	0
   290  017A                     STR_2:	
   291  017A  3420               	retlw	32	;' '
   292  017B  346B               	retlw	107	;'k'
   293  017C  346E               	retlw	110	;'n'
   294  017D  346F               	retlw	111	;'o'
   295  017E  3462               	retlw	98	;'b'
   296  017F  343A               	retlw	58	;':'
   297  0180  3420               	retlw	32	;' '
   298  0181  3425               	retlw	37	;'%'
   299  0182  3469               	retlw	105	;'i'
   300  0183  340A               	retlw	10
   301  0184  340D               	retlw	13
   302  0185  3400               	retlw	0
   303                           
   304                           ; #config settings
   305  0000                     
   306                           	psect	cinit
   307  0010                     start_initialization:	
   308  0010                     __initialization:	
   309                           
   310                           ; Clear objects allocated to COMMON
   311  0010  01F9               	clrf	__pbssCOMMON& (0+127)
   312  0011                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  0011                     __end_of__initialization:	
   316  0011  0183               	clrf	3
   317  0012  28AB               	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320  0079                     __pbssCOMMON:	
   321  0079                     _sGPIO:	
   322  0079                     	ds	1
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:	
   326  0070                     ?_ConfigureOscillator:	
   327  0070                     ?_InitApp:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_isr:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ??_isr:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_DelayTXBitUART:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_putch:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 0 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	4
   348  0074                     ??_ConfigureOscillator:	
   349  0074                     ??_InitApp:	
   350                           ; 0 bytes @ 0x4
   351                           
   352  0074                     ??_DelayTXBitUART:	
   353                           ; 0 bytes @ 0x4
   354                           
   355  0074                     ?_analogRead:	
   356                           ; 0 bytes @ 0x4
   357                           
   358  0074                     ?___lwdiv:	
   359                           ; 2 bytes @ 0x4
   360                           
   361  0074                     ___lwdiv@divisor:	
   362                           ; 2 bytes @ 0x4
   363                           
   364                           
   365                           ; 2 bytes @ 0x4
   366  0074                     	ds	1
   367  0075                     ??_putch:	
   368                           
   369                           ; 0 bytes @ 0x5
   370  0075                     	ds	1
   371  0076                     ??_analogRead:	
   372  0076                     putch@c:	
   373                           ; 0 bytes @ 0x6
   374                           
   375  0076                     ___lwdiv@dividend:	
   376                           ; 1 bytes @ 0x6
   377                           
   378                           
   379                           ; 2 bytes @ 0x6
   380  0076                     	ds	1
   381  0077                     putch@bitcount:	
   382                           
   383                           ; 1 bytes @ 0x7
   384  0077                     	ds	1
   385  0078                     ??___lwdiv:	
   386                           
   387                           ; 0 bytes @ 0x8
   388  0078                     	ds	1
   389                           
   390                           	psect	cstackBANK0
   391  0020                     __pcstackBANK0:	
   392  0020                     ___lwdiv@quotient:	
   393                           
   394                           ; 2 bytes @ 0x0
   395  0020                     	ds	2
   396  0022                     ___lwdiv@counter:	
   397                           
   398                           ; 1 bytes @ 0x2
   399  0022                     	ds	1
   400  0023                     ?___lwmod:	
   401  0023                     ___lwmod@divisor:	
   402                           ; 2 bytes @ 0x3
   403                           
   404                           
   405                           ; 2 bytes @ 0x3
   406  0023                     	ds	2
   407  0025                     ___lwmod@dividend:	
   408                           
   409                           ; 2 bytes @ 0x5
   410  0025                     	ds	2
   411  0027                     ??___lwmod:	
   412                           
   413                           ; 0 bytes @ 0x7
   414  0027                     	ds	1
   415  0028                     ___lwmod@counter:	
   416                           
   417                           ; 1 bytes @ 0x8
   418  0028                     	ds	1
   419  0029                     ?_printf:	
   420                           
   421                           ; 2 bytes @ 0x9
   422  0029                     	ds	2
   423  002B                     ??_printf:	
   424                           
   425                           ; 0 bytes @ 0xB
   426  002B                     	ds	3
   427  002E                     printf@ap:	
   428                           
   429                           ; 1 bytes @ 0xE
   430  002E                     	ds	1
   431  002F                     printf@flag:	
   432                           
   433                           ; 1 bytes @ 0xF
   434  002F                     	ds	1
   435  0030                     printf@prec:	
   436                           
   437                           ; 1 bytes @ 0x10
   438  0030                     	ds	1
   439  0031                     printf@f:	
   440                           
   441                           ; 1 bytes @ 0x11
   442  0031                     	ds	1
   443  0032                     printf@val:	
   444                           
   445                           ; 2 bytes @ 0x12
   446  0032                     	ds	2
   447  0034                     printf@c:	
   448                           
   449                           ; 1 bytes @ 0x14
   450  0034                     	ds	1
   451  0035                     ??_main:	
   452                           
   453                           ; 0 bytes @ 0x15
   454  0035                     	ds	3
   455  0038                     main@knob:	
   456                           
   457                           ; 2 bytes @ 0x18
   458  0038                     	ds	2
   459                           
   460                           	psect	maintext
   461  00AB                     __pmaintext:	
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 117 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  knob            2   24[BANK0 ] unsigned int 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      unsigned char 
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : B00/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1
   481 ;;      Params:         0       0       0
   482 ;;      Locals:         0       2       0
   483 ;;      Temps:          0       3       0
   484 ;;      Totals:         0       5       0
   485 ;;Total ram usage:        5 bytes
   486 ;; Hardware stack levels required when called:    4
   487 ;; This function calls:
   488 ;;		_ConfigureOscillator
   489 ;;		_InitApp
   490 ;;		_analogRead
   491 ;;		_printf
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _main
   499  00AB                     _main:	
   500                           
   501                           ;main.c: 120: ConfigureOscillator();
   502                           
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   505  00AB  21DE               	fcall	_ConfigureOscillator
   506                           
   507                           ;main.c: 123: InitApp();
   508  00AC  21AB               	fcall	_InitApp
   509  00AD                     l966:	
   510                           ;main.c: 129: while(1)
   511                           
   512                           
   513                           ;main.c: 130: {
   514                           ;main.c: 143: printf("This is a test\n\r");
   515  00AD  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   516  00AE  2013               	fcall	_printf
   517                           
   518                           ;main.c: 146: sGPIO.GP2 = 1;
   519  00AF  1579               	bsf	_sGPIO,2
   520                           
   521                           ;main.c: 147: GPIO = sGPIO.port;
   522  00B0  0879               	movf	_sGPIO,w
   523  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   524  00B2  0085               	movwf	5	;volatile
   525                           
   526                           ;main.c: 149: _delay((unsigned long)((500)*(4000000/4000.0)));
   527  00B3  3003               	movlw	3
   528  00B4  00B7               	movwf	??_main+2
   529  00B5  308A               	movlw	138
   530  00B6  00B6               	movwf	??_main+1
   531  00B7  3056               	movlw	86
   532  00B8  00B5               	movwf	??_main
   533  00B9                     u677:	
   534  00B9  0BB5               	decfsz	??_main,f
   535  00BA  28B9               	goto	u677
   536  00BB  0BB6               	decfsz	??_main+1,f
   537  00BC  28B9               	goto	u677
   538  00BD  0BB7               	decfsz	??_main+2,f
   539  00BE  28B9               	goto	u677
   540  00BF  28C0               	nop2
   541                           
   542                           ;main.c: 150: sGPIO.GP2 = 0;
   543  00C0  1179               	bcf	_sGPIO,2
   544                           
   545                           ;main.c: 151: GPIO = sGPIO.port;
   546  00C1  0879               	movf	_sGPIO,w
   547  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   548  00C3  0085               	movwf	5	;volatile
   549                           
   550                           ;main.c: 153: _delay((unsigned long)((500)*(4000000/4000.0)));
   551  00C4  3003               	movlw	3
   552  00C5  00B7               	movwf	??_main+2
   553  00C6  308A               	movlw	138
   554  00C7  00B6               	movwf	??_main+1
   555  00C8  3056               	movlw	86
   556  00C9  00B5               	movwf	??_main
   557  00CA                     u687:	
   558  00CA  0BB5               	decfsz	??_main,f
   559  00CB  28CA               	goto	u687
   560  00CC  0BB6               	decfsz	??_main+1,f
   561  00CD  28CA               	goto	u687
   562  00CE  0BB7               	decfsz	??_main+2,f
   563  00CF  28CA               	goto	u687
   564  00D0  28D1               	nop2
   565                           
   566                           ;main.c: 157: if (GPIObits.GP3 == 0) {
   567  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   568  00D2  1985               	btfsc	5,3	;volatile
   569  00D3  28D7               	goto	l986
   570                           
   571                           ;main.c: 160: sGPIO.GP0 = 0;
   572  00D4  1079               	bcf	_sGPIO,0
   573                           
   574                           ;main.c: 161: GPIO = sGPIO.port;
   575  00D5  0879               	movf	_sGPIO,w
   576  00D6  0085               	movwf	5	;volatile
   577  00D7                     l986:	
   578                           
   579                           ;main.c: 162: }
   580                           ;main.c: 163: if (GPIObits.GP3 == 1) {
   581  00D7  1D85               	btfss	5,3	;volatile
   582  00D8  28DC               	goto	l992
   583                           
   584                           ;main.c: 164: sGPIO.GP0 = 1;
   585  00D9  1479               	bsf	_sGPIO,0
   586                           
   587                           ;main.c: 165: GPIO = sGPIO.port;
   588  00DA  0879               	movf	_sGPIO,w
   589  00DB  0085               	movwf	5	;volatile
   590  00DC                     l992:	
   591                           
   592                           ;main.c: 166: }
   593                           ;main.c: 168: uint16_t knob = analogRead();
   594  00DC  21BD               	fcall	_analogRead
   595  00DD  0875               	movf	?_analogRead+1,w
   596  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   597  00DF  00B9               	movwf	main@knob+1
   598  00E0  0874               	movf	?_analogRead,w
   599  00E1  00B8               	movwf	main@knob
   600                           
   601                           ;main.c: 169: printf(" knob: %i\n\r", knob);
   602  00E2  0839               	movf	main@knob+1,w
   603  00E3  00AA               	movwf	?_printf+1
   604  00E4  0838               	movf	main@knob,w
   605  00E5  00A9               	movwf	?_printf
   606  00E6  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   607  00E7  2013               	fcall	_printf
   608  00E8  28AD               	goto	l966
   609  00E9                     __end_of_main:	
   610                           ;main.c: 171: }
   611                           ;main.c: 172: return 0;
   612                           ;	Return value of _main is never used
   613                           
   614                           
   615                           	psect	text1
   616  0013                     __ptext1:	
   617 ;; *************** function _printf *****************
   618 ;; Defined at:
   619 ;;		line 464 in file "/Applications/microchip/xc8/v1.34/sources/common/doprnt.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  f               1    wreg     PTR const unsigned char 
   622 ;;		 -> STR_2(12), STR_1(17), 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  f               1   17[BANK0 ] PTR const unsigned char 
   625 ;;		 -> STR_2(12), STR_1(17), 
   626 ;;  tmpval          4    0        struct .
   627 ;;  val             2   18[BANK0 ] unsigned int 
   628 ;;  cp              2    0        PTR const unsigned char 
   629 ;;  len             2    0        unsigned int 
   630 ;;  c               1   20[BANK0 ] char 
   631 ;;  prec            1   16[BANK0 ] char 
   632 ;;  flag            1   15[BANK0 ] unsigned char 
   633 ;;  ap              1   14[BANK0 ] PTR void [1]
   634 ;;		 -> ?_printf(2), 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  2    9[BANK0 ] int 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1
   644 ;;      Params:         0       2       0
   645 ;;      Locals:         0       7       0
   646 ;;      Temps:          0       3       0
   647 ;;      Totals:         0      12       0
   648 ;;Total ram usage:       12 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    3
   651 ;; This function calls:
   652 ;;		___lwdiv
   653 ;;		___lwmod
   654 ;;		_putch
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _printf
   662  0013                     _printf:	
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   666                           ;printf@f stored from wreg
   667  0013  1283               	bcf	3,5	;RP0=0, select bank0
   668  0014  00B1               	movwf	printf@f
   669                           
   670                           ;doprnt.c: 466: va_list ap;
   671                           ;doprnt.c: 499: signed char c;
   672                           ;doprnt.c: 506: signed char prec;
   673                           ;doprnt.c: 508: unsigned char flag;
   674                           ;doprnt.c: 523: union {
   675                           ;doprnt.c: 524: unsigned long vd;
   676                           ;doprnt.c: 525: double integ;
   677                           ;doprnt.c: 526: } tmpval;
   678                           ;doprnt.c: 528: unsigned int val;
   679                           ;doprnt.c: 529: unsigned len;
   680                           ;doprnt.c: 530: const char * cp;
   681                           ;doprnt.c: 533: *ap = __va_start();
   682  0015  3029               	movlw	(low (?_printf| 0))& (0+255)
   683  0016  00AB               	movwf	??_printf
   684  0017  082B               	movf	??_printf,w
   685  0018  00AE               	movwf	printf@ap
   686  0019                     l960:	
   687                           ;doprnt.c: 536: while(c = *f++) {
   688                           
   689  0019  3001               	movlw	1
   690  001A  1283               	bcf	3,5	;RP0=0, select bank0
   691  001B  07B1               	addwf	printf@f,f
   692  001C  30FF               	movlw	-1
   693  001D  0731               	addwf	printf@f,w
   694  001E  0084               	movwf	4
   695  001F  2159               	fcall	stringdir
   696  0020  00AB               	movwf	??_printf
   697  0021  082B               	movf	??_printf,w
   698  0022  00B4               	movwf	printf@c
   699  0023  0834               	movf	printf@c,w
   700  0024  1903               	btfsc	3,2
   701  0025  0008               	return
   702                           
   703                           ;doprnt.c: 538: if(c != '%')
   704  0026  3025               	movlw	37
   705  0027  0634               	xorwf	printf@c,w
   706  0028  1903               	btfsc	3,2
   707  0029  282D               	goto	l920
   708                           
   709                           ;doprnt.c: 540: {
   710                           ;doprnt.c: 541: (putch(c) );
   711  002A  0834               	movf	printf@c,w
   712  002B  2186               	fcall	_putch
   713                           
   714                           ;doprnt.c: 542: continue;
   715  002C  2819               	goto	l960
   716  002D                     l920:	
   717                           
   718                           ;doprnt.c: 543: }
   719                           ;doprnt.c: 548: flag = 0;
   720  002D  1283               	bcf	3,5	;RP0=0, select bank0
   721  002E  01AF               	clrf	printf@flag
   722                           
   723                           ;doprnt.c: 822: }
   724                           
   725                           ;doprnt.c: 813: continue;
   726                           
   727                           ;doprnt.c: 802: default:
   728                           
   729                           ;doprnt.c: 698: case 'i':
   730                           ;doprnt.c: 699: break;
   731                           
   732                           ;doprnt.c: 697: case 'd':
   733                           
   734                           ;doprnt.c: 638: goto alldone;
   735                           
   736                           ;doprnt.c: 637: case 0:
   737                           
   738                           ;doprnt.c: 635: switch(c = *f++) {
   739  002F  3001               	movlw	1
   740  0030  07B1               	addwf	printf@f,f
   741  0031  30FF               	movlw	-1
   742  0032  0731               	addwf	printf@f,w
   743  0033  0084               	movwf	4
   744  0034  2159               	fcall	stringdir
   745  0035  00B4               	movwf	printf@c
   746                           
   747                           ; Switch size 1, requested type "space"
   748                           ; Number of cases is 3, Range of values is 0 to 105
   749                           ; switch strategies available:
   750                           ; Name         Instructions Cycles
   751                           ; simple_byte           10     6 (average)
   752                           ; direct_byte          112     6 (fixed)
   753                           ; jumptable            260     6 (fixed)
   754                           ;	Chosen strategy is simple_byte
   755  0036  3A00               	xorlw	0	; case 0
   756  0037  1903               	skipnz
   757  0038  28AA               	goto	l88
   758  0039  3A64               	xorlw	100	; case 100
   759  003A  1903               	skipnz
   760  003B  2840               	goto	l926
   761  003C  3A0D               	xorlw	13	; case 105
   762  003D  1903               	skipnz
   763  003E  2840               	goto	l926
   764  003F  2819               	goto	l960
   765  0040                     l926:	
   766                           
   767                           ;doprnt.c: 1253: {
   768                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   769  0040  082E               	movf	printf@ap,w
   770  0041  0084               	movwf	4
   771  0042  1383               	bcf	3,7	;select IRP bank0
   772  0043  0800               	movf	0,w
   773  0044  00B2               	movwf	printf@val
   774  0045  0A84               	incf	4,f
   775  0046  0800               	movf	0,w
   776  0047  00B3               	movwf	printf@val+1
   777  0048  3002               	movlw	2
   778  0049  00AB               	movwf	??_printf
   779  004A  082B               	movf	??_printf,w
   780  004B  07AE               	addwf	printf@ap,f
   781                           
   782                           ;doprnt.c: 1261: if((int)val < 0) {
   783  004C  1FB3               	btfss	printf@val+1,7
   784  004D  2857               	goto	l936
   785                           
   786                           ;doprnt.c: 1262: flag |= 0x03;
   787  004E  3003               	movlw	3
   788  004F  00AB               	movwf	??_printf
   789  0050  082B               	movf	??_printf,w
   790  0051  04AF               	iorwf	printf@flag,f
   791                           
   792                           ;doprnt.c: 1263: val = -val;
   793  0052  09B2               	comf	printf@val,f
   794  0053  09B3               	comf	printf@val+1,f
   795  0054  0AB2               	incf	printf@val,f
   796  0055  1903               	skipnz
   797  0056  0AB3               	incf	printf@val+1,f
   798  0057                     l936:	
   799                           
   800                           ;doprnt.c: 1264: }
   801                           ;doprnt.c: 1266: }
   802                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   803  0057  01B4               	clrf	printf@c
   804  0058  0AB4               	incf	printf@c,f
   805  0059  3005               	movlw	5
   806  005A  0634               	xorwf	printf@c,w
   807  005B  1903               	btfsc	3,2
   808  005C  2876               	goto	l948
   809  005D                     l942:	
   810                           
   811                           ;doprnt.c: 1306: if(val < dpowers[c])
   812  005D  0834               	movf	printf@c,w
   813  005E  00AB               	movwf	??_printf
   814  005F  072B               	addwf	??_printf,w
   815  0060  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   816  0061  0084               	movwf	4
   817  0062  2159               	fcall	stringdir
   818  0063  00AC               	movwf	??_printf+1
   819  0064  2159               	fcall	stringdir
   820  0065  00AD               	movwf	??_printf+2
   821  0066  082D               	movf	??_printf+2,w
   822  0067  0233               	subwf	printf@val+1,w
   823  0068  1D03               	skipz
   824  0069  286C               	goto	u605
   825  006A  082C               	movf	??_printf+1,w
   826  006B  0232               	subwf	printf@val,w
   827  006C                     u605:	
   828  006C  1C03               	btfss	3,0
   829  006D  2876               	goto	l948
   830                           
   831                           ;doprnt.c: 1307: break;
   832  006E  3001               	movlw	1
   833  006F  00AB               	movwf	??_printf
   834  0070  082B               	movf	??_printf,w
   835  0071  07B4               	addwf	printf@c,f
   836  0072  3005               	movlw	5
   837  0073  0634               	xorwf	printf@c,w
   838  0074  1D03               	btfss	3,2
   839  0075  285D               	goto	l942
   840  0076                     l948:	
   841                           
   842                           ;doprnt.c: 1422: {
   843                           ;doprnt.c: 1438: if(flag & 0x03)
   844  0076  082F               	movf	printf@flag,w
   845  0077  3903               	andlw	3
   846  0078  1903               	btfsc	3,2
   847  0079  287C               	goto	l952
   848                           
   849                           ;doprnt.c: 1439: (putch('-') );
   850  007A  302D               	movlw	45
   851  007B  2186               	fcall	_putch
   852  007C                     l952:	
   853                           
   854                           ;doprnt.c: 1469: }
   855                           ;doprnt.c: 1472: prec = c;
   856  007C  1283               	bcf	3,5	;RP0=0, select bank0
   857  007D  0834               	movf	printf@c,w
   858  007E  00AB               	movwf	??_printf
   859  007F  082B               	movf	??_printf,w
   860  0080  00B0               	movwf	printf@prec
   861  0081                     l958:	
   862                           ;doprnt.c: 1474: while(prec--) {
   863                           
   864  0081  30FF               	movlw	255
   865  0082  1283               	bcf	3,5	;RP0=0, select bank0
   866  0083  00AB               	movwf	??_printf
   867  0084  082B               	movf	??_printf,w
   868  0085  07B0               	addwf	printf@prec,f
   869  0086  0A30               	incf	printf@prec,w
   870  0087  1903               	btfsc	3,2
   871  0088  2819               	goto	l960
   872                           
   873                           ;doprnt.c: 1478: {
   874                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   875  0089  300A               	movlw	10
   876  008A  00A3               	movwf	___lwmod@divisor
   877  008B  3000               	movlw	0
   878  008C  00A4               	movwf	___lwmod@divisor+1
   879  008D  0830               	movf	printf@prec,w
   880  008E  00AB               	movwf	??_printf
   881  008F  072B               	addwf	??_printf,w
   882  0090  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   883  0091  0084               	movwf	4
   884  0092  2159               	fcall	stringdir
   885  0093  00F4               	movwf	___lwdiv@divisor
   886  0094  2159               	fcall	stringdir
   887  0095  00F5               	movwf	___lwdiv@divisor+1
   888  0096  0833               	movf	printf@val+1,w
   889  0097  00F7               	movwf	___lwdiv@dividend+1
   890  0098  0832               	movf	printf@val,w
   891  0099  00F6               	movwf	___lwdiv@dividend
   892  009A  20E9               	fcall	___lwdiv
   893  009B  0875               	movf	?___lwdiv+1,w
   894  009C  1283               	bcf	3,5	;RP0=0, select bank0
   895  009D  00A6               	movwf	___lwmod@dividend+1
   896  009E  0874               	movf	?___lwdiv,w
   897  009F  00A5               	movwf	___lwmod@dividend
   898  00A0  2126               	fcall	___lwmod
   899  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   900  00A2  0823               	movf	?___lwmod,w
   901  00A3  3E30               	addlw	48
   902  00A4  00AC               	movwf	??_printf+1
   903  00A5  082C               	movf	??_printf+1,w
   904  00A6  00B4               	movwf	printf@c
   905                           
   906                           ;doprnt.c: 1523: }
   907                           ;doprnt.c: 1524: (putch(c) );
   908  00A7  0834               	movf	printf@c,w
   909  00A8  2186               	fcall	_putch
   910  00A9  2881               	goto	l958
   911  00AA                     l88:	
   912                           ;doprnt.c: 1540: return 0;
   913                           ;	Return value of _printf is never used
   914                           
   915                           ;doprnt.c: 1525: }
   916                           ;doprnt.c: 1533: }
   917                           ;doprnt.c: 1535: alldone:
   918                           
   919  00AA  0008               	return
   920  00AB                     __end_of_printf:	
   921                           
   922                           	psect	text2
   923  0186                     __ptext2:	
   924 ;; *************** function _putch *****************
   925 ;; Defined at:
   926 ;;		line 83 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  c               1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  c               1    6[COMMON] unsigned char 
   931 ;;  bitcount        1    7[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1
   941 ;;      Params:         0       0       0
   942 ;;      Locals:         2       0       0
   943 ;;      Temps:          1       0       0
   944 ;;      Totals:         3       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    2
   948 ;; This function calls:
   949 ;;		_DelayTXBitUART
   950 ;; This function is called by:
   951 ;;		_printf
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _putch
   957  0186                     _putch:	
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
   961                           ;putch@c stored from wreg
   962  0186  00F6               	movwf	putch@c
   963                           
   964                           ;main.c: 85: unsigned char bitcount = 8;
   965  0187  3008               	movlw	8
   966  0188  00F5               	movwf	??_putch
   967  0189  0875               	movf	??_putch,w
   968  018A  00F7               	movwf	putch@bitcount
   969                           
   970                           ;main.c: 88: sGPIO.GP1 = 0;
   971  018B  10F9               	bcf	_sGPIO,1
   972                           
   973                           ;main.c: 89: GPIO = sGPIO.port;
   974  018C  0879               	movf	_sGPIO,w
   975  018D  1283               	bcf	3,5	;RP0=0, select bank0
   976  018E  0085               	movwf	5	;volatile
   977                           
   978                           ;main.c: 90: DelayTXBitUART();
   979  018F  21D8               	fcall	_DelayTXBitUART
   980  0190                     l738:	
   981                           ;main.c: 92: while (bitcount--) {
   982                           
   983  0190  3001               	movlw	1
   984  0191  02F7               	subwf	putch@bitcount,f
   985  0192  0A77               	incf	putch@bitcount,w
   986  0193  1903               	btfsc	3,2
   987  0194  29A5               	goto	l31
   988                           
   989                           ;main.c: 93: sGPIO.GP1 = (c & 0x01);
   990  0195  0876               	movf	putch@c,w
   991  0196  3901               	andlw	1
   992  0197  00F5               	movwf	??_putch
   993  0198  0DF5               	rlf	??_putch,f
   994  0199  0879               	movf	_sGPIO,w
   995  019A  0675               	xorwf	??_putch,w
   996  019B  39FD               	andlw	-3
   997  019C  0675               	xorwf	??_putch,w
   998  019D  00F9               	movwf	_sGPIO
   999                           
  1000                           ;main.c: 94: GPIO = sGPIO.port;
  1001  019E  0879               	movf	_sGPIO,w
  1002  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1003  01A0  0085               	movwf	5	;volatile
  1004                           
  1005                           ;main.c: 95: DelayTXBitUART();
  1006  01A1  21D8               	fcall	_DelayTXBitUART
  1007                           
  1008                           ;main.c: 96: c>>=1;
  1009  01A2  1003               	clrc
  1010  01A3  0CF6               	rrf	putch@c,f
  1011  01A4  2990               	goto	l738
  1012  01A5                     l31:	
  1013                           
  1014                           ;main.c: 97: }
  1015                           ;main.c: 99: sGPIO.GP1 = 1;
  1016  01A5  14F9               	bsf	_sGPIO,1
  1017                           
  1018                           ;main.c: 100: GPIO = sGPIO.port;
  1019  01A6  0879               	movf	_sGPIO,w
  1020  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1021  01A8  0085               	movwf	5	;volatile
  1022                           
  1023                           ;main.c: 101: DelayTXBitUART();
  1024  01A9  21D8               	fcall	_DelayTXBitUART
  1025  01AA  0008               	return
  1026  01AB                     __end_of_putch:	
  1027                           
  1028                           	psect	text3
  1029  01D8                     __ptext3:	
  1030 ;; *************** function _DelayTXBitUART *****************
  1031 ;; Defined at:
  1032 ;;		line 50 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          1       0       0
  1049 ;;      Totals:         1       0       0
  1050 ;;Total ram usage:        1 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_putch
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _DelayTXBitUART
  1062  01D8                     _DelayTXBitUART:	
  1063                           
  1064                           ;main.c: 58: _delay(77);
  1065                           
  1066                           ;incstack = 0
  1067                           ; Regs used in _DelayTXBitUART: [wreg]
  1068  01D8  3019               	movlw	25
  1069  01D9  00F4               	movwf	??_DelayTXBitUART
  1070  01DA                     u697:	
  1071  01DA  0BF4               	decfsz	??_DelayTXBitUART,f
  1072  01DB  29DA               	goto	u697
  1073  01DC  0000               	nop
  1074  01DD  0008               	return
  1075  01DE                     __end_of_DelayTXBitUART:	
  1076                           
  1077                           	psect	text4
  1078  0126                     __ptext4:	
  1079 ;; *************** function ___lwmod *****************
  1080 ;; Defined at:
  1081 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwmod.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  divisor         2    3[BANK0 ] unsigned int 
  1084 ;;  dividend        2    5[BANK0 ] unsigned int 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  counter         1    8[BANK0 ] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    3[BANK0 ] unsigned int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1
  1096 ;;      Params:         0       4       0
  1097 ;;      Locals:         0       1       0
  1098 ;;      Temps:          0       1       0
  1099 ;;      Totals:         0       6       0
  1100 ;;Total ram usage:        6 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_printf
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function ___lwmod
  1112  0126                     ___lwmod:	
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1116  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0127  0823               	movf	___lwmod@divisor,w
  1118  0128  0424               	iorwf	___lwmod@divisor+1,w
  1119  0129  1903               	btfsc	3,2
  1120  012A  2954               	goto	l910
  1121  012B  01A8               	clrf	___lwmod@counter
  1122  012C  0AA8               	incf	___lwmod@counter,f
  1123  012D                     l900:	
  1124  012D  1BA4               	btfsc	___lwmod@divisor+1,7
  1125  012E  293B               	goto	l902
  1126  012F  3001               	movlw	1
  1127  0130                     u525:	
  1128  0130  1003               	clrc
  1129  0131  0DA3               	rlf	___lwmod@divisor,f
  1130  0132  0DA4               	rlf	___lwmod@divisor+1,f
  1131  0133  3EFF               	addlw	-1
  1132  0134  1D03               	skipz
  1133  0135  2930               	goto	u525
  1134  0136  3001               	movlw	1
  1135  0137  00A7               	movwf	??___lwmod
  1136  0138  0827               	movf	??___lwmod,w
  1137  0139  07A8               	addwf	___lwmod@counter,f
  1138  013A  292D               	goto	l900
  1139  013B                     l902:	
  1140  013B  0824               	movf	___lwmod@divisor+1,w
  1141  013C  0226               	subwf	___lwmod@dividend+1,w
  1142  013D  1D03               	skipz
  1143  013E  2941               	goto	u545
  1144  013F  0823               	movf	___lwmod@divisor,w
  1145  0140  0225               	subwf	___lwmod@dividend,w
  1146  0141                     u545:	
  1147  0141  1C03               	skipc
  1148  0142  2949               	goto	l906
  1149  0143  0823               	movf	___lwmod@divisor,w
  1150  0144  02A5               	subwf	___lwmod@dividend,f
  1151  0145  0824               	movf	___lwmod@divisor+1,w
  1152  0146  1C03               	skipc
  1153  0147  03A6               	decf	___lwmod@dividend+1,f
  1154  0148  02A6               	subwf	___lwmod@dividend+1,f
  1155  0149                     l906:	
  1156  0149  3001               	movlw	1
  1157  014A                     u555:	
  1158  014A  1003               	clrc
  1159  014B  0CA4               	rrf	___lwmod@divisor+1,f
  1160  014C  0CA3               	rrf	___lwmod@divisor,f
  1161  014D  3EFF               	addlw	-1
  1162  014E  1D03               	skipz
  1163  014F  294A               	goto	u555
  1164  0150  3001               	movlw	1
  1165  0151  02A8               	subwf	___lwmod@counter,f
  1166  0152  1D03               	btfss	3,2
  1167  0153  293B               	goto	l902
  1168  0154                     l910:	
  1169  0154  0826               	movf	___lwmod@dividend+1,w
  1170  0155  00A4               	movwf	?___lwmod+1
  1171  0156  0825               	movf	___lwmod@dividend,w
  1172  0157  00A3               	movwf	?___lwmod
  1173  0158  0008               	return
  1174  0159                     __end_of___lwmod:	
  1175                           
  1176                           	psect	text5
  1177  00E9                     __ptext5:	
  1178 ;; *************** function ___lwdiv *****************
  1179 ;; Defined at:
  1180 ;;		line 6 in file "/Applications/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  divisor         2    4[COMMON] unsigned int 
  1183 ;;  dividend        2    6[COMMON] unsigned int 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  quotient        2    0[BANK0 ] unsigned int 
  1186 ;;  counter         1    2[BANK0 ] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    4[COMMON] unsigned int 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1
  1196 ;;      Params:         4       0       0
  1197 ;;      Locals:         0       3       0
  1198 ;;      Temps:          1       0       0
  1199 ;;      Totals:         5       3       0
  1200 ;;Total ram usage:        8 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_printf
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function ___lwdiv
  1212  00E9                     ___lwdiv:	
  1213                           
  1214                           ;incstack = 0
  1215                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1216  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00EA  01A0               	clrf	___lwdiv@quotient
  1218  00EB  01A1               	clrf	___lwdiv@quotient+1
  1219  00EC  0874               	movf	___lwdiv@divisor,w
  1220  00ED  0475               	iorwf	___lwdiv@divisor+1,w
  1221  00EE  1903               	btfsc	3,2
  1222  00EF  2921               	goto	l766
  1223  00F0  01A2               	clrf	___lwdiv@counter
  1224  00F1  0AA2               	incf	___lwdiv@counter,f
  1225  00F2                     l754:	
  1226  00F2  1BF5               	btfsc	___lwdiv@divisor+1,7
  1227  00F3  2900               	goto	l756
  1228  00F4  3001               	movlw	1
  1229  00F5                     u285:	
  1230  00F5  1003               	clrc
  1231  00F6  0DF4               	rlf	___lwdiv@divisor,f
  1232  00F7  0DF5               	rlf	___lwdiv@divisor+1,f
  1233  00F8  3EFF               	addlw	-1
  1234  00F9  1D03               	skipz
  1235  00FA  28F5               	goto	u285
  1236  00FB  3001               	movlw	1
  1237  00FC  00F8               	movwf	??___lwdiv
  1238  00FD  0878               	movf	??___lwdiv,w
  1239  00FE  07A2               	addwf	___lwdiv@counter,f
  1240  00FF  28F2               	goto	l754
  1241  0100                     l756:	
  1242  0100  3001               	movlw	1
  1243  0101                     u305:	
  1244  0101  1003               	clrc
  1245  0102  0DA0               	rlf	___lwdiv@quotient,f
  1246  0103  0DA1               	rlf	___lwdiv@quotient+1,f
  1247  0104  3EFF               	addlw	-1
  1248  0105  1D03               	skipz
  1249  0106  2901               	goto	u305
  1250  0107  0875               	movf	___lwdiv@divisor+1,w
  1251  0108  0277               	subwf	___lwdiv@dividend+1,w
  1252  0109  1D03               	skipz
  1253  010A  290D               	goto	u315
  1254  010B  0874               	movf	___lwdiv@divisor,w
  1255  010C  0276               	subwf	___lwdiv@dividend,w
  1256  010D                     u315:	
  1257  010D  1C03               	skipc
  1258  010E  2916               	goto	l762
  1259  010F  0874               	movf	___lwdiv@divisor,w
  1260  0110  02F6               	subwf	___lwdiv@dividend,f
  1261  0111  0875               	movf	___lwdiv@divisor+1,w
  1262  0112  1C03               	skipc
  1263  0113  03F7               	decf	___lwdiv@dividend+1,f
  1264  0114  02F7               	subwf	___lwdiv@dividend+1,f
  1265  0115  1420               	bsf	___lwdiv@quotient,0
  1266  0116                     l762:	
  1267  0116  3001               	movlw	1
  1268  0117                     u325:	
  1269  0117  1003               	clrc
  1270  0118  0CF5               	rrf	___lwdiv@divisor+1,f
  1271  0119  0CF4               	rrf	___lwdiv@divisor,f
  1272  011A  3EFF               	addlw	-1
  1273  011B  1D03               	skipz
  1274  011C  2917               	goto	u325
  1275  011D  3001               	movlw	1
  1276  011E  02A2               	subwf	___lwdiv@counter,f
  1277  011F  1D03               	btfss	3,2
  1278  0120  2900               	goto	l756
  1279  0121                     l766:	
  1280  0121  0821               	movf	___lwdiv@quotient+1,w
  1281  0122  00F5               	movwf	?___lwdiv+1
  1282  0123  0820               	movf	___lwdiv@quotient,w
  1283  0124  00F4               	movwf	?___lwdiv
  1284  0125  0008               	return
  1285  0126                     __end_of___lwdiv:	
  1286                           
  1287                           	psect	text6
  1288  01BD                     __ptext6:	
  1289 ;; *************** function _analogRead *****************
  1290 ;; Defined at:
  1291 ;;		line 105 in file "main.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2    4[COMMON] unsigned int 
  1298 ;; Registers used:
  1299 ;;		wreg
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1
  1305 ;;      Params:         2       0       0
  1306 ;;      Locals:         0       0       0
  1307 ;;      Temps:          1       0       0
  1308 ;;      Totals:         3       0       0
  1309 ;;Total ram usage:        3 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _analogRead
  1321  01BD                     _analogRead:	
  1322                           
  1323                           ;main.c: 106: ADCON0bits.ADON = 1;
  1324                           
  1325                           ;incstack = 0
  1326                           ; Regs used in _analogRead: [wreg]
  1327  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1328  01BE  141F               	bsf	31,0	;volatile
  1329                           
  1330                           ;main.c: 107: _delay((unsigned long)((25)*(4000000/4000000.0)));
  1331  01BF  3008               	movlw	8
  1332  01C0  00F6               	movwf	??_analogRead
  1333  01C1                     u707:	
  1334  01C1  0BF6               	decfsz	??_analogRead,f
  1335  01C2  29C1               	goto	u707
  1336                           
  1337                           ;main.c: 108: ADCON0bits.GO_DONE = 1;
  1338  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1339  01C4  149F               	bsf	31,1	;volatile
  1340  01C5                     l35:	
  1341                           ;main.c: 109: while (ADCON0bits.GO_DONE) {}
  1342                           
  1343  01C5  189F               	btfsc	31,1	;volatile
  1344  01C6  29C5               	goto	l35
  1345                           
  1346                           ;main.c: 110: return (ADRESH << 8) | ADRESL;
  1347  01C7  081E               	movf	30,w	;volatile
  1348  01C8  00F5               	movwf	?_analogRead+1
  1349  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1350  01CA  081E               	movf	30,w	;volatile
  1351  01CB  00F4               	movwf	?_analogRead
  1352  01CC  0008               	return
  1353  01CD                     __end_of_analogRead:	
  1354                           
  1355                           	psect	text7
  1356  01AB                     __ptext7:	
  1357 ;; *************** function _InitApp *****************
  1358 ;; Defined at:
  1359 ;;		line 17 in file "user.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;		None               void
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1
  1373 ;;      Params:         0       0       0
  1374 ;;      Locals:         0       0       0
  1375 ;;      Temps:          0       0       0
  1376 ;;      Totals:         0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _InitApp
  1389  01AB                     _InitApp:	
  1390                           
  1391                           ;user.c: 28: TRISIObits.TRISIO0 = 1;
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  1395  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1396  01AC  1405               	bsf	5,0	;volatile
  1397                           
  1398                           ;user.c: 29: TRISIObits.TRISIO1 = 0;
  1399  01AD  1085               	bcf	5,1	;volatile
  1400                           
  1401                           ;user.c: 30: TRISIObits.TRISIO2 = 0;
  1402  01AE  1105               	bcf	5,2	;volatile
  1403                           
  1404                           ;user.c: 31: TRISIObits.TRISIO3 = 1;
  1405  01AF  1585               	bsf	5,3	;volatile
  1406                           
  1407                           ;user.c: 33: TRISIObits.TRISIO5 = 0;
  1408  01B0  1285               	bcf	5,5	;volatile
  1409                           
  1410                           ;user.c: 38: TRISIObits.TRISIO4 = 1;
  1411  01B1  1605               	bsf	5,4	;volatile
  1412                           
  1413                           ;user.c: 39: ANSELbits.ANS3 = 1;
  1414  01B2  159F               	bsf	31,3	;volatile
  1415                           
  1416                           ;user.c: 42: ANSELbits.ADCS = 5;
  1417  01B3  081F               	movf	31,w	;volatile
  1418  01B4  398F               	andlw	-113
  1419  01B5  3850               	iorlw	80
  1420  01B6  009F               	movwf	31	;volatile
  1421                           
  1422                           ;user.c: 43: ADCON0bits.ADFM = 1;
  1423  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1424  01B8  179F               	bsf	31,7	;volatile
  1425                           
  1426                           ;user.c: 44: ADCON0bits.VCFG = 0;
  1427  01B9  131F               	bcf	31,6	;volatile
  1428                           
  1429                           ;user.c: 45: ADCON0bits.CHS = 3;
  1430  01BA  300C               	movlw	12
  1431  01BB  049F               	iorwf	31,f	;volatile
  1432  01BC  0008               	return
  1433  01BD                     __end_of_InitApp:	
  1434                           
  1435                           	psect	text8
  1436  01DE                     __ptext8:	
  1437 ;; *************** function _ConfigureOscillator *****************
  1438 ;; Defined at:
  1439 ;;		line 13 in file "system.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		None
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1
  1453 ;;      Params:         0       0       0
  1454 ;;      Locals:         0       0       0
  1455 ;;      Temps:          0       0       0
  1456 ;;      Totals:         0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _ConfigureOscillator
  1469  01DE                     _ConfigureOscillator:	
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _ConfigureOscillator: []
  1473  01DE  0008               	return
  1474  01DF                     __end_of_ConfigureOscillator:	
  1475                           
  1476                           	psect	text9
  1477  01CD                     __ptext9:	
  1478 ;; *************** function _isr *****************
  1479 ;; Defined at:
  1480 ;;		line 13 in file "interrupts.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		None
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1
  1494 ;;      Params:         0       0       0
  1495 ;;      Locals:         0       0       0
  1496 ;;      Temps:          4       0       0
  1497 ;;      Totals:         4       0       0
  1498 ;;Total ram usage:        4 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		Interrupt level 1
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _isr
  1509  01CD                     _isr:	
  1510  01CD  0873               	movf	??_isr+3,w
  1511  01CE  00FF               	movwf	127
  1512  01CF  0872               	movf	??_isr+2,w
  1513  01D0  008A               	movwf	10
  1514  01D1  0871               	movf	??_isr+1,w
  1515  01D2  0084               	movwf	4
  1516  01D3  0E70               	swapf	??_isr^(0+-128),w
  1517  01D4  0083               	movwf	3
  1518  01D5  0EFE               	swapf	126,f
  1519  01D6  0E7E               	swapf	126,w
  1520  01D7  0009               	retfie
  1521  01D8                     __end_of_isr:	
  1522  007E                     btemp	set	126	;btemp
  1523  007E                     wtemp	set	126
  1524  007E                     wtemp0	set	126
  1525  0080                     wtemp1	set	128
  1526  0082                     wtemp2	set	130
  1527  0084                     wtemp3	set	132
  1528  0086                     wtemp4	set	134
  1529  0088                     wtemp5	set	136
  1530  007F                     wtemp6	set	127
  1531  007E                     ttemp	set	126
  1532  007E                     ttemp0	set	126
  1533  0081                     ttemp1	set	129
  1534  0084                     ttemp2	set	132
  1535  0087                     ttemp3	set	135
  1536  007F                     ttemp4	set	127
  1537  007E                     ltemp	set	126
  1538  007E                     ltemp0	set	126
  1539  0082                     ltemp1	set	130
  1540  0086                     ltemp2	set	134
  1541  0080                     ltemp3	set	128
  1542                           
  1543                           	psect	intentry
  1544  0004                     __pintentry:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _isr: []
  1547                           
  1548  0004                     interrupt_function:	
  1549  007E                     saved_w	set	btemp
  1550  0004  00FE               	movwf	btemp
  1551  0005  0E03               	swapf	3,w
  1552  0006  00F0               	movwf	??_isr
  1553  0007  0804               	movf	4,w
  1554  0008  00F1               	movwf	??_isr+1
  1555  0009  080A               	movf	10,w
  1556  000A  00F2               	movwf	??_isr+2
  1557  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1558  000C  087F               	movf	btemp+1,w
  1559  000D  00F3               	movwf	??_isr+3
  1560  000E  29CD               	ljmp	_isr


Data Sizes:
    Strings     29
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     26      26
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _printf->___lwdiv
    _putch->_DelayTXBitUART
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1385
                                             21 BANK0      5     5      0
                _ConfigureOscillator
                            _InitApp
                         _analogRead
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1351
                                              9 BANK0     12    10      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                3     3      0      46
                                              5 COMMON     3     3      0
                     _DelayTXBitUART
 ---------------------------------------------------------------------------------
 (3) _DelayTXBitUART                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _analogRead                                           3     1      2       0
                                              4 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _analogRead
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _DelayTXBitUART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     1A      1A       4       32.5%
BANK1               20      0       0       5        0.0%
ABS                  0      0      24       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      24       8        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri May  8 02:04:39 2015

                           pc 0002                            l31 01A5                            l35 01C5  
                          l88 00AA                            fsr 0004                           l900 012D  
                         l902 013B                           l910 0154                           l920 002D  
                         l762 0116                           l754 00F2                           l906 0149  
                         l738 0190                           l756 0100                           l766 0121  
                         l942 005D                           l926 0040                           l952 007C  
                         l936 0057                           l960 0019                           l948 0076  
                         l958 0081                           l966 00AD                           l992 00DC  
                         l986 00D7                           u305 0101                           u315 010D  
                         u325 0117                           u285 00F5                           u525 0130  
                         u605 006C                           u545 0141                           u707 01C1  
                         u555 014A                           u677 00B9                           u687 00CA  
                         u697 01DA                           _isr 01CD                           fsr0 0004  
                         indf 0000                          ?_isr 0070                          STR_1 0169  
                        STR_2 017A                          _GPIO 0005                          _main 00AB  
                        btemp 007E                          ltemp 007E                          start 000F  
                        ttemp 007E                          wtemp 007E                 __CFG_IESO$OFF 0000  
             __end_of_InitApp 01BD                         ??_isr 0070                         ?_main 0070  
               __CFG_WDTE$OFF 0000               __end_of___lwdiv 0126               __end_of___lwmod 0159  
         _ConfigureOscillator 01DE                         _sGPIO 0079               __end_of_dpowers 0169  
                       _putch 0186                __CFG_BOREN$OFF 0000                         pclath 000A  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F          ?_ConfigureOscillator 0070  
              __CFG_MCLRE$OFF 0000               __initialization 0010                  __end_of_main 00E9  
                      ??_main 0035                        _ADRESH 001E                        _ADRESL 009E  
                      ?_putch 0070                     ??_InitApp 0074         ??_ConfigureOscillator 0074  
            ??_DelayTXBitUART 0074                     ??___lwdiv 0078                     ??___lwmod 0027  
                      _printf 0013                        saved_w 007E                        putch@c 0076  
     __end_of__initialization 0011                __pcstackCOMMON 0070                 putch@bitcount 0077  
               __end_of_putch 01AB                       ??_putch 0075                    _analogRead 01BD  
                  __pmaintext 00AB                    __pintentry 0004                       ?_printf 0029  
                  __stringtab 0159                       _InitApp 01AB                       ___lwdiv 00E9  
                     ___lwmod 0126                     _ANSELbits 009F                       __ptext1 0013  
                     __ptext2 0186                       __ptext3 01D8                       __ptext4 0126  
                     __ptext5 00E9                       __ptext6 01BD                       __ptext7 01AB  
                     __ptext8 01DE                       __ptext9 01CD               __size_of_printf 0098  
                     _dpowers 015F                  __size_of_isr 000B          end_of_initialization 0011  
                 ?_analogRead 0074                       printf@c 0034                       printf@f 0031  
 __end_of_ConfigureOscillator 01DF                __end_of_printf 00AB           __size_of_analogRead 0010  
         start_initialization 0010                   __end_of_isr 01D8                      ??_printf 002B  
     __size_of_DelayTXBitUART 0006                   __pbssCOMMON 0079                     ___latbits 0000  
               __pcstackBANK0 0020                      ?_InitApp 0070              ___lwdiv@dividend 0076  
                    ?___lwdiv 0074                      ?___lwmod 0023                     __pstrings 0159  
            ___lwdiv@quotient 0020                __size_of_putch 0025             interrupt_function 0004  
                ??_analogRead 0076                      _GPIObits 0005                    _ADCON0bits 001F  
                 __stringbase 015E                    printf@flag 002F                    printf@prec 0030  
          __end_of_analogRead 01CD              __size_of_InitApp 0012              __size_of___lwdiv 003D  
            __size_of___lwmod 0033            __end_of__stringtab 015F                _DelayTXBitUART 01D8  
             ___lwdiv@divisor 0074               ___lwdiv@counter 0022                 __size_of_main 003E  
__size_of_ConfigureOscillator 0001        __end_of_DelayTXBitUART 01DE                     printf@val 0032  
                    main@knob 0038                      intlevel1 0000              ___lwmod@dividend 0025  
                   stringcode 0159                      printf@ap 002E               ?_DelayTXBitUART 0070  
             ___lwmod@divisor 0023               ___lwmod@counter 0028                      stringdir 0159  
                    stringtab 0159            __CFG_FOSC$INTOSCIO 0000                    _TRISIObits 0085  
